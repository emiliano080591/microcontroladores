
practica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00001a10  00001aa4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800070  00800070  00001ab4  2**0
                  ALLOC
  3 .debug_aranges 00000100  00000000  00000000  00001ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001e2  00000000  00000000  00001bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c4f  00000000  00000000  00001d96  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e4a  00000000  00000000  000039e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001464  00000000  00000000  0000482f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000220  00000000  00000000  00005c94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000045f  00000000  00000000  00005eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b88  00000000  00000000  00006313  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00006e9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	32 c0       	rjmp	.+100    	; 0x66 <__ctors_end>
       2:	4c c0       	rjmp	.+152    	; 0x9c <__bad_interrupt>
       4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
       6:	4a c0       	rjmp	.+148    	; 0x9c <__bad_interrupt>
       8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
       a:	48 c0       	rjmp	.+144    	; 0x9c <__bad_interrupt>
       c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
       e:	46 c0       	rjmp	.+140    	; 0x9c <__bad_interrupt>
      10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
      12:	44 c0       	rjmp	.+136    	; 0x9c <__bad_interrupt>
      14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
      16:	42 c0       	rjmp	.+132    	; 0x9c <__bad_interrupt>
      18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
      1a:	40 c0       	rjmp	.+128    	; 0x9c <__bad_interrupt>
      1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
      1e:	3e c0       	rjmp	.+124    	; 0x9c <__bad_interrupt>
      20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
      22:	3c c0       	rjmp	.+120    	; 0x9c <__bad_interrupt>
      24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
      26:	3a c0       	rjmp	.+116    	; 0x9c <__bad_interrupt>
      28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>

0000002a <pstr_inf>:
      2a:	49 4e 46                                            INF

0000002d <pstr_inity>:
      2d:	49 4e 49 54 59                                      INITY

00000032 <pstr_nan>:
      32:	4e 41 4e                                            NAN

00000035 <pwr_m10>:
      35:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      45:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000004d <pwr_p10>:
      4d:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      5d:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000066 <__ctors_end>:
      66:	11 24       	eor	r1, r1
      68:	1f be       	out	0x3f, r1	; 63
      6a:	cf e5       	ldi	r28, 0x5F	; 95
      6c:	d2 e0       	ldi	r29, 0x02	; 2
      6e:	de bf       	out	0x3e, r29	; 62
      70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
      72:	10 e0       	ldi	r17, 0x00	; 0
      74:	a0 e6       	ldi	r26, 0x60	; 96
      76:	b0 e0       	ldi	r27, 0x00	; 0
      78:	e0 e1       	ldi	r30, 0x10	; 16
      7a:	fa e1       	ldi	r31, 0x1A	; 26
      7c:	02 c0       	rjmp	.+4      	; 0x82 <.do_copy_data_start>

0000007e <.do_copy_data_loop>:
      7e:	05 90       	lpm	r0, Z+
      80:	0d 92       	st	X+, r0

00000082 <.do_copy_data_start>:
      82:	a0 37       	cpi	r26, 0x70	; 112
      84:	b1 07       	cpc	r27, r17
      86:	d9 f7       	brne	.-10     	; 0x7e <.do_copy_data_loop>

00000088 <__do_clear_bss>:
      88:	10 e0       	ldi	r17, 0x00	; 0
      8a:	a0 e7       	ldi	r26, 0x70	; 112
      8c:	b0 e0       	ldi	r27, 0x00	; 0
      8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
      90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
      92:	a2 37       	cpi	r26, 0x72	; 114
      94:	b1 07       	cpc	r27, r17
      96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
      98:	22 d0       	rcall	.+68     	; 0xde <main>
      9a:	b8 cc       	rjmp	.-1680   	; 0xfffffa0c <__eeprom_end+0xff7efa0c>

0000009c <__bad_interrupt>:
      9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <init>:


}


void init(){
      9e:	1f 93       	push	r17
      a0:	cf 93       	push	r28
      a2:	df 93       	push	r29
int i;
lcd_init(LCD_DISP_ON); //INICIALIZA LA LDC, EL PUERTO AL QUE ESTÁ CONECTADO PUERTO D
      a4:	8c e0       	ldi	r24, 0x0C	; 12
      a6:	b4 d1       	rcall	.+872    	; 0x410 <lcd_init>
kbrd_init(); //INICIA TECLADO
      a8:	e7 d1       	rcall	.+974    	; 0x478 <kbrd_init>
lcd_home(); //ENVIAR EL PUNTERO A LA POSICION INICIAL
      aa:	85 d1       	rcall	.+778    	; 0x3b6 <lcd_home>
lcd_clrscr();
      ac:	81 d1       	rcall	.+770    	; 0x3b0 <lcd_clrscr>
      ae:	10 e0       	ldi	r17, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      b0:	c0 e2       	ldi	r28, 0x20	; 32
      b2:	de e4       	ldi	r29, 0x4E	; 78
for (i=0;i<16;i++)
{
lcd_gotoxy(i,0);
      b4:	81 2f       	mov	r24, r17
      b6:	60 e0       	ldi	r22, 0x00	; 0
      b8:	71 d1       	rcall	.+738    	; 0x39c <lcd_gotoxy>
      ba:	ce 01       	movw	r24, r28
      bc:	01 97       	sbiw	r24, 0x01	; 1
      be:	f1 f7       	brne	.-4      	; 0xbc <init+0x1e>
_delay_ms(5);
lcd_puts(" ");
      c0:	80 e6       	ldi	r24, 0x60	; 96
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	8d d1       	rcall	.+794    	; 0x3e0 <lcd_puts>
      c6:	1f 5f       	subi	r17, 0xFF	; 255
int i;
lcd_init(LCD_DISP_ON); //INICIALIZA LA LDC, EL PUERTO AL QUE ESTÁ CONECTADO PUERTO D
kbrd_init(); //INICIA TECLADO
lcd_home(); //ENVIAR EL PUNTERO A LA POSICION INICIAL
lcd_clrscr();
for (i=0;i<16;i++)
      c8:	10 31       	cpi	r17, 0x10	; 16
      ca:	a1 f7       	brne	.-24     	; 0xb4 <init+0x16>
      cc:	80 e2       	ldi	r24, 0x20	; 32
      ce:	9e e4       	ldi	r25, 0x4E	; 78
      d0:	01 97       	sbiw	r24, 0x01	; 1
      d2:	f1 f7       	brne	.-4      	; 0xd0 <init+0x32>
_delay_ms(5);
lcd_puts(" ");
}
// IMPRIME EN PANTALLA LCD
_delay_ms(5);
lcd_clrscr();//LIMPIAR LA PANTALLA (CLEAR SCREEN)
      d4:	6d d1       	rcall	.+730    	; 0x3b0 <lcd_clrscr>
}
      d6:	df 91       	pop	r29
      d8:	cf 91       	pop	r28
      da:	1f 91       	pop	r17
      dc:	08 95       	ret

000000de <main>:
#include "lcd.h"

void init();

int main(void)
{
      de:	2f 92       	push	r2
      e0:	3f 92       	push	r3
      e2:	4f 92       	push	r4
      e4:	5f 92       	push	r5
      e6:	6f 92       	push	r6
      e8:	7f 92       	push	r7
      ea:	9f 92       	push	r9
      ec:	af 92       	push	r10
      ee:	bf 92       	push	r11
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	df 93       	push	r29
      fe:	cf 93       	push	r28
     100:	cd b7       	in	r28, 0x3d	; 61
     102:	de b7       	in	r29, 0x3e	; 62
     104:	c0 55       	subi	r28, 0x50	; 80
     106:	d0 40       	sbci	r29, 0x00	; 0
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	0f be       	out	0x3f, r0	; 63
     110:	cd bf       	out	0x3d, r28	; 61
char key_press;

int i=0,a=0,l1=0,l2=0;
char operator='b';
char n1[16],n2[16];
init();
     112:	c5 df       	rcall	.-118    	; 0x9e <init>
     114:	cc 24       	eor	r12, r12
     116:	dd 24       	eor	r13, r13
     118:	aa 24       	eor	r10, r10
     11a:	bb 24       	eor	r11, r11
     11c:	52 e6       	ldi	r21, 0x62	; 98
     11e:	95 2e       	mov	r9, r21
float operator1,operator2,resultado=0.0;
char num1[16],num2[16],res[16];

for (i=0;i<l1;i++)
{
num1[i] = n1[i];
     120:	41 e2       	ldi	r20, 0x21	; 33
     122:	24 2e       	mov	r2, r20
     124:	31 2c       	mov	r3, r1
     126:	2c 0e       	add	r2, r28
     128:	3d 1e       	adc	r3, r29
l2 = a-2;
l1 = i-l2-2;
float operator1,operator2,resultado=0.0;
char num1[16],num2[16],res[16];

for (i=0;i<l1;i++)
     12a:	31 e3       	ldi	r19, 0x31	; 49
     12c:	43 2e       	mov	r4, r19
     12e:	51 2c       	mov	r5, r1
     130:	4c 0e       	add	r4, r28
     132:	5d 1e       	adc	r5, r29
case '+': resultado=operator1+operator2;break;
case '-': resultado=operator1-operator2; break;
case 'x': resultado=operator1*operator2; break;
case '/': resultado=operator1/operator2; break;
}
sprintf(res,"%.2f",resultado);
     134:	21 e4       	ldi	r18, 0x41	; 65
     136:	62 2e       	mov	r6, r18
     138:	71 2c       	mov	r7, r1
     13a:	6c 0e       	add	r6, r28
     13c:	7d 1e       	adc	r7, r29
char operator='b';
char n1[16],n2[16];
init();
while (1)
{
key_press = kbrd_read();
     13e:	cb d1       	rcall	.+918    	; 0x4d6 <kbrd_read>
     140:	18 2f       	mov	r17, r24
if (key_press  != 0)
     142:	88 23       	and	r24, r24
     144:	e1 f3       	breq	.-8      	; 0x13e <main+0x60>
{
lcd_gotoxy(i,0);
     146:	8c 2d       	mov	r24, r12
     148:	60 e0       	ldi	r22, 0x00	; 0
     14a:	28 d1       	rcall	.+592    	; 0x39c <lcd_gotoxy>
lcd_putc(key_press);
     14c:	81 2f       	mov	r24, r17
     14e:	36 d1       	rcall	.+620    	; 0x3bc <lcd_putc>
lcd_putc('_');
     150:	8f e5       	ldi	r24, 0x5F	; 95
     152:	34 d1       	rcall	.+616    	; 0x3bc <lcd_putc>
n1[i] = key_press;
     154:	e1 e0       	ldi	r30, 0x01	; 1
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	ec 0f       	add	r30, r28
     15a:	fd 1f       	adc	r31, r29
     15c:	ec 0d       	add	r30, r12
     15e:	fd 1d       	adc	r31, r13
     160:	10 83       	st	Z, r17
i++;
     162:	08 94       	sec
     164:	c1 1c       	adc	r12, r1
     166:	d1 1c       	adc	r13, r1
if ((key_press == '+'|| key_press =='-'||key_press =='x'||key_press =='/'))
     168:	1b 32       	cpi	r17, 0x2B	; 43
     16a:	29 f4       	brne	.+10     	; 0x176 <main+0x98>
     16c:	aa 24       	eor	r10, r10
     16e:	bb 24       	eor	r11, r11
     170:	9b e2       	ldi	r25, 0x2B	; 43
     172:	99 2e       	mov	r9, r25
     174:	0e c0       	rjmp	.+28     	; 0x192 <main+0xb4>
     176:	1d 32       	cpi	r17, 0x2D	; 45
     178:	49 f0       	breq	.+18     	; 0x18c <main+0xae>
     17a:	18 37       	cpi	r17, 0x78	; 120
     17c:	39 f0       	breq	.+14     	; 0x18c <main+0xae>
     17e:	1f 32       	cpi	r17, 0x2F	; 47
     180:	41 f4       	brne	.+16     	; 0x192 <main+0xb4>
     182:	aa 24       	eor	r10, r10
     184:	bb 24       	eor	r11, r11
     186:	8f e2       	ldi	r24, 0x2F	; 47
     188:	98 2e       	mov	r9, r24
     18a:	03 c0       	rjmp	.+6      	; 0x192 <main+0xb4>
     18c:	91 2e       	mov	r9, r17
     18e:	aa 24       	eor	r10, r10
     190:	bb 24       	eor	r11, r11
{
a = 0;
operator = key_press;
}
n2[a] = key_press;
     192:	e1 e1       	ldi	r30, 0x11	; 17
     194:	f0 e0       	ldi	r31, 0x00	; 0
     196:	ec 0f       	add	r30, r28
     198:	fd 1f       	adc	r31, r29
     19a:	ea 0d       	add	r30, r10
     19c:	fb 1d       	adc	r31, r11
     19e:	10 83       	st	Z, r17
a++;
     1a0:	08 94       	sec
     1a2:	a1 1c       	adc	r10, r1
     1a4:	b1 1c       	adc	r11, r1
}
if (key_press == '=')
     1a6:	1d 33       	cpi	r17, 0x3D	; 61
     1a8:	51 f6       	brne	.-108    	; 0x13e <main+0x60>
{
// lcd_clrscr();
l2 = a-2;
l1 = i-l2-2;
     1aa:	b5 01       	movw	r22, r10
     1ac:	62 50       	subi	r22, 0x02	; 2
     1ae:	70 40       	sbci	r23, 0x00	; 0
     1b0:	a6 01       	movw	r20, r12
     1b2:	4a 19       	sub	r20, r10
     1b4:	5b 09       	sbc	r21, r11
     1b6:	20 e0       	ldi	r18, 0x00	; 0
     1b8:	30 e0       	ldi	r19, 0x00	; 0
     1ba:	0d c0       	rjmp	.+26     	; 0x1d6 <main+0xf8>
float operator1,operator2,resultado=0.0;
char num1[16],num2[16],res[16];

for (i=0;i<l1;i++)
{
num1[i] = n1[i];
     1bc:	f1 01       	movw	r30, r2
     1be:	e2 0f       	add	r30, r18
     1c0:	f3 1f       	adc	r31, r19
     1c2:	a1 e0       	ldi	r26, 0x01	; 1
     1c4:	b0 e0       	ldi	r27, 0x00	; 0
     1c6:	ac 0f       	add	r26, r28
     1c8:	bd 1f       	adc	r27, r29
     1ca:	a2 0f       	add	r26, r18
     1cc:	b3 1f       	adc	r27, r19
     1ce:	8c 91       	ld	r24, X
     1d0:	80 83       	st	Z, r24
l2 = a-2;
l1 = i-l2-2;
float operator1,operator2,resultado=0.0;
char num1[16],num2[16],res[16];

for (i=0;i<l1;i++)
     1d2:	2f 5f       	subi	r18, 0xFF	; 255
     1d4:	3f 4f       	sbci	r19, 0xFF	; 255
     1d6:	24 17       	cp	r18, r20
     1d8:	35 07       	cpc	r19, r21
     1da:	84 f3       	brlt	.-32     	; 0x1bc <main+0xde>
     1dc:	d2 01       	movw	r26, r4
     1de:	cc 24       	eor	r12, r12
     1e0:	dd 24       	eor	r13, r13
     1e2:	0b c0       	rjmp	.+22     	; 0x1fa <main+0x11c>
{
num1[i] = n1[i];
}
for (i=0;i<l2;i++)
{
num2[i] = n2[i+1];
     1e4:	08 94       	sec
     1e6:	c1 1c       	adc	r12, r1
     1e8:	d1 1c       	adc	r13, r1
     1ea:	e1 e1       	ldi	r30, 0x11	; 17
     1ec:	f0 e0       	ldi	r31, 0x00	; 0
     1ee:	ec 0f       	add	r30, r28
     1f0:	fd 1f       	adc	r31, r29
     1f2:	ec 0d       	add	r30, r12
     1f4:	fd 1d       	adc	r31, r13
     1f6:	80 81       	ld	r24, Z
     1f8:	8d 93       	st	X+, r24

for (i=0;i<l1;i++)
{
num1[i] = n1[i];
}
for (i=0;i<l2;i++)
     1fa:	c6 16       	cp	r12, r22
     1fc:	d7 06       	cpc	r13, r23
     1fe:	94 f3       	brlt	.-28     	; 0x1e4 <main+0x106>
     200:	80 e2       	ldi	r24, 0x20	; 32
     202:	9e e4       	ldi	r25, 0x4E	; 78
     204:	01 97       	sbiw	r24, 0x01	; 1
     206:	f1 f7       	brne	.-4      	; 0x204 <main+0x126>
{
num2[i] = n2[i+1];
}
_delay_ms(5);
operator1 = atof(num1);
     208:	c1 01       	movw	r24, r2
     20a:	90 d7       	rcall	.+3872   	; 0x112c <atof>
     20c:	7b 01       	movw	r14, r22
     20e:	8c 01       	movw	r16, r24
operator2 = atof(num2);
     210:	c2 01       	movw	r24, r4
     212:	8c d7       	rcall	.+3864   	; 0x112c <atof>
     214:	9b 01       	movw	r18, r22
     216:	ac 01       	movw	r20, r24

switch(operator){
     218:	8f e2       	ldi	r24, 0x2F	; 47
     21a:	98 16       	cp	r9, r24
     21c:	e9 f0       	breq	.+58     	; 0x258 <main+0x17a>
     21e:	89 15       	cp	r24, r9
     220:	38 f0       	brcs	.+14     	; 0x230 <main+0x152>
     222:	9b e2       	ldi	r25, 0x2B	; 43
     224:	99 16       	cp	r9, r25
     226:	61 f0       	breq	.+24     	; 0x240 <main+0x162>
     228:	ed e2       	ldi	r30, 0x2D	; 45
     22a:	9e 16       	cp	r9, r30
     22c:	21 f4       	brne	.+8      	; 0x236 <main+0x158>
     22e:	0c c0       	rjmp	.+24     	; 0x248 <main+0x16a>
     230:	f8 e7       	ldi	r31, 0x78	; 120
     232:	9f 16       	cp	r9, r31
     234:	69 f0       	breq	.+26     	; 0x250 <main+0x172>
     236:	a0 e0       	ldi	r26, 0x00	; 0
     238:	70 e0       	ldi	r23, 0x00	; 0
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	60 e0       	ldi	r22, 0x00	; 0
     23e:	11 c0       	rjmp	.+34     	; 0x262 <__stack+0x3>
case '+': resultado=operator1+operator2;break;
     240:	c8 01       	movw	r24, r16
     242:	b7 01       	movw	r22, r14
     244:	2c d4       	rcall	.+2136   	; 0xa9e <__addsf3>
     246:	0b c0       	rjmp	.+22     	; 0x25e <main+0x180>
case '-': resultado=operator1-operator2; break;
     248:	c8 01       	movw	r24, r16
     24a:	b7 01       	movw	r22, r14
     24c:	fd d3       	rcall	.+2042   	; 0xa48 <__subsf3>
     24e:	07 c0       	rjmp	.+14     	; 0x25e <main+0x180>
case 'x': resultado=operator1*operator2; break;
     250:	c8 01       	movw	r24, r16
     252:	b7 01       	movw	r22, r14
     254:	4b d4       	rcall	.+2198   	; 0xaec <__mulsf3>
     256:	03 c0       	rjmp	.+6      	; 0x25e <main+0x180>
case '/': resultado=operator1/operator2; break;
     258:	c8 01       	movw	r24, r16
     25a:	b7 01       	movw	r22, r14
     25c:	3c d5       	rcall	.+2680   	; 0xcd6 <__divsf3>
     25e:	a6 2f       	mov	r26, r22
     260:	69 2f       	mov	r22, r25
}
sprintf(res,"%.2f",resultado);
     262:	2d b7       	in	r18, 0x3d	; 61
     264:	3e b7       	in	r19, 0x3e	; 62
     266:	28 50       	subi	r18, 0x08	; 8
     268:	30 40       	sbci	r19, 0x00	; 0
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	3e bf       	out	0x3e, r19	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	2d bf       	out	0x3d, r18	; 61
     274:	0d b7       	in	r16, 0x3d	; 61
     276:	1e b7       	in	r17, 0x3e	; 62
     278:	0f 5f       	subi	r16, 0xFF	; 255
     27a:	1f 4f       	sbci	r17, 0xFF	; 255
     27c:	ed b7       	in	r30, 0x3d	; 61
     27e:	fe b7       	in	r31, 0x3e	; 62
     280:	72 82       	std	Z+2, r7	; 0x02
     282:	61 82       	std	Z+1, r6	; 0x01
     284:	22 e6       	ldi	r18, 0x62	; 98
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	f8 01       	movw	r30, r16
     28a:	33 83       	std	Z+3, r19	; 0x03
     28c:	22 83       	std	Z+2, r18	; 0x02
     28e:	2a 2f       	mov	r18, r26
     290:	37 2f       	mov	r19, r23
     292:	48 2f       	mov	r20, r24
     294:	56 2f       	mov	r21, r22
     296:	c9 01       	movw	r24, r18
     298:	da 01       	movw	r26, r20
     29a:	84 83       	std	Z+4, r24	; 0x04
     29c:	95 83       	std	Z+5, r25	; 0x05
     29e:	a6 83       	std	Z+6, r26	; 0x06
     2a0:	b7 83       	std	Z+7, r27	; 0x07
     2a2:	47 d7       	rcall	.+3726   	; 0x1132 <sprintf>
lcd_gotoxy(0,1);
     2a4:	2d b7       	in	r18, 0x3d	; 61
     2a6:	3e b7       	in	r19, 0x3e	; 62
     2a8:	28 5f       	subi	r18, 0xF8	; 248
     2aa:	3f 4f       	sbci	r19, 0xFF	; 255
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	3e bf       	out	0x3e, r19	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	2d bf       	out	0x3d, r18	; 61
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	61 e0       	ldi	r22, 0x01	; 1
     2ba:	70 d0       	rcall	.+224    	; 0x39c <lcd_gotoxy>
lcd_puts(res);
     2bc:	c3 01       	movw	r24, r6
     2be:	90 d0       	rcall	.+288    	; 0x3e0 <lcd_puts>
     2c0:	3e cf       	rjmp	.-388    	; 0x13e <main+0x60>

000002c2 <lcd_write>:
static void lcd_write(uint8_t data,uint8_t rs) 
{
    unsigned char dataBits ;


    if (rs) {   /* write data        (RS=1, RW=0) */
     2c2:	66 23       	and	r22, r22
     2c4:	11 f0       	breq	.+4      	; 0x2ca <lcd_write+0x8>
       lcd_rs_high();
     2c6:	90 9a       	sbi	0x12, 0	; 18
     2c8:	01 c0       	rjmp	.+2      	; 0x2cc <lcd_write+0xa>
    } else {    /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     2ca:	90 98       	cbi	0x12, 0	; 18
    }
    lcd_rw_low();
     2cc:	91 98       	cbi	0x12, 1	; 18
        LCD_DATA0_PORT = dataBits | 0x0F;
    }
    else
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     2ce:	8c 9a       	sbi	0x11, 4	; 17
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     2d0:	8d 9a       	sbi	0x11, 5	; 17
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     2d2:	8e 9a       	sbi	0x11, 6	; 17
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     2d4:	8f 9a       	sbi	0x11, 7	; 17
        
        /* output high nibble first */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     2d6:	97 98       	cbi	0x12, 7	; 18
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     2d8:	96 98       	cbi	0x12, 6	; 18
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     2da:	95 98       	cbi	0x12, 5	; 18
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     2dc:	94 98       	cbi	0x12, 4	; 18
    	if(data & 0x80) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     2de:	87 fd       	sbrc	r24, 7
     2e0:	97 9a       	sbi	0x12, 7	; 18
    	if(data & 0x40) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     2e2:	86 fd       	sbrc	r24, 6
     2e4:	96 9a       	sbi	0x12, 6	; 18
    	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     2e6:	85 fd       	sbrc	r24, 5
     2e8:	95 9a       	sbi	0x12, 5	; 18
    	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
     2ea:	84 fd       	sbrc	r24, 4
     2ec:	94 9a       	sbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     2ee:	92 9a       	sbi	0x12, 2	; 18
    lcd_e_delay();
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <lcd_write+0x30>
    lcd_e_low();
     2f2:	92 98       	cbi	0x12, 2	; 18
    	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
    	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
        lcd_e_toggle();
        
        /* output low nibble */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     2f4:	97 98       	cbi	0x12, 7	; 18
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     2f6:	96 98       	cbi	0x12, 6	; 18
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     2f8:	95 98       	cbi	0x12, 5	; 18
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     2fa:	94 98       	cbi	0x12, 4	; 18
    	if(data & 0x08) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     2fc:	83 fd       	sbrc	r24, 3
     2fe:	97 9a       	sbi	0x12, 7	; 18
    	if(data & 0x04) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     300:	82 fd       	sbrc	r24, 2
     302:	96 9a       	sbi	0x12, 6	; 18
    	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     304:	81 fd       	sbrc	r24, 1
     306:	95 9a       	sbi	0x12, 5	; 18
    	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     308:	80 fd       	sbrc	r24, 0
     30a:	94 9a       	sbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     30c:	92 9a       	sbi	0x12, 2	; 18
    lcd_e_delay();
     30e:	00 c0       	rjmp	.+0      	; 0x310 <lcd_write+0x4e>
    lcd_e_low();
     310:	92 98       	cbi	0x12, 2	; 18
    	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
    	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
        lcd_e_toggle();        
        
        /* all data pins high (inactive) */
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     312:	94 9a       	sbi	0x12, 4	; 18
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     314:	95 9a       	sbi	0x12, 5	; 18
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     316:	96 9a       	sbi	0x12, 6	; 18
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     318:	97 9a       	sbi	0x12, 7	; 18
    }
}
     31a:	08 95       	ret

0000031c <lcd_read>:
static uint8_t lcd_read(uint8_t rs) 
{
    uint8_t data;
    
    
    if (rs)
     31c:	88 23       	and	r24, r24
     31e:	11 f0       	breq	.+4      	; 0x324 <lcd_read+0x8>
        lcd_rs_high();                       /* RS=1: read data      */
     320:	90 9a       	sbi	0x12, 0	; 18
     322:	01 c0       	rjmp	.+2      	; 0x326 <lcd_read+0xa>
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     324:	90 98       	cbi	0x12, 0	; 18
    lcd_rw_high();                           /* RW=1  read mode      */
     326:	91 9a       	sbi	0x12, 1	; 18
        lcd_e_low();
    }
    else
    {
        /* configure data pins as input */
        DDR(LCD_DATA0_PORT) &= ~_BV(LCD_DATA0_PIN);
     328:	8c 98       	cbi	0x11, 4	; 17
        DDR(LCD_DATA1_PORT) &= ~_BV(LCD_DATA1_PIN);
     32a:	8d 98       	cbi	0x11, 5	; 17
        DDR(LCD_DATA2_PORT) &= ~_BV(LCD_DATA2_PIN);
     32c:	8e 98       	cbi	0x11, 6	; 17
        DDR(LCD_DATA3_PORT) &= ~_BV(LCD_DATA3_PIN);
     32e:	8f 98       	cbi	0x11, 7	; 17
                
        /* read high nibble first */
        lcd_e_high();
     330:	92 9a       	sbi	0x12, 2	; 18
        lcd_e_delay();        
     332:	00 c0       	rjmp	.+0      	; 0x334 <lcd_read+0x18>
        data = 0;
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x10;
     334:	84 9b       	sbis	0x10, 4	; 16
     336:	02 c0       	rjmp	.+4      	; 0x33c <lcd_read+0x20>
     338:	80 e1       	ldi	r24, 0x10	; 16
     33a:	01 c0       	rjmp	.+2      	; 0x33e <lcd_read+0x22>
     33c:	80 e0       	ldi	r24, 0x00	; 0
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x20;
     33e:	85 99       	sbic	0x10, 5	; 16
     340:	80 62       	ori	r24, 0x20	; 32
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x40;
     342:	86 99       	sbic	0x10, 6	; 16
     344:	80 64       	ori	r24, 0x40	; 64
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x80;
     346:	87 99       	sbic	0x10, 7	; 16
     348:	80 68       	ori	r24, 0x80	; 128
        lcd_e_low();
     34a:	92 98       	cbi	0x12, 2	; 18

        lcd_e_delay();                       /* Enable 500ns low       */
     34c:	00 c0       	rjmp	.+0      	; 0x34e <lcd_read+0x32>
    
        /* read low nibble */    
        lcd_e_high();
     34e:	92 9a       	sbi	0x12, 2	; 18
        lcd_e_delay();
     350:	00 c0       	rjmp	.+0      	; 0x352 <lcd_read+0x36>
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x01;
     352:	84 99       	sbic	0x10, 4	; 16
     354:	81 60       	ori	r24, 0x01	; 1
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x02;
     356:	85 99       	sbic	0x10, 5	; 16
     358:	82 60       	ori	r24, 0x02	; 2
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
     35a:	86 99       	sbic	0x10, 6	; 16
     35c:	84 60       	ori	r24, 0x04	; 4
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
     35e:	87 99       	sbic	0x10, 7	; 16
     360:	88 60       	ori	r24, 0x08	; 8
        lcd_e_low();
     362:	92 98       	cbi	0x12, 2	; 18
    }
    return data;
}
     364:	08 95       	ret

00000366 <lcd_waitbusy>:

{
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	d9 df       	rcall	.-78     	; 0x31c <lcd_read>
     36a:	87 fd       	sbrc	r24, 7
     36c:	fc cf       	rjmp	.-8      	; 0x366 <lcd_waitbusy>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     36e:	88 e0       	ldi	r24, 0x08	; 8
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <lcd_waitbusy+0xc>
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(2);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	d1 df       	rcall	.-94     	; 0x31c <lcd_read>
    
}/* lcd_waitbusy */
     37a:	08 95       	ret

0000037c <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
     37c:	1f 93       	push	r17
     37e:	18 2f       	mov	r17, r24
    lcd_waitbusy();
     380:	f2 df       	rcall	.-28     	; 0x366 <lcd_waitbusy>
    lcd_write(cmd,0);
     382:	81 2f       	mov	r24, r17
     384:	60 e0       	ldi	r22, 0x00	; 0
     386:	9d df       	rcall	.-198    	; 0x2c2 <lcd_write>
}
     388:	1f 91       	pop	r17
     38a:	08 95       	ret

0000038c <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
     38c:	1f 93       	push	r17
     38e:	18 2f       	mov	r17, r24
    lcd_waitbusy();
     390:	ea df       	rcall	.-44     	; 0x366 <lcd_waitbusy>
    lcd_write(data,1);
     392:	81 2f       	mov	r24, r17
     394:	61 e0       	ldi	r22, 0x01	; 1
     396:	95 df       	rcall	.-214    	; 0x2c2 <lcd_write>
}
     398:	1f 91       	pop	r17
     39a:	08 95       	ret

0000039c <lcd_gotoxy>:
{
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
     39c:	66 23       	and	r22, r22
     39e:	11 f4       	brne	.+4      	; 0x3a4 <lcd_gotoxy+0x8>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
     3a0:	80 58       	subi	r24, 0x80	; 128
     3a2:	01 c0       	rjmp	.+2      	; 0x3a6 <lcd_gotoxy+0xa>
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
     3a4:	80 54       	subi	r24, 0x40	; 64
     3a6:	ea df       	rcall	.-44     	; 0x37c <lcd_command>
     3a8:	08 95       	ret

000003aa <lcd_getxy>:

/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    return lcd_waitbusy();
     3aa:	dd df       	rcall	.-70     	; 0x366 <lcd_waitbusy>
}
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	08 95       	ret

000003b0 <lcd_clrscr>:
/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    lcd_command(1<<LCD_CLR);
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	e4 df       	rcall	.-56     	; 0x37c <lcd_command>
}
     3b4:	08 95       	ret

000003b6 <lcd_home>:
/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    lcd_command(1<<LCD_HOME);
     3b6:	82 e0       	ldi	r24, 0x02	; 2
     3b8:	e1 df       	rcall	.-62     	; 0x37c <lcd_command>
}
     3ba:	08 95       	ret

000003bc <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
     3bc:	1f 93       	push	r17
     3be:	18 2f       	mov	r17, r24
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
     3c0:	d2 df       	rcall	.-92     	; 0x366 <lcd_waitbusy>
    if (c=='\n')
     3c2:	1a 30       	cpi	r17, 0x0A	; 10
     3c4:	41 f4       	brne	.+16     	; 0x3d6 <lcd_putc+0x1a>

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
     3c6:	80 34       	cpi	r24, 0x40	; 64
     3c8:	10 f0       	brcs	.+4      	; 0x3ce <lcd_putc+0x12>
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	01 c0       	rjmp	.+2      	; 0x3d0 <lcd_putc+0x14>
     3ce:	80 e4       	ldi	r24, 0x40	; 64
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
     3d0:	80 58       	subi	r24, 0x80	; 128
     3d2:	d4 df       	rcall	.-88     	; 0x37c <lcd_command>
     3d4:	03 c0       	rjmp	.+6      	; 0x3dc <lcd_putc+0x20>
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     3d6:	81 2f       	mov	r24, r17
     3d8:	61 e0       	ldi	r22, 0x01	; 1
     3da:	73 df       	rcall	.-282    	; 0x2c2 <lcd_write>
    }

}/* lcd_putc */
     3dc:	1f 91       	pop	r17
     3de:	08 95       	ret

000003e0 <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	ec 01       	movw	r28, r24
     3e6:	01 c0       	rjmp	.+2      	; 0x3ea <lcd_puts+0xa>
    register char c;

    while ( (c = *s++) ) {
        lcd_putc(c);
     3e8:	e9 df       	rcall	.-46     	; 0x3bc <lcd_putc>
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = *s++) ) {
     3ea:	89 91       	ld	r24, Y+
     3ec:	88 23       	and	r24, r24
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <lcd_puts+0x8>
        lcd_putc(c);
    }

}/* lcd_puts */
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	ec 01       	movw	r28, r24
     3fc:	01 c0       	rjmp	.+2      	; 0x400 <lcd_puts_p+0xa>
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
     3fe:	de df       	rcall	.-68     	; 0x3bc <lcd_putc>
     400:	fe 01       	movw	r30, r28
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
     402:	21 96       	adiw	r28, 0x01	; 1
     404:	84 91       	lpm	r24, Z+
     406:	88 23       	and	r24, r24
     408:	d1 f7       	brne	.-12     	; 0x3fe <lcd_puts_p+0x8>
        lcd_putc(c);
    }

}/* lcd_puts_p */
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	08 95       	ret

00000410 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     410:	1f 93       	push	r17
     412:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     414:	88 9a       	sbi	0x11, 0	; 17
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     416:	89 9a       	sbi	0x11, 1	; 17
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     418:	8a 9a       	sbi	0x11, 2	; 17
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     41a:	8c 9a       	sbi	0x11, 4	; 17
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     41c:	8d 9a       	sbi	0x11, 5	; 17
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     41e:	8e 9a       	sbi	0x11, 6	; 17
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     420:	8f 9a       	sbi	0x11, 7	; 17
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	9a ef       	ldi	r25, 0xFA	; 250
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <lcd_init+0x16>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     42a:	95 9a       	sbi	0x12, 5	; 18
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     42c:	94 9a       	sbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     42e:	92 9a       	sbi	0x12, 2	; 18
    lcd_e_delay();
     430:	00 c0       	rjmp	.+0      	; 0x432 <lcd_init+0x22>
    lcd_e_low();
     432:	92 98       	cbi	0x12, 2	; 18
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	9e e4       	ldi	r25, 0x4E	; 78
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	f1 f7       	brne	.-4      	; 0x438 <lcd_init+0x28>

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     43c:	92 9a       	sbi	0x12, 2	; 18
    lcd_e_delay();
     43e:	00 c0       	rjmp	.+0      	; 0x440 <lcd_init+0x30>
    lcd_e_low();
     440:	92 98       	cbi	0x12, 2	; 18
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     442:	80 e0       	ldi	r24, 0x00	; 0
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	fc 01       	movw	r30, r24
     448:	31 97       	sbiw	r30, 0x01	; 1
     44a:	f1 f7       	brne	.-4      	; 0x448 <lcd_init+0x38>

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     44c:	92 9a       	sbi	0x12, 2	; 18
    lcd_e_delay();
     44e:	00 c0       	rjmp	.+0      	; 0x450 <lcd_init+0x40>
    lcd_e_low();
     450:	92 98       	cbi	0x12, 2	; 18
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     452:	fc 01       	movw	r30, r24
     454:	31 97       	sbiw	r30, 0x01	; 1
     456:	f1 f7       	brne	.-4      	; 0x454 <lcd_init+0x44>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     458:	94 98       	cbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     45a:	92 9a       	sbi	0x12, 2	; 18
    lcd_e_delay();
     45c:	00 c0       	rjmp	.+0      	; 0x45e <lcd_init+0x4e>
    lcd_e_low();
     45e:	92 98       	cbi	0x12, 2	; 18
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <lcd_init+0x50>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     464:	88 e2       	ldi	r24, 0x28	; 40
     466:	8a df       	rcall	.-236    	; 0x37c <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     468:	88 e0       	ldi	r24, 0x08	; 8
     46a:	88 df       	rcall	.-240    	; 0x37c <lcd_command>
    
	
	//lcd_clrscr();                           /* display clear                */ 
	lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     46c:	86 e0       	ldi	r24, 0x06	; 6
     46e:	86 df       	rcall	.-244    	; 0x37c <lcd_command>
	lcd_command(dispAttr);                  /* display/cursor control       */
     470:	81 2f       	mov	r24, r17
     472:	84 df       	rcall	.-248    	; 0x37c <lcd_command>

}/* lcd_init */
     474:	1f 91       	pop	r17
     476:	08 95       	ret

00000478 <kbrd_init>:
 void reset_columns(void);

void kbrd_init()
{
	//Column pins are Outputs
	KBRD_C0_DDR |= (1<<KBRD_C0_PIN);
     478:	a0 9a       	sbi	0x14, 0	; 20
	KBRD_C1_DDR |= (1<<KBRD_C1_PIN);
     47a:	a1 9a       	sbi	0x14, 1	; 20
	KBRD_C2_DDR |= (1<<KBRD_C2_PIN);
     47c:	a2 9a       	sbi	0x14, 2	; 20
	KBRD_C3_DDR |= (1<<KBRD_C3_PIN);
     47e:	a3 9a       	sbi	0x14, 3	; 20
	
	//Row pins are Inputs
	KBRD_F0_DDR &= ~(1<<KBRD_F0_PIN);
     480:	a4 98       	cbi	0x14, 4	; 20
	KBRD_F1_DDR &= ~(1<<KBRD_F1_PIN);
     482:	a5 98       	cbi	0x14, 5	; 20
	KBRD_F2_DDR &= ~(1<<KBRD_F2_PIN);
     484:	a6 98       	cbi	0x14, 6	; 20
	KBRD_F3_DDR &= ~(1<<KBRD_F3_PIN);
     486:	a7 98       	cbi	0x14, 7	; 20
	
	
	//enable pull ups on row pins
	KBRD_F0_PORT |= (1<<KBRD_F0_PIN);
     488:	ac 9a       	sbi	0x15, 4	; 21
	KBRD_F1_PORT |= (1<<KBRD_F1_PIN);
     48a:	ad 9a       	sbi	0x15, 5	; 21
	KBRD_F2_PORT |= (1<<KBRD_F2_PIN);
     48c:	ae 9a       	sbi	0x15, 6	; 21
	KBRD_F3_PORT |= (1<<KBRD_F3_PIN);
     48e:	af 9a       	sbi	0x15, 7	; 21
	// Put Ones in Columns
	KBRD_C0_PORT |= (1<<KBRD_C0_PIN);
     490:	a8 9a       	sbi	0x15, 0	; 21
	KBRD_C1_PORT |= (1<<KBRD_C1_PIN);
     492:	a9 9a       	sbi	0x15, 1	; 21
	KBRD_C2_PORT |= (1<<KBRD_C2_PIN);
     494:	aa 9a       	sbi	0x15, 2	; 21
	KBRD_C3_PORT |= (1<<KBRD_C3_PIN);
     496:	ab 9a       	sbi	0x15, 3	; 21
	

}
     498:	08 95       	ret

0000049a <activate_column>:
}

//FIXME: 
void activate_column(unsigned char column)
{
	if(column == 0)
     49a:	88 23       	and	r24, r24
     49c:	19 f4       	brne	.+6      	; 0x4a4 <activate_column+0xa>
	{
		KBRD_C0_PORT &= ~(1<< KBRD_C0_PIN);
     49e:	a8 98       	cbi	0x15, 0	; 21
		KBRD_C1_PORT |= (1<< KBRD_C1_PIN);
     4a0:	a9 9a       	sbi	0x15, 1	; 21
     4a2:	04 c0       	rjmp	.+8      	; 0x4ac <activate_column+0x12>
		KBRD_C2_PORT |= (1<< KBRD_C2_PIN);
		KBRD_C3_PORT |= (1<< KBRD_C3_PIN);	
		
	}
	 if(column == 1)
     4a4:	81 30       	cpi	r24, 0x01	; 1
     4a6:	21 f4       	brne	.+8      	; 0x4b0 <activate_column+0x16>
	{
		KBRD_C0_PORT |= (1<< KBRD_C0_PIN);
     4a8:	a8 9a       	sbi	0x15, 0	; 21
		KBRD_C1_PORT &= ~(1<< KBRD_C1_PIN);
     4aa:	a9 98       	cbi	0x15, 1	; 21
		KBRD_C2_PORT |= (1<< KBRD_C2_PIN);
     4ac:	aa 9a       	sbi	0x15, 2	; 21
     4ae:	05 c0       	rjmp	.+10     	; 0x4ba <activate_column+0x20>
		KBRD_C3_PORT |= (1<< KBRD_C3_PIN);
			
	}
	if(column == 2)
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	29 f4       	brne	.+10     	; 0x4be <activate_column+0x24>
	{
		KBRD_C0_PORT |= (1<< KBRD_C0_PIN);
     4b4:	a8 9a       	sbi	0x15, 0	; 21
		KBRD_C1_PORT |= (1<< KBRD_C1_PIN);
     4b6:	a9 9a       	sbi	0x15, 1	; 21
		KBRD_C2_PORT &= ~(1<< KBRD_C2_PIN);
     4b8:	aa 98       	cbi	0x15, 2	; 21
		KBRD_C3_PORT |= (1<< KBRD_C3_PIN);
     4ba:	ab 9a       	sbi	0x15, 3	; 21
     4bc:	08 95       	ret
			
	}
	//FIXME: completar para un teclado 4x4
	if(column == 3)
     4be:	83 30       	cpi	r24, 0x03	; 3
     4c0:	21 f4       	brne	.+8      	; 0x4ca <activate_column+0x30>
	{
		KBRD_C0_PORT |= (1<< KBRD_C0_PIN);
     4c2:	a8 9a       	sbi	0x15, 0	; 21
		KBRD_C1_PORT |= (1<< KBRD_C1_PIN);
     4c4:	a9 9a       	sbi	0x15, 1	; 21
		KBRD_C2_PORT |= (1<< KBRD_C2_PIN);
     4c6:	aa 9a       	sbi	0x15, 2	; 21
		KBRD_C3_PORT &= ~(1<< KBRD_C3_PIN);
     4c8:	ab 98       	cbi	0x15, 3	; 21
     4ca:	08 95       	ret

000004cc <reset_columns>:


void reset_columns()
{
	
	KBRD_C0_PORT |= (1<< KBRD_C0_PIN);
     4cc:	a8 9a       	sbi	0x15, 0	; 21
	KBRD_C1_PORT |= (1<< KBRD_C1_PIN);	
     4ce:	a9 9a       	sbi	0x15, 1	; 21
	KBRD_C2_PORT |= (1<< KBRD_C2_PIN);
     4d0:	aa 9a       	sbi	0x15, 2	; 21
	KBRD_C3_PORT |= (1<< KBRD_C3_PIN);	
     4d2:	ab 9a       	sbi	0x15, 3	; 21
		
}
     4d4:	08 95       	ret

000004d6 <kbrd_read>:
	

}

char kbrd_read(void)
{
     4d6:	1f 93       	push	r17
	//reset_columns();
	char tecla=0;
	//verify first column
	activate_column(0);
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	df df       	rcall	.-66     	; 0x49a <activate_column>
     4dc:	88 ea       	ldi	r24, 0xA8	; 168
     4de:	91 e6       	ldi	r25, 0x61	; 97
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <kbrd_read+0xa>

	_delay_ms(KBRD_DELAY);

	switch(KBRD_ROW_MASK_AL())
     4e4:	43 b3       	in	r20, 0x13	; 19
     4e6:	63 b3       	in	r22, 0x13	; 19
     4e8:	83 b3       	in	r24, 0x13	; 19
     4ea:	23 b3       	in	r18, 0x13	; 19
     4ec:	70 e0       	ldi	r23, 0x00	; 0
     4ee:	6f 6d       	ori	r22, 0xDF	; 223
     4f0:	7f 6f       	ori	r23, 0xFF	; 255
     4f2:	60 95       	com	r22
     4f4:	70 95       	com	r23
     4f6:	f5 e0       	ldi	r31, 0x05	; 5
     4f8:	75 95       	asr	r23
     4fa:	67 95       	ror	r22
     4fc:	fa 95       	dec	r31
     4fe:	e1 f7       	brne	.-8      	; 0x4f8 <kbrd_read+0x22>
     500:	66 0f       	add	r22, r22
     502:	77 1f       	adc	r23, r23
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	8f 6b       	ori	r24, 0xBF	; 191
     508:	9f 6f       	ori	r25, 0xFF	; 255
     50a:	80 95       	com	r24
     50c:	90 95       	com	r25
     50e:	56 e0       	ldi	r21, 0x06	; 6
     510:	95 95       	asr	r25
     512:	87 95       	ror	r24
     514:	5a 95       	dec	r21
     516:	e1 f7       	brne	.-8      	; 0x510 <kbrd_read+0x3a>
     518:	88 0f       	add	r24, r24
     51a:	99 1f       	adc	r25, r25
     51c:	88 0f       	add	r24, r24
     51e:	99 1f       	adc	r25, r25
     520:	68 2b       	or	r22, r24
     522:	79 2b       	or	r23, r25
     524:	50 e0       	ldi	r21, 0x00	; 0
     526:	4f 6e       	ori	r20, 0xEF	; 239
     528:	5f 6f       	ori	r21, 0xFF	; 255
     52a:	40 95       	com	r20
     52c:	50 95       	com	r21
     52e:	14 e0       	ldi	r17, 0x04	; 4
     530:	55 95       	asr	r21
     532:	47 95       	ror	r20
     534:	1a 95       	dec	r17
     536:	e1 f7       	brne	.-8      	; 0x530 <kbrd_read+0x5a>
     538:	64 2b       	or	r22, r20
     53a:	75 2b       	or	r23, r21
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	2f 67       	ori	r18, 0x7F	; 127
     540:	3f 6f       	ori	r19, 0xFF	; 255
     542:	20 95       	com	r18
     544:	30 95       	com	r19
     546:	22 0f       	add	r18, r18
     548:	23 2f       	mov	r18, r19
     54a:	22 1f       	adc	r18, r18
     54c:	33 0b       	sbc	r19, r19
     54e:	a3 e0       	ldi	r26, 0x03	; 3
     550:	22 0f       	add	r18, r18
     552:	33 1f       	adc	r19, r19
     554:	aa 95       	dec	r26
     556:	e1 f7       	brne	.-8      	; 0x550 <kbrd_read+0x7a>
     558:	62 2b       	or	r22, r18
     55a:	73 2b       	or	r23, r19
     55c:	62 30       	cpi	r22, 0x02	; 2
     55e:	71 05       	cpc	r23, r1
     560:	91 f0       	breq	.+36     	; 0x586 <kbrd_read+0xb0>
     562:	63 30       	cpi	r22, 0x03	; 3
     564:	71 05       	cpc	r23, r1
     566:	24 f4       	brge	.+8      	; 0x570 <kbrd_read+0x9a>
     568:	61 30       	cpi	r22, 0x01	; 1
     56a:	71 05       	cpc	r23, r1
     56c:	51 f4       	brne	.+20     	; 0x582 <kbrd_read+0xac>
     56e:	07 c0       	rjmp	.+14     	; 0x57e <kbrd_read+0xa8>
     570:	64 30       	cpi	r22, 0x04	; 4
     572:	71 05       	cpc	r23, r1
     574:	51 f0       	breq	.+20     	; 0x58a <kbrd_read+0xb4>
     576:	68 30       	cpi	r22, 0x08	; 8
     578:	71 05       	cpc	r23, r1
     57a:	19 f4       	brne	.+6      	; 0x582 <kbrd_read+0xac>
     57c:	08 c0       	rjmp	.+16     	; 0x58e <kbrd_read+0xb8>
     57e:	11 e4       	ldi	r17, 0x41	; 65
     580:	07 c0       	rjmp	.+14     	; 0x590 <kbrd_read+0xba>
     582:	10 e0       	ldi	r17, 0x00	; 0
     584:	05 c0       	rjmp	.+10     	; 0x590 <kbrd_read+0xba>
     586:	15 e5       	ldi	r17, 0x55	; 85
     588:	03 c0       	rjmp	.+6      	; 0x590 <kbrd_read+0xba>
		case 1:
			 tecla='A';
		break;
		case 2:
			tecla= 'U';
		break;
     58a:	13 e4       	ldi	r17, 0x43	; 67
     58c:	01 c0       	rjmp	.+2      	; 0x590 <kbrd_read+0xba>
		case 4:
			tecla= 'C';
		break;
     58e:	13 e5       	ldi	r17, 0x53	; 83
	}	



	//verify second column
	activate_column(1);
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	83 df       	rcall	.-250    	; 0x49a <activate_column>
     594:	88 ea       	ldi	r24, 0xA8	; 168
     596:	91 e6       	ldi	r25, 0x61	; 97
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	f1 f7       	brne	.-4      	; 0x598 <kbrd_read+0xc2>

	_delay_ms(KBRD_DELAY);

	switch(KBRD_ROW_MASK_AL())
     59c:	43 b3       	in	r20, 0x13	; 19
     59e:	63 b3       	in	r22, 0x13	; 19
     5a0:	83 b3       	in	r24, 0x13	; 19
     5a2:	23 b3       	in	r18, 0x13	; 19
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	6f 6d       	ori	r22, 0xDF	; 223
     5a8:	7f 6f       	ori	r23, 0xFF	; 255
     5aa:	60 95       	com	r22
     5ac:	70 95       	com	r23
     5ae:	f5 e0       	ldi	r31, 0x05	; 5
     5b0:	75 95       	asr	r23
     5b2:	67 95       	ror	r22
     5b4:	fa 95       	dec	r31
     5b6:	e1 f7       	brne	.-8      	; 0x5b0 <kbrd_read+0xda>
     5b8:	66 0f       	add	r22, r22
     5ba:	77 1f       	adc	r23, r23
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	8f 6b       	ori	r24, 0xBF	; 191
     5c0:	9f 6f       	ori	r25, 0xFF	; 255
     5c2:	80 95       	com	r24
     5c4:	90 95       	com	r25
     5c6:	56 e0       	ldi	r21, 0x06	; 6
     5c8:	95 95       	asr	r25
     5ca:	87 95       	ror	r24
     5cc:	5a 95       	dec	r21
     5ce:	e1 f7       	brne	.-8      	; 0x5c8 <kbrd_read+0xf2>
     5d0:	88 0f       	add	r24, r24
     5d2:	99 1f       	adc	r25, r25
     5d4:	88 0f       	add	r24, r24
     5d6:	99 1f       	adc	r25, r25
     5d8:	68 2b       	or	r22, r24
     5da:	79 2b       	or	r23, r25
     5dc:	50 e0       	ldi	r21, 0x00	; 0
     5de:	4f 6e       	ori	r20, 0xEF	; 239
     5e0:	5f 6f       	ori	r21, 0xFF	; 255
     5e2:	40 95       	com	r20
     5e4:	50 95       	com	r21
     5e6:	84 e0       	ldi	r24, 0x04	; 4
     5e8:	55 95       	asr	r21
     5ea:	47 95       	ror	r20
     5ec:	8a 95       	dec	r24
     5ee:	e1 f7       	brne	.-8      	; 0x5e8 <kbrd_read+0x112>
     5f0:	64 2b       	or	r22, r20
     5f2:	75 2b       	or	r23, r21
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	2f 67       	ori	r18, 0x7F	; 127
     5f8:	3f 6f       	ori	r19, 0xFF	; 255
     5fa:	20 95       	com	r18
     5fc:	30 95       	com	r19
     5fe:	22 0f       	add	r18, r18
     600:	23 2f       	mov	r18, r19
     602:	22 1f       	adc	r18, r18
     604:	33 0b       	sbc	r19, r19
     606:	a3 e0       	ldi	r26, 0x03	; 3
     608:	22 0f       	add	r18, r18
     60a:	33 1f       	adc	r19, r19
     60c:	aa 95       	dec	r26
     60e:	e1 f7       	brne	.-8      	; 0x608 <kbrd_read+0x132>
     610:	62 2b       	or	r22, r18
     612:	73 2b       	or	r23, r19
     614:	62 30       	cpi	r22, 0x02	; 2
     616:	71 05       	cpc	r23, r1
     618:	81 f0       	breq	.+32     	; 0x63a <kbrd_read+0x164>
     61a:	63 30       	cpi	r22, 0x03	; 3
     61c:	71 05       	cpc	r23, r1
     61e:	24 f4       	brge	.+8      	; 0x628 <kbrd_read+0x152>
     620:	61 30       	cpi	r22, 0x01	; 1
     622:	71 05       	cpc	r23, r1
     624:	79 f4       	brne	.+30     	; 0x644 <kbrd_read+0x16e>
     626:	07 c0       	rjmp	.+14     	; 0x636 <kbrd_read+0x160>
     628:	64 30       	cpi	r22, 0x04	; 4
     62a:	71 05       	cpc	r23, r1
     62c:	41 f0       	breq	.+16     	; 0x63e <kbrd_read+0x168>
     62e:	68 30       	cpi	r22, 0x08	; 8
     630:	71 05       	cpc	r23, r1
     632:	41 f4       	brne	.+16     	; 0x644 <kbrd_read+0x16e>
     634:	06 c0       	rjmp	.+12     	; 0x642 <kbrd_read+0x16c>
     636:	15 e4       	ldi	r17, 0x45	; 69
     638:	05 c0       	rjmp	.+10     	; 0x644 <kbrd_read+0x16e>
     63a:	18 e4       	ldi	r17, 0x48	; 72
     63c:	03 c0       	rjmp	.+6      	; 0x644 <kbrd_read+0x16e>
		case 1:
			tecla= 'E';
		break;
		case 2:
			tecla= 'H';
		break;
     63e:	14 e4       	ldi	r17, 0x44	; 68
     640:	01 c0       	rjmp	.+2      	; 0x644 <kbrd_read+0x16e>
		case 4:
			tecla= 'D';
		break;
     642:	12 e5       	ldi	r17, 0x52	; 82
	}	
	
	
	
	//verify thirth column
	activate_column(2);
     644:	82 e0       	ldi	r24, 0x02	; 2
     646:	29 df       	rcall	.-430    	; 0x49a <activate_column>
     648:	88 ea       	ldi	r24, 0xA8	; 168
     64a:	91 e6       	ldi	r25, 0x61	; 97
     64c:	01 97       	sbiw	r24, 0x01	; 1
     64e:	f1 f7       	brne	.-4      	; 0x64c <kbrd_read+0x176>
	
	_delay_ms(KBRD_DELAY);

	switch(KBRD_ROW_MASK_AL())
     650:	43 b3       	in	r20, 0x13	; 19
     652:	63 b3       	in	r22, 0x13	; 19
     654:	83 b3       	in	r24, 0x13	; 19
     656:	23 b3       	in	r18, 0x13	; 19
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	6f 6d       	ori	r22, 0xDF	; 223
     65c:	7f 6f       	ori	r23, 0xFF	; 255
     65e:	60 95       	com	r22
     660:	70 95       	com	r23
     662:	f5 e0       	ldi	r31, 0x05	; 5
     664:	75 95       	asr	r23
     666:	67 95       	ror	r22
     668:	fa 95       	dec	r31
     66a:	e1 f7       	brne	.-8      	; 0x664 <kbrd_read+0x18e>
     66c:	66 0f       	add	r22, r22
     66e:	77 1f       	adc	r23, r23
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	8f 6b       	ori	r24, 0xBF	; 191
     674:	9f 6f       	ori	r25, 0xFF	; 255
     676:	80 95       	com	r24
     678:	90 95       	com	r25
     67a:	56 e0       	ldi	r21, 0x06	; 6
     67c:	95 95       	asr	r25
     67e:	87 95       	ror	r24
     680:	5a 95       	dec	r21
     682:	e1 f7       	brne	.-8      	; 0x67c <kbrd_read+0x1a6>
     684:	88 0f       	add	r24, r24
     686:	99 1f       	adc	r25, r25
     688:	88 0f       	add	r24, r24
     68a:	99 1f       	adc	r25, r25
     68c:	68 2b       	or	r22, r24
     68e:	79 2b       	or	r23, r25
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	4f 6e       	ori	r20, 0xEF	; 239
     694:	5f 6f       	ori	r21, 0xFF	; 255
     696:	40 95       	com	r20
     698:	50 95       	com	r21
     69a:	94 e0       	ldi	r25, 0x04	; 4
     69c:	55 95       	asr	r21
     69e:	47 95       	ror	r20
     6a0:	9a 95       	dec	r25
     6a2:	e1 f7       	brne	.-8      	; 0x69c <kbrd_read+0x1c6>
     6a4:	64 2b       	or	r22, r20
     6a6:	75 2b       	or	r23, r21
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	2f 67       	ori	r18, 0x7F	; 127
     6ac:	3f 6f       	ori	r19, 0xFF	; 255
     6ae:	20 95       	com	r18
     6b0:	30 95       	com	r19
     6b2:	22 0f       	add	r18, r18
     6b4:	23 2f       	mov	r18, r19
     6b6:	22 1f       	adc	r18, r18
     6b8:	33 0b       	sbc	r19, r19
     6ba:	b3 e0       	ldi	r27, 0x03	; 3
     6bc:	22 0f       	add	r18, r18
     6be:	33 1f       	adc	r19, r19
     6c0:	ba 95       	dec	r27
     6c2:	e1 f7       	brne	.-8      	; 0x6bc <kbrd_read+0x1e6>
     6c4:	62 2b       	or	r22, r18
     6c6:	73 2b       	or	r23, r19
     6c8:	62 30       	cpi	r22, 0x02	; 2
     6ca:	71 05       	cpc	r23, r1
     6cc:	81 f0       	breq	.+32     	; 0x6ee <kbrd_read+0x218>
     6ce:	63 30       	cpi	r22, 0x03	; 3
     6d0:	71 05       	cpc	r23, r1
     6d2:	24 f4       	brge	.+8      	; 0x6dc <kbrd_read+0x206>
     6d4:	61 30       	cpi	r22, 0x01	; 1
     6d6:	71 05       	cpc	r23, r1
     6d8:	79 f4       	brne	.+30     	; 0x6f8 <kbrd_read+0x222>
     6da:	07 c0       	rjmp	.+14     	; 0x6ea <kbrd_read+0x214>
     6dc:	64 30       	cpi	r22, 0x04	; 4
     6de:	71 05       	cpc	r23, r1
     6e0:	41 f0       	breq	.+16     	; 0x6f2 <kbrd_read+0x21c>
     6e2:	68 30       	cpi	r22, 0x08	; 8
     6e4:	71 05       	cpc	r23, r1
     6e6:	41 f4       	brne	.+16     	; 0x6f8 <kbrd_read+0x222>
     6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <kbrd_read+0x220>
     6ea:	19 e4       	ldi	r17, 0x49	; 73
     6ec:	05 c0       	rjmp	.+10     	; 0x6f8 <kbrd_read+0x222>
     6ee:	1c e4       	ldi	r17, 0x4C	; 76
     6f0:	03 c0       	rjmp	.+6      	; 0x6f8 <kbrd_read+0x222>
		case 1:
			tecla= 'I';// /
		break;
		case 2:
			tecla= 'L';// X
		break;
     6f2:	16 e4       	ldi	r17, 0x46	; 70
     6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <kbrd_read+0x222>
		case 4:
			tecla= 'F';// -
		break;
     6f6:	14 e5       	ldi	r17, 0x54	; 84
		
	}
	
	
	//verify first column
	activate_column(3);
     6f8:	83 e0       	ldi	r24, 0x03	; 3
     6fa:	cf de       	rcall	.-610    	; 0x49a <activate_column>
     6fc:	88 ea       	ldi	r24, 0xA8	; 168
     6fe:	91 e6       	ldi	r25, 0x61	; 97
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	f1 f7       	brne	.-4      	; 0x700 <kbrd_read+0x22a>

	_delay_ms(KBRD_DELAY);

	switch(KBRD_ROW_MASK_AL())
     704:	43 b3       	in	r20, 0x13	; 19
     706:	63 b3       	in	r22, 0x13	; 19
     708:	83 b3       	in	r24, 0x13	; 19
     70a:	23 b3       	in	r18, 0x13	; 19
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	6f 6d       	ori	r22, 0xDF	; 223
     710:	7f 6f       	ori	r23, 0xFF	; 255
     712:	60 95       	com	r22
     714:	70 95       	com	r23
     716:	a5 e0       	ldi	r26, 0x05	; 5
     718:	75 95       	asr	r23
     71a:	67 95       	ror	r22
     71c:	aa 95       	dec	r26
     71e:	e1 f7       	brne	.-8      	; 0x718 <kbrd_read+0x242>
     720:	66 0f       	add	r22, r22
     722:	77 1f       	adc	r23, r23
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	8f 6b       	ori	r24, 0xBF	; 191
     728:	9f 6f       	ori	r25, 0xFF	; 255
     72a:	80 95       	com	r24
     72c:	90 95       	com	r25
     72e:	e6 e0       	ldi	r30, 0x06	; 6
     730:	95 95       	asr	r25
     732:	87 95       	ror	r24
     734:	ea 95       	dec	r30
     736:	e1 f7       	brne	.-8      	; 0x730 <kbrd_read+0x25a>
     738:	88 0f       	add	r24, r24
     73a:	99 1f       	adc	r25, r25
     73c:	88 0f       	add	r24, r24
     73e:	99 1f       	adc	r25, r25
     740:	68 2b       	or	r22, r24
     742:	79 2b       	or	r23, r25
     744:	50 e0       	ldi	r21, 0x00	; 0
     746:	4f 6e       	ori	r20, 0xEF	; 239
     748:	5f 6f       	ori	r21, 0xFF	; 255
     74a:	40 95       	com	r20
     74c:	50 95       	com	r21
     74e:	34 e0       	ldi	r19, 0x04	; 4
     750:	55 95       	asr	r21
     752:	47 95       	ror	r20
     754:	3a 95       	dec	r19
     756:	e1 f7       	brne	.-8      	; 0x750 <kbrd_read+0x27a>
     758:	64 2b       	or	r22, r20
     75a:	75 2b       	or	r23, r21
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	2f 67       	ori	r18, 0x7F	; 127
     760:	3f 6f       	ori	r19, 0xFF	; 255
     762:	20 95       	com	r18
     764:	30 95       	com	r19
     766:	22 0f       	add	r18, r18
     768:	23 2f       	mov	r18, r19
     76a:	22 1f       	adc	r18, r18
     76c:	33 0b       	sbc	r19, r19
     76e:	83 e0       	ldi	r24, 0x03	; 3
     770:	22 0f       	add	r18, r18
     772:	33 1f       	adc	r19, r19
     774:	8a 95       	dec	r24
     776:	e1 f7       	brne	.-8      	; 0x770 <kbrd_read+0x29a>
     778:	62 2b       	or	r22, r18
     77a:	73 2b       	or	r23, r19
     77c:	62 30       	cpi	r22, 0x02	; 2
     77e:	71 05       	cpc	r23, r1
     780:	81 f0       	breq	.+32     	; 0x7a2 <kbrd_read+0x2cc>
     782:	63 30       	cpi	r22, 0x03	; 3
     784:	71 05       	cpc	r23, r1
     786:	24 f4       	brge	.+8      	; 0x790 <kbrd_read+0x2ba>
     788:	61 30       	cpi	r22, 0x01	; 1
     78a:	71 05       	cpc	r23, r1
     78c:	79 f4       	brne	.+30     	; 0x7ac <kbrd_read+0x2d6>
     78e:	07 c0       	rjmp	.+14     	; 0x79e <kbrd_read+0x2c8>
     790:	64 30       	cpi	r22, 0x04	; 4
     792:	71 05       	cpc	r23, r1
     794:	41 f0       	breq	.+16     	; 0x7a6 <kbrd_read+0x2d0>
     796:	68 30       	cpi	r22, 0x08	; 8
     798:	71 05       	cpc	r23, r1
     79a:	41 f4       	brne	.+16     	; 0x7ac <kbrd_read+0x2d6>
     79c:	06 c0       	rjmp	.+12     	; 0x7aa <kbrd_read+0x2d4>
     79e:	1f e4       	ldi	r17, 0x4F	; 79
     7a0:	05 c0       	rjmp	.+10     	; 0x7ac <kbrd_read+0x2d6>
     7a2:	10 e5       	ldi	r17, 0x50	; 80
     7a4:	03 c0       	rjmp	.+6      	; 0x7ac <kbrd_read+0x2d6>
		case 1:
			tecla= 'O';
		break;
		case 2:
			tecla= 'P';
		break;
     7a6:	11 e5       	ldi	r17, 0x51	; 81
     7a8:	01 c0       	rjmp	.+2      	; 0x7ac <kbrd_read+0x2d6>
		case 4:
			tecla= 'Q';
		break;
     7aa:	17 e4       	ldi	r17, 0x47	; 71
		case 8:
			tecla= 'G';
		break;
	}	
	
	reset_columns();
     7ac:	8f de       	rcall	.-738    	; 0x4cc <reset_columns>
	{
		return tecla;
	}
	else{return 0;}
	
}
     7ae:	81 2f       	mov	r24, r17
     7b0:	1f 91       	pop	r17
     7b2:	08 95       	ret

000007b4 <_fpadd_parts>:
     7b4:	a0 e0       	ldi	r26, 0x00	; 0
     7b6:	b0 e0       	ldi	r27, 0x00	; 0
     7b8:	ef ed       	ldi	r30, 0xDF	; 223
     7ba:	f3 e0       	ldi	r31, 0x03	; 3
     7bc:	80 c4       	rjmp	.+2304   	; 0x10be <__prologue_saves__>
     7be:	dc 01       	movw	r26, r24
     7c0:	2b 01       	movw	r4, r22
     7c2:	fa 01       	movw	r30, r20
     7c4:	9c 91       	ld	r25, X
     7c6:	92 30       	cpi	r25, 0x02	; 2
     7c8:	08 f4       	brcc	.+2      	; 0x7cc <_fpadd_parts+0x18>
     7ca:	39 c1       	rjmp	.+626    	; 0xa3e <_fpadd_parts+0x28a>
     7cc:	eb 01       	movw	r28, r22
     7ce:	88 81       	ld	r24, Y
     7d0:	82 30       	cpi	r24, 0x02	; 2
     7d2:	08 f4       	brcc	.+2      	; 0x7d6 <_fpadd_parts+0x22>
     7d4:	33 c1       	rjmp	.+614    	; 0xa3c <_fpadd_parts+0x288>
     7d6:	94 30       	cpi	r25, 0x04	; 4
     7d8:	69 f4       	brne	.+26     	; 0x7f4 <_fpadd_parts+0x40>
     7da:	84 30       	cpi	r24, 0x04	; 4
     7dc:	09 f0       	breq	.+2      	; 0x7e0 <_fpadd_parts+0x2c>
     7de:	2f c1       	rjmp	.+606    	; 0xa3e <_fpadd_parts+0x28a>
     7e0:	11 96       	adiw	r26, 0x01	; 1
     7e2:	9c 91       	ld	r25, X
     7e4:	11 97       	sbiw	r26, 0x01	; 1
     7e6:	89 81       	ldd	r24, Y+1	; 0x01
     7e8:	98 17       	cp	r25, r24
     7ea:	09 f4       	brne	.+2      	; 0x7ee <_fpadd_parts+0x3a>
     7ec:	28 c1       	rjmp	.+592    	; 0xa3e <_fpadd_parts+0x28a>
     7ee:	a7 e6       	ldi	r26, 0x67	; 103
     7f0:	b0 e0       	ldi	r27, 0x00	; 0
     7f2:	25 c1       	rjmp	.+586    	; 0xa3e <_fpadd_parts+0x28a>
     7f4:	84 30       	cpi	r24, 0x04	; 4
     7f6:	09 f4       	brne	.+2      	; 0x7fa <_fpadd_parts+0x46>
     7f8:	21 c1       	rjmp	.+578    	; 0xa3c <_fpadd_parts+0x288>
     7fa:	82 30       	cpi	r24, 0x02	; 2
     7fc:	a9 f4       	brne	.+42     	; 0x828 <_fpadd_parts+0x74>
     7fe:	92 30       	cpi	r25, 0x02	; 2
     800:	09 f0       	breq	.+2      	; 0x804 <_fpadd_parts+0x50>
     802:	1d c1       	rjmp	.+570    	; 0xa3e <_fpadd_parts+0x28a>
     804:	9a 01       	movw	r18, r20
     806:	ad 01       	movw	r20, r26
     808:	88 e0       	ldi	r24, 0x08	; 8
     80a:	ea 01       	movw	r28, r20
     80c:	09 90       	ld	r0, Y+
     80e:	ae 01       	movw	r20, r28
     810:	e9 01       	movw	r28, r18
     812:	09 92       	st	Y+, r0
     814:	9e 01       	movw	r18, r28
     816:	81 50       	subi	r24, 0x01	; 1
     818:	c1 f7       	brne	.-16     	; 0x80a <_fpadd_parts+0x56>
     81a:	e2 01       	movw	r28, r4
     81c:	89 81       	ldd	r24, Y+1	; 0x01
     81e:	11 96       	adiw	r26, 0x01	; 1
     820:	9c 91       	ld	r25, X
     822:	89 23       	and	r24, r25
     824:	81 83       	std	Z+1, r24	; 0x01
     826:	08 c1       	rjmp	.+528    	; 0xa38 <_fpadd_parts+0x284>
     828:	92 30       	cpi	r25, 0x02	; 2
     82a:	09 f4       	brne	.+2      	; 0x82e <_fpadd_parts+0x7a>
     82c:	07 c1       	rjmp	.+526    	; 0xa3c <_fpadd_parts+0x288>
     82e:	12 96       	adiw	r26, 0x02	; 2
     830:	2d 90       	ld	r2, X+
     832:	3c 90       	ld	r3, X
     834:	13 97       	sbiw	r26, 0x03	; 3
     836:	eb 01       	movw	r28, r22
     838:	8a 81       	ldd	r24, Y+2	; 0x02
     83a:	9b 81       	ldd	r25, Y+3	; 0x03
     83c:	14 96       	adiw	r26, 0x04	; 4
     83e:	ad 90       	ld	r10, X+
     840:	bd 90       	ld	r11, X+
     842:	cd 90       	ld	r12, X+
     844:	dc 90       	ld	r13, X
     846:	17 97       	sbiw	r26, 0x07	; 7
     848:	ec 80       	ldd	r14, Y+4	; 0x04
     84a:	fd 80       	ldd	r15, Y+5	; 0x05
     84c:	0e 81       	ldd	r16, Y+6	; 0x06
     84e:	1f 81       	ldd	r17, Y+7	; 0x07
     850:	91 01       	movw	r18, r2
     852:	28 1b       	sub	r18, r24
     854:	39 0b       	sbc	r19, r25
     856:	b9 01       	movw	r22, r18
     858:	37 ff       	sbrs	r19, 7
     85a:	04 c0       	rjmp	.+8      	; 0x864 <_fpadd_parts+0xb0>
     85c:	66 27       	eor	r22, r22
     85e:	77 27       	eor	r23, r23
     860:	62 1b       	sub	r22, r18
     862:	73 0b       	sbc	r23, r19
     864:	60 32       	cpi	r22, 0x20	; 32
     866:	71 05       	cpc	r23, r1
     868:	0c f0       	brlt	.+2      	; 0x86c <_fpadd_parts+0xb8>
     86a:	61 c0       	rjmp	.+194    	; 0x92e <_fpadd_parts+0x17a>
     86c:	12 16       	cp	r1, r18
     86e:	13 06       	cpc	r1, r19
     870:	6c f5       	brge	.+90     	; 0x8cc <_fpadd_parts+0x118>
     872:	37 01       	movw	r6, r14
     874:	48 01       	movw	r8, r16
     876:	06 2e       	mov	r0, r22
     878:	04 c0       	rjmp	.+8      	; 0x882 <_fpadd_parts+0xce>
     87a:	96 94       	lsr	r9
     87c:	87 94       	ror	r8
     87e:	77 94       	ror	r7
     880:	67 94       	ror	r6
     882:	0a 94       	dec	r0
     884:	d2 f7       	brpl	.-12     	; 0x87a <_fpadd_parts+0xc6>
     886:	21 e0       	ldi	r18, 0x01	; 1
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	40 e0       	ldi	r20, 0x00	; 0
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	04 c0       	rjmp	.+8      	; 0x898 <_fpadd_parts+0xe4>
     890:	22 0f       	add	r18, r18
     892:	33 1f       	adc	r19, r19
     894:	44 1f       	adc	r20, r20
     896:	55 1f       	adc	r21, r21
     898:	6a 95       	dec	r22
     89a:	d2 f7       	brpl	.-12     	; 0x890 <_fpadd_parts+0xdc>
     89c:	21 50       	subi	r18, 0x01	; 1
     89e:	30 40       	sbci	r19, 0x00	; 0
     8a0:	40 40       	sbci	r20, 0x00	; 0
     8a2:	50 40       	sbci	r21, 0x00	; 0
     8a4:	2e 21       	and	r18, r14
     8a6:	3f 21       	and	r19, r15
     8a8:	40 23       	and	r20, r16
     8aa:	51 23       	and	r21, r17
     8ac:	21 15       	cp	r18, r1
     8ae:	31 05       	cpc	r19, r1
     8b0:	41 05       	cpc	r20, r1
     8b2:	51 05       	cpc	r21, r1
     8b4:	21 f0       	breq	.+8      	; 0x8be <_fpadd_parts+0x10a>
     8b6:	21 e0       	ldi	r18, 0x01	; 1
     8b8:	30 e0       	ldi	r19, 0x00	; 0
     8ba:	40 e0       	ldi	r20, 0x00	; 0
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	79 01       	movw	r14, r18
     8c0:	8a 01       	movw	r16, r20
     8c2:	e6 28       	or	r14, r6
     8c4:	f7 28       	or	r15, r7
     8c6:	08 29       	or	r16, r8
     8c8:	19 29       	or	r17, r9
     8ca:	3c c0       	rjmp	.+120    	; 0x944 <_fpadd_parts+0x190>
     8cc:	23 2b       	or	r18, r19
     8ce:	d1 f1       	breq	.+116    	; 0x944 <_fpadd_parts+0x190>
     8d0:	26 0e       	add	r2, r22
     8d2:	37 1e       	adc	r3, r23
     8d4:	35 01       	movw	r6, r10
     8d6:	46 01       	movw	r8, r12
     8d8:	06 2e       	mov	r0, r22
     8da:	04 c0       	rjmp	.+8      	; 0x8e4 <_fpadd_parts+0x130>
     8dc:	96 94       	lsr	r9
     8de:	87 94       	ror	r8
     8e0:	77 94       	ror	r7
     8e2:	67 94       	ror	r6
     8e4:	0a 94       	dec	r0
     8e6:	d2 f7       	brpl	.-12     	; 0x8dc <_fpadd_parts+0x128>
     8e8:	21 e0       	ldi	r18, 0x01	; 1
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	40 e0       	ldi	r20, 0x00	; 0
     8ee:	50 e0       	ldi	r21, 0x00	; 0
     8f0:	04 c0       	rjmp	.+8      	; 0x8fa <_fpadd_parts+0x146>
     8f2:	22 0f       	add	r18, r18
     8f4:	33 1f       	adc	r19, r19
     8f6:	44 1f       	adc	r20, r20
     8f8:	55 1f       	adc	r21, r21
     8fa:	6a 95       	dec	r22
     8fc:	d2 f7       	brpl	.-12     	; 0x8f2 <_fpadd_parts+0x13e>
     8fe:	21 50       	subi	r18, 0x01	; 1
     900:	30 40       	sbci	r19, 0x00	; 0
     902:	40 40       	sbci	r20, 0x00	; 0
     904:	50 40       	sbci	r21, 0x00	; 0
     906:	2a 21       	and	r18, r10
     908:	3b 21       	and	r19, r11
     90a:	4c 21       	and	r20, r12
     90c:	5d 21       	and	r21, r13
     90e:	21 15       	cp	r18, r1
     910:	31 05       	cpc	r19, r1
     912:	41 05       	cpc	r20, r1
     914:	51 05       	cpc	r21, r1
     916:	21 f0       	breq	.+8      	; 0x920 <_fpadd_parts+0x16c>
     918:	21 e0       	ldi	r18, 0x01	; 1
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	40 e0       	ldi	r20, 0x00	; 0
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	59 01       	movw	r10, r18
     922:	6a 01       	movw	r12, r20
     924:	a6 28       	or	r10, r6
     926:	b7 28       	or	r11, r7
     928:	c8 28       	or	r12, r8
     92a:	d9 28       	or	r13, r9
     92c:	0b c0       	rjmp	.+22     	; 0x944 <_fpadd_parts+0x190>
     92e:	82 15       	cp	r24, r2
     930:	93 05       	cpc	r25, r3
     932:	2c f0       	brlt	.+10     	; 0x93e <_fpadd_parts+0x18a>
     934:	1c 01       	movw	r2, r24
     936:	aa 24       	eor	r10, r10
     938:	bb 24       	eor	r11, r11
     93a:	65 01       	movw	r12, r10
     93c:	03 c0       	rjmp	.+6      	; 0x944 <_fpadd_parts+0x190>
     93e:	ee 24       	eor	r14, r14
     940:	ff 24       	eor	r15, r15
     942:	87 01       	movw	r16, r14
     944:	11 96       	adiw	r26, 0x01	; 1
     946:	9c 91       	ld	r25, X
     948:	d2 01       	movw	r26, r4
     94a:	11 96       	adiw	r26, 0x01	; 1
     94c:	8c 91       	ld	r24, X
     94e:	98 17       	cp	r25, r24
     950:	09 f4       	brne	.+2      	; 0x954 <_fpadd_parts+0x1a0>
     952:	45 c0       	rjmp	.+138    	; 0x9de <_fpadd_parts+0x22a>
     954:	99 23       	and	r25, r25
     956:	39 f0       	breq	.+14     	; 0x966 <_fpadd_parts+0x1b2>
     958:	a8 01       	movw	r20, r16
     95a:	97 01       	movw	r18, r14
     95c:	2a 19       	sub	r18, r10
     95e:	3b 09       	sbc	r19, r11
     960:	4c 09       	sbc	r20, r12
     962:	5d 09       	sbc	r21, r13
     964:	06 c0       	rjmp	.+12     	; 0x972 <_fpadd_parts+0x1be>
     966:	a6 01       	movw	r20, r12
     968:	95 01       	movw	r18, r10
     96a:	2e 19       	sub	r18, r14
     96c:	3f 09       	sbc	r19, r15
     96e:	40 0b       	sbc	r20, r16
     970:	51 0b       	sbc	r21, r17
     972:	57 fd       	sbrc	r21, 7
     974:	08 c0       	rjmp	.+16     	; 0x986 <_fpadd_parts+0x1d2>
     976:	11 82       	std	Z+1, r1	; 0x01
     978:	33 82       	std	Z+3, r3	; 0x03
     97a:	22 82       	std	Z+2, r2	; 0x02
     97c:	24 83       	std	Z+4, r18	; 0x04
     97e:	35 83       	std	Z+5, r19	; 0x05
     980:	46 83       	std	Z+6, r20	; 0x06
     982:	57 83       	std	Z+7, r21	; 0x07
     984:	1d c0       	rjmp	.+58     	; 0x9c0 <_fpadd_parts+0x20c>
     986:	81 e0       	ldi	r24, 0x01	; 1
     988:	81 83       	std	Z+1, r24	; 0x01
     98a:	33 82       	std	Z+3, r3	; 0x03
     98c:	22 82       	std	Z+2, r2	; 0x02
     98e:	88 27       	eor	r24, r24
     990:	99 27       	eor	r25, r25
     992:	dc 01       	movw	r26, r24
     994:	82 1b       	sub	r24, r18
     996:	93 0b       	sbc	r25, r19
     998:	a4 0b       	sbc	r26, r20
     99a:	b5 0b       	sbc	r27, r21
     99c:	84 83       	std	Z+4, r24	; 0x04
     99e:	95 83       	std	Z+5, r25	; 0x05
     9a0:	a6 83       	std	Z+6, r26	; 0x06
     9a2:	b7 83       	std	Z+7, r27	; 0x07
     9a4:	0d c0       	rjmp	.+26     	; 0x9c0 <_fpadd_parts+0x20c>
     9a6:	22 0f       	add	r18, r18
     9a8:	33 1f       	adc	r19, r19
     9aa:	44 1f       	adc	r20, r20
     9ac:	55 1f       	adc	r21, r21
     9ae:	24 83       	std	Z+4, r18	; 0x04
     9b0:	35 83       	std	Z+5, r19	; 0x05
     9b2:	46 83       	std	Z+6, r20	; 0x06
     9b4:	57 83       	std	Z+7, r21	; 0x07
     9b6:	82 81       	ldd	r24, Z+2	; 0x02
     9b8:	93 81       	ldd	r25, Z+3	; 0x03
     9ba:	01 97       	sbiw	r24, 0x01	; 1
     9bc:	93 83       	std	Z+3, r25	; 0x03
     9be:	82 83       	std	Z+2, r24	; 0x02
     9c0:	24 81       	ldd	r18, Z+4	; 0x04
     9c2:	35 81       	ldd	r19, Z+5	; 0x05
     9c4:	46 81       	ldd	r20, Z+6	; 0x06
     9c6:	57 81       	ldd	r21, Z+7	; 0x07
     9c8:	da 01       	movw	r26, r20
     9ca:	c9 01       	movw	r24, r18
     9cc:	01 97       	sbiw	r24, 0x01	; 1
     9ce:	a1 09       	sbc	r26, r1
     9d0:	b1 09       	sbc	r27, r1
     9d2:	8f 5f       	subi	r24, 0xFF	; 255
     9d4:	9f 4f       	sbci	r25, 0xFF	; 255
     9d6:	af 4f       	sbci	r26, 0xFF	; 255
     9d8:	bf 43       	sbci	r27, 0x3F	; 63
     9da:	28 f3       	brcs	.-54     	; 0x9a6 <_fpadd_parts+0x1f2>
     9dc:	0b c0       	rjmp	.+22     	; 0x9f4 <_fpadd_parts+0x240>
     9de:	91 83       	std	Z+1, r25	; 0x01
     9e0:	33 82       	std	Z+3, r3	; 0x03
     9e2:	22 82       	std	Z+2, r2	; 0x02
     9e4:	ea 0c       	add	r14, r10
     9e6:	fb 1c       	adc	r15, r11
     9e8:	0c 1d       	adc	r16, r12
     9ea:	1d 1d       	adc	r17, r13
     9ec:	e4 82       	std	Z+4, r14	; 0x04
     9ee:	f5 82       	std	Z+5, r15	; 0x05
     9f0:	06 83       	std	Z+6, r16	; 0x06
     9f2:	17 83       	std	Z+7, r17	; 0x07
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	80 83       	st	Z, r24
     9f8:	24 81       	ldd	r18, Z+4	; 0x04
     9fa:	35 81       	ldd	r19, Z+5	; 0x05
     9fc:	46 81       	ldd	r20, Z+6	; 0x06
     9fe:	57 81       	ldd	r21, Z+7	; 0x07
     a00:	57 ff       	sbrs	r21, 7
     a02:	1a c0       	rjmp	.+52     	; 0xa38 <_fpadd_parts+0x284>
     a04:	c9 01       	movw	r24, r18
     a06:	aa 27       	eor	r26, r26
     a08:	97 fd       	sbrc	r25, 7
     a0a:	a0 95       	com	r26
     a0c:	ba 2f       	mov	r27, r26
     a0e:	81 70       	andi	r24, 0x01	; 1
     a10:	90 70       	andi	r25, 0x00	; 0
     a12:	a0 70       	andi	r26, 0x00	; 0
     a14:	b0 70       	andi	r27, 0x00	; 0
     a16:	56 95       	lsr	r21
     a18:	47 95       	ror	r20
     a1a:	37 95       	ror	r19
     a1c:	27 95       	ror	r18
     a1e:	82 2b       	or	r24, r18
     a20:	93 2b       	or	r25, r19
     a22:	a4 2b       	or	r26, r20
     a24:	b5 2b       	or	r27, r21
     a26:	84 83       	std	Z+4, r24	; 0x04
     a28:	95 83       	std	Z+5, r25	; 0x05
     a2a:	a6 83       	std	Z+6, r26	; 0x06
     a2c:	b7 83       	std	Z+7, r27	; 0x07
     a2e:	82 81       	ldd	r24, Z+2	; 0x02
     a30:	93 81       	ldd	r25, Z+3	; 0x03
     a32:	01 96       	adiw	r24, 0x01	; 1
     a34:	93 83       	std	Z+3, r25	; 0x03
     a36:	82 83       	std	Z+2, r24	; 0x02
     a38:	df 01       	movw	r26, r30
     a3a:	01 c0       	rjmp	.+2      	; 0xa3e <_fpadd_parts+0x28a>
     a3c:	d2 01       	movw	r26, r4
     a3e:	cd 01       	movw	r24, r26
     a40:	cd b7       	in	r28, 0x3d	; 61
     a42:	de b7       	in	r29, 0x3e	; 62
     a44:	e2 e1       	ldi	r30, 0x12	; 18
     a46:	57 c3       	rjmp	.+1710   	; 0x10f6 <__epilogue_restores__>

00000a48 <__subsf3>:
     a48:	a0 e2       	ldi	r26, 0x20	; 32
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	e9 e2       	ldi	r30, 0x29	; 41
     a4e:	f5 e0       	ldi	r31, 0x05	; 5
     a50:	42 c3       	rjmp	.+1668   	; 0x10d6 <__prologue_saves__+0x18>
     a52:	69 83       	std	Y+1, r22	; 0x01
     a54:	7a 83       	std	Y+2, r23	; 0x02
     a56:	8b 83       	std	Y+3, r24	; 0x03
     a58:	9c 83       	std	Y+4, r25	; 0x04
     a5a:	2d 83       	std	Y+5, r18	; 0x05
     a5c:	3e 83       	std	Y+6, r19	; 0x06
     a5e:	4f 83       	std	Y+7, r20	; 0x07
     a60:	58 87       	std	Y+8, r21	; 0x08
     a62:	e9 e0       	ldi	r30, 0x09	; 9
     a64:	ee 2e       	mov	r14, r30
     a66:	f1 2c       	mov	r15, r1
     a68:	ec 0e       	add	r14, r28
     a6a:	fd 1e       	adc	r15, r29
     a6c:	ce 01       	movw	r24, r28
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	b7 01       	movw	r22, r14
     a72:	ad d2       	rcall	.+1370   	; 0xfce <__unpack_f>
     a74:	8e 01       	movw	r16, r28
     a76:	0f 5e       	subi	r16, 0xEF	; 239
     a78:	1f 4f       	sbci	r17, 0xFF	; 255
     a7a:	ce 01       	movw	r24, r28
     a7c:	05 96       	adiw	r24, 0x05	; 5
     a7e:	b8 01       	movw	r22, r16
     a80:	a6 d2       	rcall	.+1356   	; 0xfce <__unpack_f>
     a82:	8a 89       	ldd	r24, Y+18	; 0x12
     a84:	91 e0       	ldi	r25, 0x01	; 1
     a86:	89 27       	eor	r24, r25
     a88:	8a 8b       	std	Y+18, r24	; 0x12
     a8a:	c7 01       	movw	r24, r14
     a8c:	b8 01       	movw	r22, r16
     a8e:	ae 01       	movw	r20, r28
     a90:	47 5e       	subi	r20, 0xE7	; 231
     a92:	5f 4f       	sbci	r21, 0xFF	; 255
     a94:	8f de       	rcall	.-738    	; 0x7b4 <_fpadd_parts>
     a96:	c6 d1       	rcall	.+908    	; 0xe24 <__pack_f>
     a98:	a0 96       	adiw	r28, 0x20	; 32
     a9a:	e6 e0       	ldi	r30, 0x06	; 6
     a9c:	38 c3       	rjmp	.+1648   	; 0x110e <__epilogue_restores__+0x18>

00000a9e <__addsf3>:
     a9e:	a0 e2       	ldi	r26, 0x20	; 32
     aa0:	b0 e0       	ldi	r27, 0x00	; 0
     aa2:	e4 e5       	ldi	r30, 0x54	; 84
     aa4:	f5 e0       	ldi	r31, 0x05	; 5
     aa6:	17 c3       	rjmp	.+1582   	; 0x10d6 <__prologue_saves__+0x18>
     aa8:	69 83       	std	Y+1, r22	; 0x01
     aaa:	7a 83       	std	Y+2, r23	; 0x02
     aac:	8b 83       	std	Y+3, r24	; 0x03
     aae:	9c 83       	std	Y+4, r25	; 0x04
     ab0:	2d 83       	std	Y+5, r18	; 0x05
     ab2:	3e 83       	std	Y+6, r19	; 0x06
     ab4:	4f 83       	std	Y+7, r20	; 0x07
     ab6:	58 87       	std	Y+8, r21	; 0x08
     ab8:	f9 e0       	ldi	r31, 0x09	; 9
     aba:	ef 2e       	mov	r14, r31
     abc:	f1 2c       	mov	r15, r1
     abe:	ec 0e       	add	r14, r28
     ac0:	fd 1e       	adc	r15, r29
     ac2:	ce 01       	movw	r24, r28
     ac4:	01 96       	adiw	r24, 0x01	; 1
     ac6:	b7 01       	movw	r22, r14
     ac8:	82 d2       	rcall	.+1284   	; 0xfce <__unpack_f>
     aca:	8e 01       	movw	r16, r28
     acc:	0f 5e       	subi	r16, 0xEF	; 239
     ace:	1f 4f       	sbci	r17, 0xFF	; 255
     ad0:	ce 01       	movw	r24, r28
     ad2:	05 96       	adiw	r24, 0x05	; 5
     ad4:	b8 01       	movw	r22, r16
     ad6:	7b d2       	rcall	.+1270   	; 0xfce <__unpack_f>
     ad8:	c7 01       	movw	r24, r14
     ada:	b8 01       	movw	r22, r16
     adc:	ae 01       	movw	r20, r28
     ade:	47 5e       	subi	r20, 0xE7	; 231
     ae0:	5f 4f       	sbci	r21, 0xFF	; 255
     ae2:	68 de       	rcall	.-816    	; 0x7b4 <_fpadd_parts>
     ae4:	9f d1       	rcall	.+830    	; 0xe24 <__pack_f>
     ae6:	a0 96       	adiw	r28, 0x20	; 32
     ae8:	e6 e0       	ldi	r30, 0x06	; 6
     aea:	11 c3       	rjmp	.+1570   	; 0x110e <__epilogue_restores__+0x18>

00000aec <__mulsf3>:
     aec:	a0 e2       	ldi	r26, 0x20	; 32
     aee:	b0 e0       	ldi	r27, 0x00	; 0
     af0:	eb e7       	ldi	r30, 0x7B	; 123
     af2:	f5 e0       	ldi	r31, 0x05	; 5
     af4:	e4 c2       	rjmp	.+1480   	; 0x10be <__prologue_saves__>
     af6:	69 83       	std	Y+1, r22	; 0x01
     af8:	7a 83       	std	Y+2, r23	; 0x02
     afa:	8b 83       	std	Y+3, r24	; 0x03
     afc:	9c 83       	std	Y+4, r25	; 0x04
     afe:	2d 83       	std	Y+5, r18	; 0x05
     b00:	3e 83       	std	Y+6, r19	; 0x06
     b02:	4f 83       	std	Y+7, r20	; 0x07
     b04:	58 87       	std	Y+8, r21	; 0x08
     b06:	ce 01       	movw	r24, r28
     b08:	01 96       	adiw	r24, 0x01	; 1
     b0a:	be 01       	movw	r22, r28
     b0c:	67 5f       	subi	r22, 0xF7	; 247
     b0e:	7f 4f       	sbci	r23, 0xFF	; 255
     b10:	5e d2       	rcall	.+1212   	; 0xfce <__unpack_f>
     b12:	ce 01       	movw	r24, r28
     b14:	05 96       	adiw	r24, 0x05	; 5
     b16:	be 01       	movw	r22, r28
     b18:	6f 5e       	subi	r22, 0xEF	; 239
     b1a:	7f 4f       	sbci	r23, 0xFF	; 255
     b1c:	58 d2       	rcall	.+1200   	; 0xfce <__unpack_f>
     b1e:	99 85       	ldd	r25, Y+9	; 0x09
     b20:	92 30       	cpi	r25, 0x02	; 2
     b22:	88 f0       	brcs	.+34     	; 0xb46 <__mulsf3+0x5a>
     b24:	89 89       	ldd	r24, Y+17	; 0x11
     b26:	82 30       	cpi	r24, 0x02	; 2
     b28:	c8 f0       	brcs	.+50     	; 0xb5c <__mulsf3+0x70>
     b2a:	94 30       	cpi	r25, 0x04	; 4
     b2c:	19 f4       	brne	.+6      	; 0xb34 <__mulsf3+0x48>
     b2e:	82 30       	cpi	r24, 0x02	; 2
     b30:	51 f4       	brne	.+20     	; 0xb46 <__mulsf3+0x5a>
     b32:	04 c0       	rjmp	.+8      	; 0xb3c <__mulsf3+0x50>
     b34:	84 30       	cpi	r24, 0x04	; 4
     b36:	29 f4       	brne	.+10     	; 0xb42 <__mulsf3+0x56>
     b38:	92 30       	cpi	r25, 0x02	; 2
     b3a:	81 f4       	brne	.+32     	; 0xb5c <__mulsf3+0x70>
     b3c:	87 e6       	ldi	r24, 0x67	; 103
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	c6 c0       	rjmp	.+396    	; 0xcce <__mulsf3+0x1e2>
     b42:	92 30       	cpi	r25, 0x02	; 2
     b44:	49 f4       	brne	.+18     	; 0xb58 <__mulsf3+0x6c>
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	9a 85       	ldd	r25, Y+10	; 0x0a
     b4a:	8a 89       	ldd	r24, Y+18	; 0x12
     b4c:	98 13       	cpse	r25, r24
     b4e:	21 e0       	ldi	r18, 0x01	; 1
     b50:	2a 87       	std	Y+10, r18	; 0x0a
     b52:	ce 01       	movw	r24, r28
     b54:	09 96       	adiw	r24, 0x09	; 9
     b56:	bb c0       	rjmp	.+374    	; 0xcce <__mulsf3+0x1e2>
     b58:	82 30       	cpi	r24, 0x02	; 2
     b5a:	49 f4       	brne	.+18     	; 0xb6e <__mulsf3+0x82>
     b5c:	20 e0       	ldi	r18, 0x00	; 0
     b5e:	9a 85       	ldd	r25, Y+10	; 0x0a
     b60:	8a 89       	ldd	r24, Y+18	; 0x12
     b62:	98 13       	cpse	r25, r24
     b64:	21 e0       	ldi	r18, 0x01	; 1
     b66:	2a 8b       	std	Y+18, r18	; 0x12
     b68:	ce 01       	movw	r24, r28
     b6a:	41 96       	adiw	r24, 0x11	; 17
     b6c:	b0 c0       	rjmp	.+352    	; 0xcce <__mulsf3+0x1e2>
     b6e:	2d 84       	ldd	r2, Y+13	; 0x0d
     b70:	3e 84       	ldd	r3, Y+14	; 0x0e
     b72:	4f 84       	ldd	r4, Y+15	; 0x0f
     b74:	58 88       	ldd	r5, Y+16	; 0x10
     b76:	6d 88       	ldd	r6, Y+21	; 0x15
     b78:	7e 88       	ldd	r7, Y+22	; 0x16
     b7a:	8f 88       	ldd	r8, Y+23	; 0x17
     b7c:	98 8c       	ldd	r9, Y+24	; 0x18
     b7e:	ee 24       	eor	r14, r14
     b80:	ff 24       	eor	r15, r15
     b82:	87 01       	movw	r16, r14
     b84:	aa 24       	eor	r10, r10
     b86:	bb 24       	eor	r11, r11
     b88:	65 01       	movw	r12, r10
     b8a:	40 e0       	ldi	r20, 0x00	; 0
     b8c:	50 e0       	ldi	r21, 0x00	; 0
     b8e:	60 e0       	ldi	r22, 0x00	; 0
     b90:	70 e0       	ldi	r23, 0x00	; 0
     b92:	e0 e0       	ldi	r30, 0x00	; 0
     b94:	f0 e0       	ldi	r31, 0x00	; 0
     b96:	c1 01       	movw	r24, r2
     b98:	81 70       	andi	r24, 0x01	; 1
     b9a:	90 70       	andi	r25, 0x00	; 0
     b9c:	89 2b       	or	r24, r25
     b9e:	e9 f0       	breq	.+58     	; 0xbda <__mulsf3+0xee>
     ba0:	e6 0c       	add	r14, r6
     ba2:	f7 1c       	adc	r15, r7
     ba4:	08 1d       	adc	r16, r8
     ba6:	19 1d       	adc	r17, r9
     ba8:	9a 01       	movw	r18, r20
     baa:	ab 01       	movw	r20, r22
     bac:	2a 0d       	add	r18, r10
     bae:	3b 1d       	adc	r19, r11
     bb0:	4c 1d       	adc	r20, r12
     bb2:	5d 1d       	adc	r21, r13
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	a0 e0       	ldi	r26, 0x00	; 0
     bba:	b0 e0       	ldi	r27, 0x00	; 0
     bbc:	e6 14       	cp	r14, r6
     bbe:	f7 04       	cpc	r15, r7
     bc0:	08 05       	cpc	r16, r8
     bc2:	19 05       	cpc	r17, r9
     bc4:	20 f4       	brcc	.+8      	; 0xbce <__mulsf3+0xe2>
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	a0 e0       	ldi	r26, 0x00	; 0
     bcc:	b0 e0       	ldi	r27, 0x00	; 0
     bce:	ba 01       	movw	r22, r20
     bd0:	a9 01       	movw	r20, r18
     bd2:	48 0f       	add	r20, r24
     bd4:	59 1f       	adc	r21, r25
     bd6:	6a 1f       	adc	r22, r26
     bd8:	7b 1f       	adc	r23, r27
     bda:	aa 0c       	add	r10, r10
     bdc:	bb 1c       	adc	r11, r11
     bde:	cc 1c       	adc	r12, r12
     be0:	dd 1c       	adc	r13, r13
     be2:	97 fe       	sbrs	r9, 7
     be4:	08 c0       	rjmp	.+16     	; 0xbf6 <__mulsf3+0x10a>
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	a0 e0       	ldi	r26, 0x00	; 0
     bec:	b0 e0       	ldi	r27, 0x00	; 0
     bee:	a8 2a       	or	r10, r24
     bf0:	b9 2a       	or	r11, r25
     bf2:	ca 2a       	or	r12, r26
     bf4:	db 2a       	or	r13, r27
     bf6:	31 96       	adiw	r30, 0x01	; 1
     bf8:	e0 32       	cpi	r30, 0x20	; 32
     bfa:	f1 05       	cpc	r31, r1
     bfc:	49 f0       	breq	.+18     	; 0xc10 <__mulsf3+0x124>
     bfe:	66 0c       	add	r6, r6
     c00:	77 1c       	adc	r7, r7
     c02:	88 1c       	adc	r8, r8
     c04:	99 1c       	adc	r9, r9
     c06:	56 94       	lsr	r5
     c08:	47 94       	ror	r4
     c0a:	37 94       	ror	r3
     c0c:	27 94       	ror	r2
     c0e:	c3 cf       	rjmp	.-122    	; 0xb96 <__mulsf3+0xaa>
     c10:	fa 85       	ldd	r31, Y+10	; 0x0a
     c12:	ea 89       	ldd	r30, Y+18	; 0x12
     c14:	2b 89       	ldd	r18, Y+19	; 0x13
     c16:	3c 89       	ldd	r19, Y+20	; 0x14
     c18:	8b 85       	ldd	r24, Y+11	; 0x0b
     c1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     c1c:	28 0f       	add	r18, r24
     c1e:	39 1f       	adc	r19, r25
     c20:	2e 5f       	subi	r18, 0xFE	; 254
     c22:	3f 4f       	sbci	r19, 0xFF	; 255
     c24:	17 c0       	rjmp	.+46     	; 0xc54 <__mulsf3+0x168>
     c26:	ca 01       	movw	r24, r20
     c28:	81 70       	andi	r24, 0x01	; 1
     c2a:	90 70       	andi	r25, 0x00	; 0
     c2c:	89 2b       	or	r24, r25
     c2e:	61 f0       	breq	.+24     	; 0xc48 <__mulsf3+0x15c>
     c30:	16 95       	lsr	r17
     c32:	07 95       	ror	r16
     c34:	f7 94       	ror	r15
     c36:	e7 94       	ror	r14
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	a0 e0       	ldi	r26, 0x00	; 0
     c3e:	b0 e8       	ldi	r27, 0x80	; 128
     c40:	e8 2a       	or	r14, r24
     c42:	f9 2a       	or	r15, r25
     c44:	0a 2b       	or	r16, r26
     c46:	1b 2b       	or	r17, r27
     c48:	76 95       	lsr	r23
     c4a:	67 95       	ror	r22
     c4c:	57 95       	ror	r21
     c4e:	47 95       	ror	r20
     c50:	2f 5f       	subi	r18, 0xFF	; 255
     c52:	3f 4f       	sbci	r19, 0xFF	; 255
     c54:	77 fd       	sbrc	r23, 7
     c56:	e7 cf       	rjmp	.-50     	; 0xc26 <__mulsf3+0x13a>
     c58:	0c c0       	rjmp	.+24     	; 0xc72 <__mulsf3+0x186>
     c5a:	44 0f       	add	r20, r20
     c5c:	55 1f       	adc	r21, r21
     c5e:	66 1f       	adc	r22, r22
     c60:	77 1f       	adc	r23, r23
     c62:	17 fd       	sbrc	r17, 7
     c64:	41 60       	ori	r20, 0x01	; 1
     c66:	ee 0c       	add	r14, r14
     c68:	ff 1c       	adc	r15, r15
     c6a:	00 1f       	adc	r16, r16
     c6c:	11 1f       	adc	r17, r17
     c6e:	21 50       	subi	r18, 0x01	; 1
     c70:	30 40       	sbci	r19, 0x00	; 0
     c72:	40 30       	cpi	r20, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	59 07       	cpc	r21, r25
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	69 07       	cpc	r22, r25
     c7c:	90 e4       	ldi	r25, 0x40	; 64
     c7e:	79 07       	cpc	r23, r25
     c80:	60 f3       	brcs	.-40     	; 0xc5a <__mulsf3+0x16e>
     c82:	2b 8f       	std	Y+27, r18	; 0x1b
     c84:	3c 8f       	std	Y+28, r19	; 0x1c
     c86:	db 01       	movw	r26, r22
     c88:	ca 01       	movw	r24, r20
     c8a:	8f 77       	andi	r24, 0x7F	; 127
     c8c:	90 70       	andi	r25, 0x00	; 0
     c8e:	a0 70       	andi	r26, 0x00	; 0
     c90:	b0 70       	andi	r27, 0x00	; 0
     c92:	80 34       	cpi	r24, 0x40	; 64
     c94:	91 05       	cpc	r25, r1
     c96:	a1 05       	cpc	r26, r1
     c98:	b1 05       	cpc	r27, r1
     c9a:	61 f4       	brne	.+24     	; 0xcb4 <__mulsf3+0x1c8>
     c9c:	47 fd       	sbrc	r20, 7
     c9e:	0a c0       	rjmp	.+20     	; 0xcb4 <__mulsf3+0x1c8>
     ca0:	e1 14       	cp	r14, r1
     ca2:	f1 04       	cpc	r15, r1
     ca4:	01 05       	cpc	r16, r1
     ca6:	11 05       	cpc	r17, r1
     ca8:	29 f0       	breq	.+10     	; 0xcb4 <__mulsf3+0x1c8>
     caa:	40 5c       	subi	r20, 0xC0	; 192
     cac:	5f 4f       	sbci	r21, 0xFF	; 255
     cae:	6f 4f       	sbci	r22, 0xFF	; 255
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	40 78       	andi	r20, 0x80	; 128
     cb4:	1a 8e       	std	Y+26, r1	; 0x1a
     cb6:	fe 17       	cp	r31, r30
     cb8:	11 f0       	breq	.+4      	; 0xcbe <__mulsf3+0x1d2>
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	8a 8f       	std	Y+26, r24	; 0x1a
     cbe:	4d 8f       	std	Y+29, r20	; 0x1d
     cc0:	5e 8f       	std	Y+30, r21	; 0x1e
     cc2:	6f 8f       	std	Y+31, r22	; 0x1f
     cc4:	78 a3       	std	Y+32, r23	; 0x20
     cc6:	83 e0       	ldi	r24, 0x03	; 3
     cc8:	89 8f       	std	Y+25, r24	; 0x19
     cca:	ce 01       	movw	r24, r28
     ccc:	49 96       	adiw	r24, 0x19	; 25
     cce:	aa d0       	rcall	.+340    	; 0xe24 <__pack_f>
     cd0:	a0 96       	adiw	r28, 0x20	; 32
     cd2:	e2 e1       	ldi	r30, 0x12	; 18
     cd4:	10 c2       	rjmp	.+1056   	; 0x10f6 <__epilogue_restores__>

00000cd6 <__divsf3>:
     cd6:	a8 e1       	ldi	r26, 0x18	; 24
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e0 e7       	ldi	r30, 0x70	; 112
     cdc:	f6 e0       	ldi	r31, 0x06	; 6
     cde:	f7 c1       	rjmp	.+1006   	; 0x10ce <__prologue_saves__+0x10>
     ce0:	69 83       	std	Y+1, r22	; 0x01
     ce2:	7a 83       	std	Y+2, r23	; 0x02
     ce4:	8b 83       	std	Y+3, r24	; 0x03
     ce6:	9c 83       	std	Y+4, r25	; 0x04
     ce8:	2d 83       	std	Y+5, r18	; 0x05
     cea:	3e 83       	std	Y+6, r19	; 0x06
     cec:	4f 83       	std	Y+7, r20	; 0x07
     cee:	58 87       	std	Y+8, r21	; 0x08
     cf0:	b9 e0       	ldi	r27, 0x09	; 9
     cf2:	eb 2e       	mov	r14, r27
     cf4:	f1 2c       	mov	r15, r1
     cf6:	ec 0e       	add	r14, r28
     cf8:	fd 1e       	adc	r15, r29
     cfa:	ce 01       	movw	r24, r28
     cfc:	01 96       	adiw	r24, 0x01	; 1
     cfe:	b7 01       	movw	r22, r14
     d00:	66 d1       	rcall	.+716    	; 0xfce <__unpack_f>
     d02:	8e 01       	movw	r16, r28
     d04:	0f 5e       	subi	r16, 0xEF	; 239
     d06:	1f 4f       	sbci	r17, 0xFF	; 255
     d08:	ce 01       	movw	r24, r28
     d0a:	05 96       	adiw	r24, 0x05	; 5
     d0c:	b8 01       	movw	r22, r16
     d0e:	5f d1       	rcall	.+702    	; 0xfce <__unpack_f>
     d10:	29 85       	ldd	r18, Y+9	; 0x09
     d12:	22 30       	cpi	r18, 0x02	; 2
     d14:	08 f4       	brcc	.+2      	; 0xd18 <__divsf3+0x42>
     d16:	7e c0       	rjmp	.+252    	; 0xe14 <__divsf3+0x13e>
     d18:	39 89       	ldd	r19, Y+17	; 0x11
     d1a:	32 30       	cpi	r19, 0x02	; 2
     d1c:	10 f4       	brcc	.+4      	; 0xd22 <__divsf3+0x4c>
     d1e:	b8 01       	movw	r22, r16
     d20:	7c c0       	rjmp	.+248    	; 0xe1a <__divsf3+0x144>
     d22:	8a 85       	ldd	r24, Y+10	; 0x0a
     d24:	9a 89       	ldd	r25, Y+18	; 0x12
     d26:	89 27       	eor	r24, r25
     d28:	8a 87       	std	Y+10, r24	; 0x0a
     d2a:	24 30       	cpi	r18, 0x04	; 4
     d2c:	11 f0       	breq	.+4      	; 0xd32 <__divsf3+0x5c>
     d2e:	22 30       	cpi	r18, 0x02	; 2
     d30:	31 f4       	brne	.+12     	; 0xd3e <__divsf3+0x68>
     d32:	23 17       	cp	r18, r19
     d34:	09 f0       	breq	.+2      	; 0xd38 <__divsf3+0x62>
     d36:	6e c0       	rjmp	.+220    	; 0xe14 <__divsf3+0x13e>
     d38:	67 e6       	ldi	r22, 0x67	; 103
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	6e c0       	rjmp	.+220    	; 0xe1a <__divsf3+0x144>
     d3e:	34 30       	cpi	r19, 0x04	; 4
     d40:	39 f4       	brne	.+14     	; 0xd50 <__divsf3+0x7a>
     d42:	1d 86       	std	Y+13, r1	; 0x0d
     d44:	1e 86       	std	Y+14, r1	; 0x0e
     d46:	1f 86       	std	Y+15, r1	; 0x0f
     d48:	18 8a       	std	Y+16, r1	; 0x10
     d4a:	1c 86       	std	Y+12, r1	; 0x0c
     d4c:	1b 86       	std	Y+11, r1	; 0x0b
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <__divsf3+0x82>
     d50:	32 30       	cpi	r19, 0x02	; 2
     d52:	21 f4       	brne	.+8      	; 0xd5c <__divsf3+0x86>
     d54:	84 e0       	ldi	r24, 0x04	; 4
     d56:	89 87       	std	Y+9, r24	; 0x09
     d58:	b7 01       	movw	r22, r14
     d5a:	5f c0       	rjmp	.+190    	; 0xe1a <__divsf3+0x144>
     d5c:	2b 85       	ldd	r18, Y+11	; 0x0b
     d5e:	3c 85       	ldd	r19, Y+12	; 0x0c
     d60:	8b 89       	ldd	r24, Y+19	; 0x13
     d62:	9c 89       	ldd	r25, Y+20	; 0x14
     d64:	28 1b       	sub	r18, r24
     d66:	39 0b       	sbc	r19, r25
     d68:	3c 87       	std	Y+12, r19	; 0x0c
     d6a:	2b 87       	std	Y+11, r18	; 0x0b
     d6c:	ed 84       	ldd	r14, Y+13	; 0x0d
     d6e:	fe 84       	ldd	r15, Y+14	; 0x0e
     d70:	0f 85       	ldd	r16, Y+15	; 0x0f
     d72:	18 89       	ldd	r17, Y+16	; 0x10
     d74:	ad 88       	ldd	r10, Y+21	; 0x15
     d76:	be 88       	ldd	r11, Y+22	; 0x16
     d78:	cf 88       	ldd	r12, Y+23	; 0x17
     d7a:	d8 8c       	ldd	r13, Y+24	; 0x18
     d7c:	ea 14       	cp	r14, r10
     d7e:	fb 04       	cpc	r15, r11
     d80:	0c 05       	cpc	r16, r12
     d82:	1d 05       	cpc	r17, r13
     d84:	40 f4       	brcc	.+16     	; 0xd96 <__divsf3+0xc0>
     d86:	ee 0c       	add	r14, r14
     d88:	ff 1c       	adc	r15, r15
     d8a:	00 1f       	adc	r16, r16
     d8c:	11 1f       	adc	r17, r17
     d8e:	21 50       	subi	r18, 0x01	; 1
     d90:	30 40       	sbci	r19, 0x00	; 0
     d92:	3c 87       	std	Y+12, r19	; 0x0c
     d94:	2b 87       	std	Y+11, r18	; 0x0b
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	a0 e0       	ldi	r26, 0x00	; 0
     da4:	b0 e4       	ldi	r27, 0x40	; 64
     da6:	60 e0       	ldi	r22, 0x00	; 0
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	ea 14       	cp	r14, r10
     dac:	fb 04       	cpc	r15, r11
     dae:	0c 05       	cpc	r16, r12
     db0:	1d 05       	cpc	r17, r13
     db2:	40 f0       	brcs	.+16     	; 0xdc4 <__divsf3+0xee>
     db4:	28 2b       	or	r18, r24
     db6:	39 2b       	or	r19, r25
     db8:	4a 2b       	or	r20, r26
     dba:	5b 2b       	or	r21, r27
     dbc:	ea 18       	sub	r14, r10
     dbe:	fb 08       	sbc	r15, r11
     dc0:	0c 09       	sbc	r16, r12
     dc2:	1d 09       	sbc	r17, r13
     dc4:	b6 95       	lsr	r27
     dc6:	a7 95       	ror	r26
     dc8:	97 95       	ror	r25
     dca:	87 95       	ror	r24
     dcc:	ee 0c       	add	r14, r14
     dce:	ff 1c       	adc	r15, r15
     dd0:	00 1f       	adc	r16, r16
     dd2:	11 1f       	adc	r17, r17
     dd4:	6f 5f       	subi	r22, 0xFF	; 255
     dd6:	7f 4f       	sbci	r23, 0xFF	; 255
     dd8:	6f 31       	cpi	r22, 0x1F	; 31
     dda:	71 05       	cpc	r23, r1
     ddc:	31 f7       	brne	.-52     	; 0xdaa <__divsf3+0xd4>
     dde:	da 01       	movw	r26, r20
     de0:	c9 01       	movw	r24, r18
     de2:	8f 77       	andi	r24, 0x7F	; 127
     de4:	90 70       	andi	r25, 0x00	; 0
     de6:	a0 70       	andi	r26, 0x00	; 0
     de8:	b0 70       	andi	r27, 0x00	; 0
     dea:	80 34       	cpi	r24, 0x40	; 64
     dec:	91 05       	cpc	r25, r1
     dee:	a1 05       	cpc	r26, r1
     df0:	b1 05       	cpc	r27, r1
     df2:	61 f4       	brne	.+24     	; 0xe0c <__divsf3+0x136>
     df4:	27 fd       	sbrc	r18, 7
     df6:	0a c0       	rjmp	.+20     	; 0xe0c <__divsf3+0x136>
     df8:	e1 14       	cp	r14, r1
     dfa:	f1 04       	cpc	r15, r1
     dfc:	01 05       	cpc	r16, r1
     dfe:	11 05       	cpc	r17, r1
     e00:	29 f0       	breq	.+10     	; 0xe0c <__divsf3+0x136>
     e02:	20 5c       	subi	r18, 0xC0	; 192
     e04:	3f 4f       	sbci	r19, 0xFF	; 255
     e06:	4f 4f       	sbci	r20, 0xFF	; 255
     e08:	5f 4f       	sbci	r21, 0xFF	; 255
     e0a:	20 78       	andi	r18, 0x80	; 128
     e0c:	2d 87       	std	Y+13, r18	; 0x0d
     e0e:	3e 87       	std	Y+14, r19	; 0x0e
     e10:	4f 87       	std	Y+15, r20	; 0x0f
     e12:	58 8b       	std	Y+16, r21	; 0x10
     e14:	be 01       	movw	r22, r28
     e16:	67 5f       	subi	r22, 0xF7	; 247
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	cb 01       	movw	r24, r22
     e1c:	03 d0       	rcall	.+6      	; 0xe24 <__pack_f>
     e1e:	68 96       	adiw	r28, 0x18	; 24
     e20:	ea e0       	ldi	r30, 0x0A	; 10
     e22:	71 c1       	rjmp	.+738    	; 0x1106 <__epilogue_restores__+0x10>

00000e24 <__pack_f>:
     e24:	df 92       	push	r13
     e26:	ef 92       	push	r14
     e28:	ff 92       	push	r15
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	fc 01       	movw	r30, r24
     e30:	e4 80       	ldd	r14, Z+4	; 0x04
     e32:	f5 80       	ldd	r15, Z+5	; 0x05
     e34:	06 81       	ldd	r16, Z+6	; 0x06
     e36:	17 81       	ldd	r17, Z+7	; 0x07
     e38:	d1 80       	ldd	r13, Z+1	; 0x01
     e3a:	80 81       	ld	r24, Z
     e3c:	82 30       	cpi	r24, 0x02	; 2
     e3e:	48 f4       	brcc	.+18     	; 0xe52 <__pack_f+0x2e>
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	a0 e1       	ldi	r26, 0x10	; 16
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e8 2a       	or	r14, r24
     e4a:	f9 2a       	or	r15, r25
     e4c:	0a 2b       	or	r16, r26
     e4e:	1b 2b       	or	r17, r27
     e50:	a5 c0       	rjmp	.+330    	; 0xf9c <__pack_f+0x178>
     e52:	84 30       	cpi	r24, 0x04	; 4
     e54:	09 f4       	brne	.+2      	; 0xe58 <__pack_f+0x34>
     e56:	9f c0       	rjmp	.+318    	; 0xf96 <__pack_f+0x172>
     e58:	82 30       	cpi	r24, 0x02	; 2
     e5a:	21 f4       	brne	.+8      	; 0xe64 <__pack_f+0x40>
     e5c:	ee 24       	eor	r14, r14
     e5e:	ff 24       	eor	r15, r15
     e60:	87 01       	movw	r16, r14
     e62:	05 c0       	rjmp	.+10     	; 0xe6e <__pack_f+0x4a>
     e64:	e1 14       	cp	r14, r1
     e66:	f1 04       	cpc	r15, r1
     e68:	01 05       	cpc	r16, r1
     e6a:	11 05       	cpc	r17, r1
     e6c:	19 f4       	brne	.+6      	; 0xe74 <__pack_f+0x50>
     e6e:	e0 e0       	ldi	r30, 0x00	; 0
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	96 c0       	rjmp	.+300    	; 0xfa0 <__pack_f+0x17c>
     e74:	62 81       	ldd	r22, Z+2	; 0x02
     e76:	73 81       	ldd	r23, Z+3	; 0x03
     e78:	9f ef       	ldi	r25, 0xFF	; 255
     e7a:	62 38       	cpi	r22, 0x82	; 130
     e7c:	79 07       	cpc	r23, r25
     e7e:	0c f0       	brlt	.+2      	; 0xe82 <__pack_f+0x5e>
     e80:	5b c0       	rjmp	.+182    	; 0xf38 <__pack_f+0x114>
     e82:	22 e8       	ldi	r18, 0x82	; 130
     e84:	3f ef       	ldi	r19, 0xFF	; 255
     e86:	26 1b       	sub	r18, r22
     e88:	37 0b       	sbc	r19, r23
     e8a:	2a 31       	cpi	r18, 0x1A	; 26
     e8c:	31 05       	cpc	r19, r1
     e8e:	2c f0       	brlt	.+10     	; 0xe9a <__pack_f+0x76>
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	40 e0       	ldi	r20, 0x00	; 0
     e96:	50 e0       	ldi	r21, 0x00	; 0
     e98:	2a c0       	rjmp	.+84     	; 0xeee <__pack_f+0xca>
     e9a:	b8 01       	movw	r22, r16
     e9c:	a7 01       	movw	r20, r14
     e9e:	02 2e       	mov	r0, r18
     ea0:	04 c0       	rjmp	.+8      	; 0xeaa <__pack_f+0x86>
     ea2:	76 95       	lsr	r23
     ea4:	67 95       	ror	r22
     ea6:	57 95       	ror	r21
     ea8:	47 95       	ror	r20
     eaa:	0a 94       	dec	r0
     eac:	d2 f7       	brpl	.-12     	; 0xea2 <__pack_f+0x7e>
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	a0 e0       	ldi	r26, 0x00	; 0
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	04 c0       	rjmp	.+8      	; 0xec0 <__pack_f+0x9c>
     eb8:	88 0f       	add	r24, r24
     eba:	99 1f       	adc	r25, r25
     ebc:	aa 1f       	adc	r26, r26
     ebe:	bb 1f       	adc	r27, r27
     ec0:	2a 95       	dec	r18
     ec2:	d2 f7       	brpl	.-12     	; 0xeb8 <__pack_f+0x94>
     ec4:	01 97       	sbiw	r24, 0x01	; 1
     ec6:	a1 09       	sbc	r26, r1
     ec8:	b1 09       	sbc	r27, r1
     eca:	8e 21       	and	r24, r14
     ecc:	9f 21       	and	r25, r15
     ece:	a0 23       	and	r26, r16
     ed0:	b1 23       	and	r27, r17
     ed2:	00 97       	sbiw	r24, 0x00	; 0
     ed4:	a1 05       	cpc	r26, r1
     ed6:	b1 05       	cpc	r27, r1
     ed8:	21 f0       	breq	.+8      	; 0xee2 <__pack_f+0xbe>
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	9a 01       	movw	r18, r20
     ee4:	ab 01       	movw	r20, r22
     ee6:	28 2b       	or	r18, r24
     ee8:	39 2b       	or	r19, r25
     eea:	4a 2b       	or	r20, r26
     eec:	5b 2b       	or	r21, r27
     eee:	da 01       	movw	r26, r20
     ef0:	c9 01       	movw	r24, r18
     ef2:	8f 77       	andi	r24, 0x7F	; 127
     ef4:	90 70       	andi	r25, 0x00	; 0
     ef6:	a0 70       	andi	r26, 0x00	; 0
     ef8:	b0 70       	andi	r27, 0x00	; 0
     efa:	80 34       	cpi	r24, 0x40	; 64
     efc:	91 05       	cpc	r25, r1
     efe:	a1 05       	cpc	r26, r1
     f00:	b1 05       	cpc	r27, r1
     f02:	39 f4       	brne	.+14     	; 0xf12 <__pack_f+0xee>
     f04:	27 ff       	sbrs	r18, 7
     f06:	09 c0       	rjmp	.+18     	; 0xf1a <__pack_f+0xf6>
     f08:	20 5c       	subi	r18, 0xC0	; 192
     f0a:	3f 4f       	sbci	r19, 0xFF	; 255
     f0c:	4f 4f       	sbci	r20, 0xFF	; 255
     f0e:	5f 4f       	sbci	r21, 0xFF	; 255
     f10:	04 c0       	rjmp	.+8      	; 0xf1a <__pack_f+0xf6>
     f12:	21 5c       	subi	r18, 0xC1	; 193
     f14:	3f 4f       	sbci	r19, 0xFF	; 255
     f16:	4f 4f       	sbci	r20, 0xFF	; 255
     f18:	5f 4f       	sbci	r21, 0xFF	; 255
     f1a:	e0 e0       	ldi	r30, 0x00	; 0
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	20 30       	cpi	r18, 0x00	; 0
     f20:	a0 e0       	ldi	r26, 0x00	; 0
     f22:	3a 07       	cpc	r19, r26
     f24:	a0 e0       	ldi	r26, 0x00	; 0
     f26:	4a 07       	cpc	r20, r26
     f28:	a0 e4       	ldi	r26, 0x40	; 64
     f2a:	5a 07       	cpc	r21, r26
     f2c:	10 f0       	brcs	.+4      	; 0xf32 <__pack_f+0x10e>
     f2e:	e1 e0       	ldi	r30, 0x01	; 1
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	79 01       	movw	r14, r18
     f34:	8a 01       	movw	r16, r20
     f36:	27 c0       	rjmp	.+78     	; 0xf86 <__pack_f+0x162>
     f38:	60 38       	cpi	r22, 0x80	; 128
     f3a:	71 05       	cpc	r23, r1
     f3c:	64 f5       	brge	.+88     	; 0xf96 <__pack_f+0x172>
     f3e:	fb 01       	movw	r30, r22
     f40:	e1 58       	subi	r30, 0x81	; 129
     f42:	ff 4f       	sbci	r31, 0xFF	; 255
     f44:	d8 01       	movw	r26, r16
     f46:	c7 01       	movw	r24, r14
     f48:	8f 77       	andi	r24, 0x7F	; 127
     f4a:	90 70       	andi	r25, 0x00	; 0
     f4c:	a0 70       	andi	r26, 0x00	; 0
     f4e:	b0 70       	andi	r27, 0x00	; 0
     f50:	80 34       	cpi	r24, 0x40	; 64
     f52:	91 05       	cpc	r25, r1
     f54:	a1 05       	cpc	r26, r1
     f56:	b1 05       	cpc	r27, r1
     f58:	39 f4       	brne	.+14     	; 0xf68 <__pack_f+0x144>
     f5a:	e7 fe       	sbrs	r14, 7
     f5c:	0d c0       	rjmp	.+26     	; 0xf78 <__pack_f+0x154>
     f5e:	80 e4       	ldi	r24, 0x40	; 64
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	a0 e0       	ldi	r26, 0x00	; 0
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	04 c0       	rjmp	.+8      	; 0xf70 <__pack_f+0x14c>
     f68:	8f e3       	ldi	r24, 0x3F	; 63
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	a0 e0       	ldi	r26, 0x00	; 0
     f6e:	b0 e0       	ldi	r27, 0x00	; 0
     f70:	e8 0e       	add	r14, r24
     f72:	f9 1e       	adc	r15, r25
     f74:	0a 1f       	adc	r16, r26
     f76:	1b 1f       	adc	r17, r27
     f78:	17 ff       	sbrs	r17, 7
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <__pack_f+0x162>
     f7c:	16 95       	lsr	r17
     f7e:	07 95       	ror	r16
     f80:	f7 94       	ror	r15
     f82:	e7 94       	ror	r14
     f84:	31 96       	adiw	r30, 0x01	; 1
     f86:	87 e0       	ldi	r24, 0x07	; 7
     f88:	16 95       	lsr	r17
     f8a:	07 95       	ror	r16
     f8c:	f7 94       	ror	r15
     f8e:	e7 94       	ror	r14
     f90:	8a 95       	dec	r24
     f92:	d1 f7       	brne	.-12     	; 0xf88 <__pack_f+0x164>
     f94:	05 c0       	rjmp	.+10     	; 0xfa0 <__pack_f+0x17c>
     f96:	ee 24       	eor	r14, r14
     f98:	ff 24       	eor	r15, r15
     f9a:	87 01       	movw	r16, r14
     f9c:	ef ef       	ldi	r30, 0xFF	; 255
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
     fa0:	6e 2f       	mov	r22, r30
     fa2:	67 95       	ror	r22
     fa4:	66 27       	eor	r22, r22
     fa6:	67 95       	ror	r22
     fa8:	90 2f       	mov	r25, r16
     faa:	9f 77       	andi	r25, 0x7F	; 127
     fac:	d7 94       	ror	r13
     fae:	dd 24       	eor	r13, r13
     fb0:	d7 94       	ror	r13
     fb2:	8e 2f       	mov	r24, r30
     fb4:	86 95       	lsr	r24
     fb6:	49 2f       	mov	r20, r25
     fb8:	46 2b       	or	r20, r22
     fba:	58 2f       	mov	r21, r24
     fbc:	5d 29       	or	r21, r13
     fbe:	b7 01       	movw	r22, r14
     fc0:	ca 01       	movw	r24, r20
     fc2:	1f 91       	pop	r17
     fc4:	0f 91       	pop	r16
     fc6:	ff 90       	pop	r15
     fc8:	ef 90       	pop	r14
     fca:	df 90       	pop	r13
     fcc:	08 95       	ret

00000fce <__unpack_f>:
     fce:	fc 01       	movw	r30, r24
     fd0:	db 01       	movw	r26, r22
     fd2:	40 81       	ld	r20, Z
     fd4:	51 81       	ldd	r21, Z+1	; 0x01
     fd6:	22 81       	ldd	r18, Z+2	; 0x02
     fd8:	62 2f       	mov	r22, r18
     fda:	6f 77       	andi	r22, 0x7F	; 127
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	22 1f       	adc	r18, r18
     fe0:	22 27       	eor	r18, r18
     fe2:	22 1f       	adc	r18, r18
     fe4:	93 81       	ldd	r25, Z+3	; 0x03
     fe6:	89 2f       	mov	r24, r25
     fe8:	88 0f       	add	r24, r24
     fea:	82 2b       	or	r24, r18
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	99 1f       	adc	r25, r25
     ff2:	99 27       	eor	r25, r25
     ff4:	99 1f       	adc	r25, r25
     ff6:	11 96       	adiw	r26, 0x01	; 1
     ff8:	9c 93       	st	X, r25
     ffa:	11 97       	sbiw	r26, 0x01	; 1
     ffc:	21 15       	cp	r18, r1
     ffe:	31 05       	cpc	r19, r1
    1000:	a9 f5       	brne	.+106    	; 0x106c <__unpack_f+0x9e>
    1002:	41 15       	cp	r20, r1
    1004:	51 05       	cpc	r21, r1
    1006:	61 05       	cpc	r22, r1
    1008:	71 05       	cpc	r23, r1
    100a:	11 f4       	brne	.+4      	; 0x1010 <__unpack_f+0x42>
    100c:	82 e0       	ldi	r24, 0x02	; 2
    100e:	37 c0       	rjmp	.+110    	; 0x107e <__unpack_f+0xb0>
    1010:	82 e8       	ldi	r24, 0x82	; 130
    1012:	9f ef       	ldi	r25, 0xFF	; 255
    1014:	13 96       	adiw	r26, 0x03	; 3
    1016:	9c 93       	st	X, r25
    1018:	8e 93       	st	-X, r24
    101a:	12 97       	sbiw	r26, 0x02	; 2
    101c:	9a 01       	movw	r18, r20
    101e:	ab 01       	movw	r20, r22
    1020:	67 e0       	ldi	r22, 0x07	; 7
    1022:	22 0f       	add	r18, r18
    1024:	33 1f       	adc	r19, r19
    1026:	44 1f       	adc	r20, r20
    1028:	55 1f       	adc	r21, r21
    102a:	6a 95       	dec	r22
    102c:	d1 f7       	brne	.-12     	; 0x1022 <__unpack_f+0x54>
    102e:	83 e0       	ldi	r24, 0x03	; 3
    1030:	8c 93       	st	X, r24
    1032:	0d c0       	rjmp	.+26     	; 0x104e <__unpack_f+0x80>
    1034:	22 0f       	add	r18, r18
    1036:	33 1f       	adc	r19, r19
    1038:	44 1f       	adc	r20, r20
    103a:	55 1f       	adc	r21, r21
    103c:	12 96       	adiw	r26, 0x02	; 2
    103e:	8d 91       	ld	r24, X+
    1040:	9c 91       	ld	r25, X
    1042:	13 97       	sbiw	r26, 0x03	; 3
    1044:	01 97       	sbiw	r24, 0x01	; 1
    1046:	13 96       	adiw	r26, 0x03	; 3
    1048:	9c 93       	st	X, r25
    104a:	8e 93       	st	-X, r24
    104c:	12 97       	sbiw	r26, 0x02	; 2
    104e:	20 30       	cpi	r18, 0x00	; 0
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	38 07       	cpc	r19, r24
    1054:	80 e0       	ldi	r24, 0x00	; 0
    1056:	48 07       	cpc	r20, r24
    1058:	80 e4       	ldi	r24, 0x40	; 64
    105a:	58 07       	cpc	r21, r24
    105c:	58 f3       	brcs	.-42     	; 0x1034 <__unpack_f+0x66>
    105e:	14 96       	adiw	r26, 0x04	; 4
    1060:	2d 93       	st	X+, r18
    1062:	3d 93       	st	X+, r19
    1064:	4d 93       	st	X+, r20
    1066:	5c 93       	st	X, r21
    1068:	17 97       	sbiw	r26, 0x07	; 7
    106a:	08 95       	ret
    106c:	2f 3f       	cpi	r18, 0xFF	; 255
    106e:	31 05       	cpc	r19, r1
    1070:	79 f4       	brne	.+30     	; 0x1090 <__unpack_f+0xc2>
    1072:	41 15       	cp	r20, r1
    1074:	51 05       	cpc	r21, r1
    1076:	61 05       	cpc	r22, r1
    1078:	71 05       	cpc	r23, r1
    107a:	19 f4       	brne	.+6      	; 0x1082 <__unpack_f+0xb4>
    107c:	84 e0       	ldi	r24, 0x04	; 4
    107e:	8c 93       	st	X, r24
    1080:	08 95       	ret
    1082:	64 ff       	sbrs	r22, 4
    1084:	03 c0       	rjmp	.+6      	; 0x108c <__unpack_f+0xbe>
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	8c 93       	st	X, r24
    108a:	12 c0       	rjmp	.+36     	; 0x10b0 <__unpack_f+0xe2>
    108c:	1c 92       	st	X, r1
    108e:	10 c0       	rjmp	.+32     	; 0x10b0 <__unpack_f+0xe2>
    1090:	2f 57       	subi	r18, 0x7F	; 127
    1092:	30 40       	sbci	r19, 0x00	; 0
    1094:	13 96       	adiw	r26, 0x03	; 3
    1096:	3c 93       	st	X, r19
    1098:	2e 93       	st	-X, r18
    109a:	12 97       	sbiw	r26, 0x02	; 2
    109c:	83 e0       	ldi	r24, 0x03	; 3
    109e:	8c 93       	st	X, r24
    10a0:	87 e0       	ldi	r24, 0x07	; 7
    10a2:	44 0f       	add	r20, r20
    10a4:	55 1f       	adc	r21, r21
    10a6:	66 1f       	adc	r22, r22
    10a8:	77 1f       	adc	r23, r23
    10aa:	8a 95       	dec	r24
    10ac:	d1 f7       	brne	.-12     	; 0x10a2 <__unpack_f+0xd4>
    10ae:	70 64       	ori	r23, 0x40	; 64
    10b0:	14 96       	adiw	r26, 0x04	; 4
    10b2:	4d 93       	st	X+, r20
    10b4:	5d 93       	st	X+, r21
    10b6:	6d 93       	st	X+, r22
    10b8:	7c 93       	st	X, r23
    10ba:	17 97       	sbiw	r26, 0x07	; 7
    10bc:	08 95       	ret

000010be <__prologue_saves__>:
    10be:	2f 92       	push	r2
    10c0:	3f 92       	push	r3
    10c2:	4f 92       	push	r4
    10c4:	5f 92       	push	r5
    10c6:	6f 92       	push	r6
    10c8:	7f 92       	push	r7
    10ca:	8f 92       	push	r8
    10cc:	9f 92       	push	r9
    10ce:	af 92       	push	r10
    10d0:	bf 92       	push	r11
    10d2:	cf 92       	push	r12
    10d4:	df 92       	push	r13
    10d6:	ef 92       	push	r14
    10d8:	ff 92       	push	r15
    10da:	0f 93       	push	r16
    10dc:	1f 93       	push	r17
    10de:	cf 93       	push	r28
    10e0:	df 93       	push	r29
    10e2:	cd b7       	in	r28, 0x3d	; 61
    10e4:	de b7       	in	r29, 0x3e	; 62
    10e6:	ca 1b       	sub	r28, r26
    10e8:	db 0b       	sbc	r29, r27
    10ea:	0f b6       	in	r0, 0x3f	; 63
    10ec:	f8 94       	cli
    10ee:	de bf       	out	0x3e, r29	; 62
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	cd bf       	out	0x3d, r28	; 61
    10f4:	09 94       	ijmp

000010f6 <__epilogue_restores__>:
    10f6:	2a 88       	ldd	r2, Y+18	; 0x12
    10f8:	39 88       	ldd	r3, Y+17	; 0x11
    10fa:	48 88       	ldd	r4, Y+16	; 0x10
    10fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    10fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    1100:	7d 84       	ldd	r7, Y+13	; 0x0d
    1102:	8c 84       	ldd	r8, Y+12	; 0x0c
    1104:	9b 84       	ldd	r9, Y+11	; 0x0b
    1106:	aa 84       	ldd	r10, Y+10	; 0x0a
    1108:	b9 84       	ldd	r11, Y+9	; 0x09
    110a:	c8 84       	ldd	r12, Y+8	; 0x08
    110c:	df 80       	ldd	r13, Y+7	; 0x07
    110e:	ee 80       	ldd	r14, Y+6	; 0x06
    1110:	fd 80       	ldd	r15, Y+5	; 0x05
    1112:	0c 81       	ldd	r16, Y+4	; 0x04
    1114:	1b 81       	ldd	r17, Y+3	; 0x03
    1116:	aa 81       	ldd	r26, Y+2	; 0x02
    1118:	b9 81       	ldd	r27, Y+1	; 0x01
    111a:	ce 0f       	add	r28, r30
    111c:	d1 1d       	adc	r29, r1
    111e:	0f b6       	in	r0, 0x3f	; 63
    1120:	f8 94       	cli
    1122:	de bf       	out	0x3e, r29	; 62
    1124:	0f be       	out	0x3f, r0	; 63
    1126:	cd bf       	out	0x3d, r28	; 61
    1128:	ed 01       	movw	r28, r26
    112a:	08 95       	ret

0000112c <atof>:
    112c:	66 27       	eor	r22, r22
    112e:	77 27       	eor	r23, r23
    1130:	ef c1       	rjmp	.+990    	; 0x1510 <strtod>

00001132 <sprintf>:
    1132:	ae e0       	ldi	r26, 0x0E	; 14
    1134:	b0 e0       	ldi	r27, 0x00	; 0
    1136:	ee e9       	ldi	r30, 0x9E	; 158
    1138:	f8 e0       	ldi	r31, 0x08	; 8
    113a:	cf cf       	rjmp	.-98     	; 0x10da <__prologue_saves__+0x1c>
    113c:	0d 89       	ldd	r16, Y+21	; 0x15
    113e:	1e 89       	ldd	r17, Y+22	; 0x16
    1140:	86 e0       	ldi	r24, 0x06	; 6
    1142:	8c 83       	std	Y+4, r24	; 0x04
    1144:	1a 83       	std	Y+2, r17	; 0x02
    1146:	09 83       	std	Y+1, r16	; 0x01
    1148:	8f ef       	ldi	r24, 0xFF	; 255
    114a:	9f e7       	ldi	r25, 0x7F	; 127
    114c:	9e 83       	std	Y+6, r25	; 0x06
    114e:	8d 83       	std	Y+5, r24	; 0x05
    1150:	9e 01       	movw	r18, r28
    1152:	27 5e       	subi	r18, 0xE7	; 231
    1154:	3f 4f       	sbci	r19, 0xFF	; 255
    1156:	ce 01       	movw	r24, r28
    1158:	01 96       	adiw	r24, 0x01	; 1
    115a:	6f 89       	ldd	r22, Y+23	; 0x17
    115c:	78 8d       	ldd	r23, Y+24	; 0x18
    115e:	a9 01       	movw	r20, r18
    1160:	09 d0       	rcall	.+18     	; 0x1174 <vfprintf>
    1162:	2f 81       	ldd	r18, Y+7	; 0x07
    1164:	38 85       	ldd	r19, Y+8	; 0x08
    1166:	02 0f       	add	r16, r18
    1168:	13 1f       	adc	r17, r19
    116a:	f8 01       	movw	r30, r16
    116c:	10 82       	st	Z, r1
    116e:	2e 96       	adiw	r28, 0x0e	; 14
    1170:	e4 e0       	ldi	r30, 0x04	; 4
    1172:	cf cf       	rjmp	.-98     	; 0x1112 <__epilogue_restores__+0x1c>

00001174 <vfprintf>:
    1174:	ab e0       	ldi	r26, 0x0B	; 11
    1176:	b0 e0       	ldi	r27, 0x00	; 0
    1178:	ef eb       	ldi	r30, 0xBF	; 191
    117a:	f8 e0       	ldi	r31, 0x08	; 8
    117c:	a0 cf       	rjmp	.-192    	; 0x10be <__prologue_saves__>
    117e:	3c 01       	movw	r6, r24
    1180:	2b 01       	movw	r4, r22
    1182:	5a 01       	movw	r10, r20
    1184:	fc 01       	movw	r30, r24
    1186:	17 82       	std	Z+7, r1	; 0x07
    1188:	16 82       	std	Z+6, r1	; 0x06
    118a:	83 81       	ldd	r24, Z+3	; 0x03
    118c:	81 fd       	sbrc	r24, 1
    118e:	03 c0       	rjmp	.+6      	; 0x1196 <vfprintf+0x22>
    1190:	6f ef       	ldi	r22, 0xFF	; 255
    1192:	7f ef       	ldi	r23, 0xFF	; 255
    1194:	b9 c1       	rjmp	.+882    	; 0x1508 <vfprintf+0x394>
    1196:	9a e0       	ldi	r25, 0x0A	; 10
    1198:	89 2e       	mov	r8, r25
    119a:	1e 01       	movw	r2, r28
    119c:	08 94       	sec
    119e:	21 1c       	adc	r2, r1
    11a0:	31 1c       	adc	r3, r1
    11a2:	f3 01       	movw	r30, r6
    11a4:	23 81       	ldd	r18, Z+3	; 0x03
    11a6:	f2 01       	movw	r30, r4
    11a8:	23 fd       	sbrc	r18, 3
    11aa:	85 91       	lpm	r24, Z+
    11ac:	23 ff       	sbrs	r18, 3
    11ae:	81 91       	ld	r24, Z+
    11b0:	2f 01       	movw	r4, r30
    11b2:	88 23       	and	r24, r24
    11b4:	09 f4       	brne	.+2      	; 0x11b8 <vfprintf+0x44>
    11b6:	a5 c1       	rjmp	.+842    	; 0x1502 <vfprintf+0x38e>
    11b8:	85 32       	cpi	r24, 0x25	; 37
    11ba:	39 f4       	brne	.+14     	; 0x11ca <vfprintf+0x56>
    11bc:	23 fd       	sbrc	r18, 3
    11be:	85 91       	lpm	r24, Z+
    11c0:	23 ff       	sbrs	r18, 3
    11c2:	81 91       	ld	r24, Z+
    11c4:	2f 01       	movw	r4, r30
    11c6:	85 32       	cpi	r24, 0x25	; 37
    11c8:	21 f4       	brne	.+8      	; 0x11d2 <vfprintf+0x5e>
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	b3 01       	movw	r22, r6
    11ce:	2c d3       	rcall	.+1624   	; 0x1828 <fputc>
    11d0:	e8 cf       	rjmp	.-48     	; 0x11a2 <vfprintf+0x2e>
    11d2:	98 2f       	mov	r25, r24
    11d4:	ff 24       	eor	r15, r15
    11d6:	ee 24       	eor	r14, r14
    11d8:	99 24       	eor	r9, r9
    11da:	ff e1       	ldi	r31, 0x1F	; 31
    11dc:	ff 15       	cp	r31, r15
    11de:	d0 f0       	brcs	.+52     	; 0x1214 <vfprintf+0xa0>
    11e0:	9b 32       	cpi	r25, 0x2B	; 43
    11e2:	69 f0       	breq	.+26     	; 0x11fe <vfprintf+0x8a>
    11e4:	9c 32       	cpi	r25, 0x2C	; 44
    11e6:	28 f4       	brcc	.+10     	; 0x11f2 <vfprintf+0x7e>
    11e8:	90 32       	cpi	r25, 0x20	; 32
    11ea:	59 f0       	breq	.+22     	; 0x1202 <vfprintf+0x8e>
    11ec:	93 32       	cpi	r25, 0x23	; 35
    11ee:	91 f4       	brne	.+36     	; 0x1214 <vfprintf+0xa0>
    11f0:	0e c0       	rjmp	.+28     	; 0x120e <vfprintf+0x9a>
    11f2:	9d 32       	cpi	r25, 0x2D	; 45
    11f4:	49 f0       	breq	.+18     	; 0x1208 <vfprintf+0x94>
    11f6:	90 33       	cpi	r25, 0x30	; 48
    11f8:	69 f4       	brne	.+26     	; 0x1214 <vfprintf+0xa0>
    11fa:	41 e0       	ldi	r20, 0x01	; 1
    11fc:	24 c0       	rjmp	.+72     	; 0x1246 <vfprintf+0xd2>
    11fe:	52 e0       	ldi	r21, 0x02	; 2
    1200:	f5 2a       	or	r15, r21
    1202:	84 e0       	ldi	r24, 0x04	; 4
    1204:	f8 2a       	or	r15, r24
    1206:	28 c0       	rjmp	.+80     	; 0x1258 <vfprintf+0xe4>
    1208:	98 e0       	ldi	r25, 0x08	; 8
    120a:	f9 2a       	or	r15, r25
    120c:	25 c0       	rjmp	.+74     	; 0x1258 <vfprintf+0xe4>
    120e:	e0 e1       	ldi	r30, 0x10	; 16
    1210:	fe 2a       	or	r15, r30
    1212:	22 c0       	rjmp	.+68     	; 0x1258 <vfprintf+0xe4>
    1214:	f7 fc       	sbrc	r15, 7
    1216:	29 c0       	rjmp	.+82     	; 0x126a <vfprintf+0xf6>
    1218:	89 2f       	mov	r24, r25
    121a:	80 53       	subi	r24, 0x30	; 48
    121c:	8a 30       	cpi	r24, 0x0A	; 10
    121e:	70 f4       	brcc	.+28     	; 0x123c <vfprintf+0xc8>
    1220:	f6 fe       	sbrs	r15, 6
    1222:	05 c0       	rjmp	.+10     	; 0x122e <vfprintf+0xba>
    1224:	98 9c       	mul	r9, r8
    1226:	90 2c       	mov	r9, r0
    1228:	11 24       	eor	r1, r1
    122a:	98 0e       	add	r9, r24
    122c:	15 c0       	rjmp	.+42     	; 0x1258 <vfprintf+0xe4>
    122e:	e8 9c       	mul	r14, r8
    1230:	e0 2c       	mov	r14, r0
    1232:	11 24       	eor	r1, r1
    1234:	e8 0e       	add	r14, r24
    1236:	f0 e2       	ldi	r31, 0x20	; 32
    1238:	ff 2a       	or	r15, r31
    123a:	0e c0       	rjmp	.+28     	; 0x1258 <vfprintf+0xe4>
    123c:	9e 32       	cpi	r25, 0x2E	; 46
    123e:	29 f4       	brne	.+10     	; 0x124a <vfprintf+0xd6>
    1240:	f6 fc       	sbrc	r15, 6
    1242:	5f c1       	rjmp	.+702    	; 0x1502 <vfprintf+0x38e>
    1244:	40 e4       	ldi	r20, 0x40	; 64
    1246:	f4 2a       	or	r15, r20
    1248:	07 c0       	rjmp	.+14     	; 0x1258 <vfprintf+0xe4>
    124a:	9c 36       	cpi	r25, 0x6C	; 108
    124c:	19 f4       	brne	.+6      	; 0x1254 <vfprintf+0xe0>
    124e:	50 e8       	ldi	r21, 0x80	; 128
    1250:	f5 2a       	or	r15, r21
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <vfprintf+0xe4>
    1254:	98 36       	cpi	r25, 0x68	; 104
    1256:	49 f4       	brne	.+18     	; 0x126a <vfprintf+0xf6>
    1258:	f2 01       	movw	r30, r4
    125a:	23 fd       	sbrc	r18, 3
    125c:	95 91       	lpm	r25, Z+
    125e:	23 ff       	sbrs	r18, 3
    1260:	91 91       	ld	r25, Z+
    1262:	2f 01       	movw	r4, r30
    1264:	99 23       	and	r25, r25
    1266:	09 f0       	breq	.+2      	; 0x126a <vfprintf+0xf6>
    1268:	b8 cf       	rjmp	.-144    	; 0x11da <vfprintf+0x66>
    126a:	89 2f       	mov	r24, r25
    126c:	85 54       	subi	r24, 0x45	; 69
    126e:	83 30       	cpi	r24, 0x03	; 3
    1270:	18 f0       	brcs	.+6      	; 0x1278 <vfprintf+0x104>
    1272:	80 52       	subi	r24, 0x20	; 32
    1274:	83 30       	cpi	r24, 0x03	; 3
    1276:	38 f4       	brcc	.+14     	; 0x1286 <vfprintf+0x112>
    1278:	44 e0       	ldi	r20, 0x04	; 4
    127a:	50 e0       	ldi	r21, 0x00	; 0
    127c:	a4 0e       	add	r10, r20
    127e:	b5 1e       	adc	r11, r21
    1280:	5f e3       	ldi	r21, 0x3F	; 63
    1282:	59 83       	std	Y+1, r21	; 0x01
    1284:	0f c0       	rjmp	.+30     	; 0x12a4 <vfprintf+0x130>
    1286:	93 36       	cpi	r25, 0x63	; 99
    1288:	31 f0       	breq	.+12     	; 0x1296 <vfprintf+0x122>
    128a:	93 37       	cpi	r25, 0x73	; 115
    128c:	79 f0       	breq	.+30     	; 0x12ac <vfprintf+0x138>
    128e:	93 35       	cpi	r25, 0x53	; 83
    1290:	09 f0       	breq	.+2      	; 0x1294 <vfprintf+0x120>
    1292:	52 c0       	rjmp	.+164    	; 0x1338 <vfprintf+0x1c4>
    1294:	1f c0       	rjmp	.+62     	; 0x12d4 <vfprintf+0x160>
    1296:	f5 01       	movw	r30, r10
    1298:	80 81       	ld	r24, Z
    129a:	89 83       	std	Y+1, r24	; 0x01
    129c:	42 e0       	ldi	r20, 0x02	; 2
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	a4 0e       	add	r10, r20
    12a2:	b5 1e       	adc	r11, r21
    12a4:	61 01       	movw	r12, r2
    12a6:	01 e0       	ldi	r16, 0x01	; 1
    12a8:	10 e0       	ldi	r17, 0x00	; 0
    12aa:	11 c0       	rjmp	.+34     	; 0x12ce <vfprintf+0x15a>
    12ac:	f5 01       	movw	r30, r10
    12ae:	c0 80       	ld	r12, Z
    12b0:	d1 80       	ldd	r13, Z+1	; 0x01
    12b2:	f6 fc       	sbrc	r15, 6
    12b4:	03 c0       	rjmp	.+6      	; 0x12bc <vfprintf+0x148>
    12b6:	6f ef       	ldi	r22, 0xFF	; 255
    12b8:	7f ef       	ldi	r23, 0xFF	; 255
    12ba:	02 c0       	rjmp	.+4      	; 0x12c0 <vfprintf+0x14c>
    12bc:	69 2d       	mov	r22, r9
    12be:	70 e0       	ldi	r23, 0x00	; 0
    12c0:	42 e0       	ldi	r20, 0x02	; 2
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	a4 0e       	add	r10, r20
    12c6:	b5 1e       	adc	r11, r21
    12c8:	c6 01       	movw	r24, r12
    12ca:	a3 d2       	rcall	.+1350   	; 0x1812 <strnlen>
    12cc:	8c 01       	movw	r16, r24
    12ce:	5f e7       	ldi	r21, 0x7F	; 127
    12d0:	f5 22       	and	r15, r21
    12d2:	13 c0       	rjmp	.+38     	; 0x12fa <vfprintf+0x186>
    12d4:	f5 01       	movw	r30, r10
    12d6:	c0 80       	ld	r12, Z
    12d8:	d1 80       	ldd	r13, Z+1	; 0x01
    12da:	f6 fc       	sbrc	r15, 6
    12dc:	03 c0       	rjmp	.+6      	; 0x12e4 <vfprintf+0x170>
    12de:	6f ef       	ldi	r22, 0xFF	; 255
    12e0:	7f ef       	ldi	r23, 0xFF	; 255
    12e2:	02 c0       	rjmp	.+4      	; 0x12e8 <vfprintf+0x174>
    12e4:	69 2d       	mov	r22, r9
    12e6:	70 e0       	ldi	r23, 0x00	; 0
    12e8:	42 e0       	ldi	r20, 0x02	; 2
    12ea:	50 e0       	ldi	r21, 0x00	; 0
    12ec:	a4 0e       	add	r10, r20
    12ee:	b5 1e       	adc	r11, r21
    12f0:	c6 01       	movw	r24, r12
    12f2:	84 d2       	rcall	.+1288   	; 0x17fc <strnlen_P>
    12f4:	8c 01       	movw	r16, r24
    12f6:	50 e8       	ldi	r21, 0x80	; 128
    12f8:	f5 2a       	or	r15, r21
    12fa:	f3 fe       	sbrs	r15, 3
    12fc:	06 c0       	rjmp	.+12     	; 0x130a <vfprintf+0x196>
    12fe:	18 c0       	rjmp	.+48     	; 0x1330 <vfprintf+0x1bc>
    1300:	80 e2       	ldi	r24, 0x20	; 32
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	b3 01       	movw	r22, r6
    1306:	90 d2       	rcall	.+1312   	; 0x1828 <fputc>
    1308:	ea 94       	dec	r14
    130a:	8e 2d       	mov	r24, r14
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	08 17       	cp	r16, r24
    1310:	19 07       	cpc	r17, r25
    1312:	b0 f3       	brcs	.-20     	; 0x1300 <vfprintf+0x18c>
    1314:	0d c0       	rjmp	.+26     	; 0x1330 <vfprintf+0x1bc>
    1316:	f6 01       	movw	r30, r12
    1318:	f7 fc       	sbrc	r15, 7
    131a:	85 91       	lpm	r24, Z+
    131c:	f7 fe       	sbrs	r15, 7
    131e:	81 91       	ld	r24, Z+
    1320:	6f 01       	movw	r12, r30
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	b3 01       	movw	r22, r6
    1326:	80 d2       	rcall	.+1280   	; 0x1828 <fputc>
    1328:	e1 10       	cpse	r14, r1
    132a:	ea 94       	dec	r14
    132c:	01 50       	subi	r16, 0x01	; 1
    132e:	10 40       	sbci	r17, 0x00	; 0
    1330:	01 15       	cp	r16, r1
    1332:	11 05       	cpc	r17, r1
    1334:	81 f7       	brne	.-32     	; 0x1316 <vfprintf+0x1a2>
    1336:	e2 c0       	rjmp	.+452    	; 0x14fc <vfprintf+0x388>
    1338:	94 36       	cpi	r25, 0x64	; 100
    133a:	11 f0       	breq	.+4      	; 0x1340 <vfprintf+0x1cc>
    133c:	99 36       	cpi	r25, 0x69	; 105
    133e:	61 f5       	brne	.+88     	; 0x1398 <vfprintf+0x224>
    1340:	f7 fe       	sbrs	r15, 7
    1342:	08 c0       	rjmp	.+16     	; 0x1354 <vfprintf+0x1e0>
    1344:	f5 01       	movw	r30, r10
    1346:	20 81       	ld	r18, Z
    1348:	31 81       	ldd	r19, Z+1	; 0x01
    134a:	42 81       	ldd	r20, Z+2	; 0x02
    134c:	53 81       	ldd	r21, Z+3	; 0x03
    134e:	84 e0       	ldi	r24, 0x04	; 4
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	0a c0       	rjmp	.+20     	; 0x1368 <vfprintf+0x1f4>
    1354:	f5 01       	movw	r30, r10
    1356:	80 81       	ld	r24, Z
    1358:	91 81       	ldd	r25, Z+1	; 0x01
    135a:	9c 01       	movw	r18, r24
    135c:	44 27       	eor	r20, r20
    135e:	37 fd       	sbrc	r19, 7
    1360:	40 95       	com	r20
    1362:	54 2f       	mov	r21, r20
    1364:	82 e0       	ldi	r24, 0x02	; 2
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	a8 0e       	add	r10, r24
    136a:	b9 1e       	adc	r11, r25
    136c:	9f e6       	ldi	r25, 0x6F	; 111
    136e:	f9 22       	and	r15, r25
    1370:	57 ff       	sbrs	r21, 7
    1372:	09 c0       	rjmp	.+18     	; 0x1386 <vfprintf+0x212>
    1374:	50 95       	com	r21
    1376:	40 95       	com	r20
    1378:	30 95       	com	r19
    137a:	21 95       	neg	r18
    137c:	3f 4f       	sbci	r19, 0xFF	; 255
    137e:	4f 4f       	sbci	r20, 0xFF	; 255
    1380:	5f 4f       	sbci	r21, 0xFF	; 255
    1382:	e0 e8       	ldi	r30, 0x80	; 128
    1384:	fe 2a       	or	r15, r30
    1386:	ca 01       	movw	r24, r20
    1388:	b9 01       	movw	r22, r18
    138a:	a1 01       	movw	r20, r2
    138c:	2a e0       	ldi	r18, 0x0A	; 10
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	77 d2       	rcall	.+1262   	; 0x1880 <__ultoa_invert>
    1392:	d8 2e       	mov	r13, r24
    1394:	d2 18       	sub	r13, r2
    1396:	3f c0       	rjmp	.+126    	; 0x1416 <vfprintf+0x2a2>
    1398:	95 37       	cpi	r25, 0x75	; 117
    139a:	29 f4       	brne	.+10     	; 0x13a6 <vfprintf+0x232>
    139c:	1f 2d       	mov	r17, r15
    139e:	1f 7e       	andi	r17, 0xEF	; 239
    13a0:	2a e0       	ldi	r18, 0x0A	; 10
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	1d c0       	rjmp	.+58     	; 0x13e0 <vfprintf+0x26c>
    13a6:	1f 2d       	mov	r17, r15
    13a8:	19 7f       	andi	r17, 0xF9	; 249
    13aa:	9f 36       	cpi	r25, 0x6F	; 111
    13ac:	61 f0       	breq	.+24     	; 0x13c6 <vfprintf+0x252>
    13ae:	90 37       	cpi	r25, 0x70	; 112
    13b0:	20 f4       	brcc	.+8      	; 0x13ba <vfprintf+0x246>
    13b2:	98 35       	cpi	r25, 0x58	; 88
    13b4:	09 f0       	breq	.+2      	; 0x13b8 <vfprintf+0x244>
    13b6:	a5 c0       	rjmp	.+330    	; 0x1502 <vfprintf+0x38e>
    13b8:	0f c0       	rjmp	.+30     	; 0x13d8 <vfprintf+0x264>
    13ba:	90 37       	cpi	r25, 0x70	; 112
    13bc:	39 f0       	breq	.+14     	; 0x13cc <vfprintf+0x258>
    13be:	98 37       	cpi	r25, 0x78	; 120
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <vfprintf+0x250>
    13c2:	9f c0       	rjmp	.+318    	; 0x1502 <vfprintf+0x38e>
    13c4:	04 c0       	rjmp	.+8      	; 0x13ce <vfprintf+0x25a>
    13c6:	28 e0       	ldi	r18, 0x08	; 8
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	0a c0       	rjmp	.+20     	; 0x13e0 <vfprintf+0x26c>
    13cc:	10 61       	ori	r17, 0x10	; 16
    13ce:	14 fd       	sbrc	r17, 4
    13d0:	14 60       	ori	r17, 0x04	; 4
    13d2:	20 e1       	ldi	r18, 0x10	; 16
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	04 c0       	rjmp	.+8      	; 0x13e0 <vfprintf+0x26c>
    13d8:	14 fd       	sbrc	r17, 4
    13da:	16 60       	ori	r17, 0x06	; 6
    13dc:	20 e1       	ldi	r18, 0x10	; 16
    13de:	32 e0       	ldi	r19, 0x02	; 2
    13e0:	17 ff       	sbrs	r17, 7
    13e2:	08 c0       	rjmp	.+16     	; 0x13f4 <vfprintf+0x280>
    13e4:	f5 01       	movw	r30, r10
    13e6:	60 81       	ld	r22, Z
    13e8:	71 81       	ldd	r23, Z+1	; 0x01
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	93 81       	ldd	r25, Z+3	; 0x03
    13ee:	44 e0       	ldi	r20, 0x04	; 4
    13f0:	50 e0       	ldi	r21, 0x00	; 0
    13f2:	08 c0       	rjmp	.+16     	; 0x1404 <vfprintf+0x290>
    13f4:	f5 01       	movw	r30, r10
    13f6:	80 81       	ld	r24, Z
    13f8:	91 81       	ldd	r25, Z+1	; 0x01
    13fa:	bc 01       	movw	r22, r24
    13fc:	80 e0       	ldi	r24, 0x00	; 0
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	42 e0       	ldi	r20, 0x02	; 2
    1402:	50 e0       	ldi	r21, 0x00	; 0
    1404:	a4 0e       	add	r10, r20
    1406:	b5 1e       	adc	r11, r21
    1408:	a1 01       	movw	r20, r2
    140a:	3a d2       	rcall	.+1140   	; 0x1880 <__ultoa_invert>
    140c:	d8 2e       	mov	r13, r24
    140e:	d2 18       	sub	r13, r2
    1410:	8f e7       	ldi	r24, 0x7F	; 127
    1412:	f8 2e       	mov	r15, r24
    1414:	f1 22       	and	r15, r17
    1416:	f6 fe       	sbrs	r15, 6
    1418:	0b c0       	rjmp	.+22     	; 0x1430 <vfprintf+0x2bc>
    141a:	5e ef       	ldi	r21, 0xFE	; 254
    141c:	f5 22       	and	r15, r21
    141e:	d9 14       	cp	r13, r9
    1420:	38 f4       	brcc	.+14     	; 0x1430 <vfprintf+0x2bc>
    1422:	f4 fe       	sbrs	r15, 4
    1424:	07 c0       	rjmp	.+14     	; 0x1434 <vfprintf+0x2c0>
    1426:	f2 fc       	sbrc	r15, 2
    1428:	05 c0       	rjmp	.+10     	; 0x1434 <vfprintf+0x2c0>
    142a:	8f ee       	ldi	r24, 0xEF	; 239
    142c:	f8 22       	and	r15, r24
    142e:	02 c0       	rjmp	.+4      	; 0x1434 <vfprintf+0x2c0>
    1430:	1d 2d       	mov	r17, r13
    1432:	01 c0       	rjmp	.+2      	; 0x1436 <vfprintf+0x2c2>
    1434:	19 2d       	mov	r17, r9
    1436:	f4 fe       	sbrs	r15, 4
    1438:	0d c0       	rjmp	.+26     	; 0x1454 <vfprintf+0x2e0>
    143a:	fe 01       	movw	r30, r28
    143c:	ed 0d       	add	r30, r13
    143e:	f1 1d       	adc	r31, r1
    1440:	80 81       	ld	r24, Z
    1442:	80 33       	cpi	r24, 0x30	; 48
    1444:	19 f4       	brne	.+6      	; 0x144c <vfprintf+0x2d8>
    1446:	99 ee       	ldi	r25, 0xE9	; 233
    1448:	f9 22       	and	r15, r25
    144a:	08 c0       	rjmp	.+16     	; 0x145c <vfprintf+0x2e8>
    144c:	1f 5f       	subi	r17, 0xFF	; 255
    144e:	f2 fe       	sbrs	r15, 2
    1450:	05 c0       	rjmp	.+10     	; 0x145c <vfprintf+0x2e8>
    1452:	03 c0       	rjmp	.+6      	; 0x145a <vfprintf+0x2e6>
    1454:	8f 2d       	mov	r24, r15
    1456:	86 78       	andi	r24, 0x86	; 134
    1458:	09 f0       	breq	.+2      	; 0x145c <vfprintf+0x2e8>
    145a:	1f 5f       	subi	r17, 0xFF	; 255
    145c:	0f 2d       	mov	r16, r15
    145e:	f3 fc       	sbrc	r15, 3
    1460:	13 c0       	rjmp	.+38     	; 0x1488 <vfprintf+0x314>
    1462:	f0 fe       	sbrs	r15, 0
    1464:	0e c0       	rjmp	.+28     	; 0x1482 <vfprintf+0x30e>
    1466:	1e 15       	cp	r17, r14
    1468:	10 f0       	brcs	.+4      	; 0x146e <vfprintf+0x2fa>
    146a:	9d 2c       	mov	r9, r13
    146c:	0a c0       	rjmp	.+20     	; 0x1482 <vfprintf+0x30e>
    146e:	9d 2c       	mov	r9, r13
    1470:	9e 0c       	add	r9, r14
    1472:	91 1a       	sub	r9, r17
    1474:	1e 2d       	mov	r17, r14
    1476:	05 c0       	rjmp	.+10     	; 0x1482 <vfprintf+0x30e>
    1478:	80 e2       	ldi	r24, 0x20	; 32
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	b3 01       	movw	r22, r6
    147e:	d4 d1       	rcall	.+936    	; 0x1828 <fputc>
    1480:	1f 5f       	subi	r17, 0xFF	; 255
    1482:	1e 15       	cp	r17, r14
    1484:	c8 f3       	brcs	.-14     	; 0x1478 <vfprintf+0x304>
    1486:	04 c0       	rjmp	.+8      	; 0x1490 <vfprintf+0x31c>
    1488:	1e 15       	cp	r17, r14
    148a:	10 f4       	brcc	.+4      	; 0x1490 <vfprintf+0x31c>
    148c:	e1 1a       	sub	r14, r17
    148e:	01 c0       	rjmp	.+2      	; 0x1492 <vfprintf+0x31e>
    1490:	ee 24       	eor	r14, r14
    1492:	04 ff       	sbrs	r16, 4
    1494:	0e c0       	rjmp	.+28     	; 0x14b2 <vfprintf+0x33e>
    1496:	80 e3       	ldi	r24, 0x30	; 48
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	b3 01       	movw	r22, r6
    149c:	c5 d1       	rcall	.+906    	; 0x1828 <fputc>
    149e:	02 ff       	sbrs	r16, 2
    14a0:	1b c0       	rjmp	.+54     	; 0x14d8 <vfprintf+0x364>
    14a2:	01 fd       	sbrc	r16, 1
    14a4:	03 c0       	rjmp	.+6      	; 0x14ac <vfprintf+0x338>
    14a6:	88 e7       	ldi	r24, 0x78	; 120
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	0e c0       	rjmp	.+28     	; 0x14c8 <vfprintf+0x354>
    14ac:	88 e5       	ldi	r24, 0x58	; 88
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	0b c0       	rjmp	.+22     	; 0x14c8 <vfprintf+0x354>
    14b2:	80 2f       	mov	r24, r16
    14b4:	86 78       	andi	r24, 0x86	; 134
    14b6:	81 f0       	breq	.+32     	; 0x14d8 <vfprintf+0x364>
    14b8:	01 ff       	sbrs	r16, 1
    14ba:	02 c0       	rjmp	.+4      	; 0x14c0 <vfprintf+0x34c>
    14bc:	8b e2       	ldi	r24, 0x2B	; 43
    14be:	01 c0       	rjmp	.+2      	; 0x14c2 <vfprintf+0x34e>
    14c0:	80 e2       	ldi	r24, 0x20	; 32
    14c2:	f7 fc       	sbrc	r15, 7
    14c4:	8d e2       	ldi	r24, 0x2D	; 45
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	b3 01       	movw	r22, r6
    14ca:	ae d1       	rcall	.+860    	; 0x1828 <fputc>
    14cc:	05 c0       	rjmp	.+10     	; 0x14d8 <vfprintf+0x364>
    14ce:	80 e3       	ldi	r24, 0x30	; 48
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	b3 01       	movw	r22, r6
    14d4:	a9 d1       	rcall	.+850    	; 0x1828 <fputc>
    14d6:	9a 94       	dec	r9
    14d8:	d9 14       	cp	r13, r9
    14da:	c8 f3       	brcs	.-14     	; 0x14ce <vfprintf+0x35a>
    14dc:	da 94       	dec	r13
    14de:	f1 01       	movw	r30, r2
    14e0:	ed 0d       	add	r30, r13
    14e2:	f1 1d       	adc	r31, r1
    14e4:	80 81       	ld	r24, Z
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	b3 01       	movw	r22, r6
    14ea:	9e d1       	rcall	.+828    	; 0x1828 <fputc>
    14ec:	dd 20       	and	r13, r13
    14ee:	b1 f7       	brne	.-20     	; 0x14dc <vfprintf+0x368>
    14f0:	05 c0       	rjmp	.+10     	; 0x14fc <vfprintf+0x388>
    14f2:	80 e2       	ldi	r24, 0x20	; 32
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	b3 01       	movw	r22, r6
    14f8:	97 d1       	rcall	.+814    	; 0x1828 <fputc>
    14fa:	ea 94       	dec	r14
    14fc:	ee 20       	and	r14, r14
    14fe:	c9 f7       	brne	.-14     	; 0x14f2 <vfprintf+0x37e>
    1500:	50 ce       	rjmp	.-864    	; 0x11a2 <vfprintf+0x2e>
    1502:	f3 01       	movw	r30, r6
    1504:	66 81       	ldd	r22, Z+6	; 0x06
    1506:	77 81       	ldd	r23, Z+7	; 0x07
    1508:	cb 01       	movw	r24, r22
    150a:	2b 96       	adiw	r28, 0x0b	; 11
    150c:	e2 e1       	ldi	r30, 0x12	; 18
    150e:	f3 cd       	rjmp	.-1050   	; 0x10f6 <__epilogue_restores__>

00001510 <strtod>:
    1510:	a0 e0       	ldi	r26, 0x00	; 0
    1512:	b0 e0       	ldi	r27, 0x00	; 0
    1514:	ed e8       	ldi	r30, 0x8D	; 141
    1516:	fa e0       	ldi	r31, 0x0A	; 10
    1518:	d8 cd       	rjmp	.-1104   	; 0x10ca <__prologue_saves__+0xc>
    151a:	ec 01       	movw	r28, r24
    151c:	5b 01       	movw	r10, r22
    151e:	61 15       	cp	r22, r1
    1520:	71 05       	cpc	r23, r1
    1522:	19 f0       	breq	.+6      	; 0x152a <strtod+0x1a>
    1524:	fb 01       	movw	r30, r22
    1526:	91 83       	std	Z+1, r25	; 0x01
    1528:	80 83       	st	Z, r24
    152a:	f9 90       	ld	r15, Y+
    152c:	8f 2d       	mov	r24, r15
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	45 d1       	rcall	.+650    	; 0x17bc <isspace>
    1532:	89 2b       	or	r24, r25
    1534:	d1 f7       	brne	.-12     	; 0x152a <strtod+0x1a>
    1536:	fd e2       	ldi	r31, 0x2D	; 45
    1538:	ff 16       	cp	r15, r31
    153a:	21 f4       	brne	.+8      	; 0x1544 <strtod+0x34>
    153c:	f9 90       	ld	r15, Y+
    153e:	ee 24       	eor	r14, r14
    1540:	e3 94       	inc	r14
    1542:	05 c0       	rjmp	.+10     	; 0x154e <strtod+0x3e>
    1544:	2b e2       	ldi	r18, 0x2B	; 43
    1546:	f2 16       	cp	r15, r18
    1548:	09 f4       	brne	.+2      	; 0x154c <strtod+0x3c>
    154a:	f9 90       	ld	r15, Y+
    154c:	ee 24       	eor	r14, r14
    154e:	8e 01       	movw	r16, r28
    1550:	01 50       	subi	r16, 0x01	; 1
    1552:	10 40       	sbci	r17, 0x00	; 0
    1554:	c8 01       	movw	r24, r16
    1556:	6a e2       	ldi	r22, 0x2A	; 42
    1558:	70 e0       	ldi	r23, 0x00	; 0
    155a:	43 e0       	ldi	r20, 0x03	; 3
    155c:	50 e0       	ldi	r21, 0x00	; 0
    155e:	36 d1       	rcall	.+620    	; 0x17cc <strncasecmp_P>
    1560:	89 2b       	or	r24, r25
    1562:	f9 f4       	brne	.+62     	; 0x15a2 <strtod+0x92>
    1564:	8e 01       	movw	r16, r28
    1566:	0e 5f       	subi	r16, 0xFE	; 254
    1568:	1f 4f       	sbci	r17, 0xFF	; 255
    156a:	c8 01       	movw	r24, r16
    156c:	6d e2       	ldi	r22, 0x2D	; 45
    156e:	70 e0       	ldi	r23, 0x00	; 0
    1570:	45 e0       	ldi	r20, 0x05	; 5
    1572:	50 e0       	ldi	r21, 0x00	; 0
    1574:	2b d1       	rcall	.+598    	; 0x17cc <strncasecmp_P>
    1576:	89 2b       	or	r24, r25
    1578:	19 f4       	brne	.+6      	; 0x1580 <strtod+0x70>
    157a:	8e 01       	movw	r16, r28
    157c:	09 5f       	subi	r16, 0xF9	; 249
    157e:	1f 4f       	sbci	r17, 0xFF	; 255
    1580:	a1 14       	cp	r10, r1
    1582:	b1 04       	cpc	r11, r1
    1584:	19 f0       	breq	.+6      	; 0x158c <strtod+0x7c>
    1586:	f5 01       	movw	r30, r10
    1588:	11 83       	std	Z+1, r17	; 0x01
    158a:	00 83       	st	Z, r16
    158c:	e0 fc       	sbrc	r14, 0
    158e:	04 c0       	rjmp	.+8      	; 0x1598 <strtod+0x88>
    1590:	70 e0       	ldi	r23, 0x00	; 0
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	80 e8       	ldi	r24, 0x80	; 128
    1596:	13 c0       	rjmp	.+38     	; 0x15be <strtod+0xae>
    1598:	70 e0       	ldi	r23, 0x00	; 0
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	80 e8       	ldi	r24, 0x80	; 128
    159e:	6f ef       	ldi	r22, 0xFF	; 255
    15a0:	03 c1       	rjmp	.+518    	; 0x17a8 <strtod+0x298>
    15a2:	c8 01       	movw	r24, r16
    15a4:	62 e3       	ldi	r22, 0x32	; 50
    15a6:	70 e0       	ldi	r23, 0x00	; 0
    15a8:	43 e0       	ldi	r20, 0x03	; 3
    15aa:	50 e0       	ldi	r21, 0x00	; 0
    15ac:	0f d1       	rcall	.+542    	; 0x17cc <strncasecmp_P>
    15ae:	89 2b       	or	r24, r25
    15b0:	69 f4       	brne	.+26     	; 0x15cc <strtod+0xbc>
    15b2:	a1 14       	cp	r10, r1
    15b4:	b1 04       	cpc	r11, r1
    15b6:	29 f4       	brne	.+10     	; 0x15c2 <strtod+0xb2>
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	80 ec       	ldi	r24, 0xC0	; 192
    15be:	6f e7       	ldi	r22, 0x7F	; 127
    15c0:	f3 c0       	rjmp	.+486    	; 0x17a8 <strtod+0x298>
    15c2:	22 96       	adiw	r28, 0x02	; 2
    15c4:	f5 01       	movw	r30, r10
    15c6:	d1 83       	std	Z+1, r29	; 0x01
    15c8:	c0 83       	st	Z, r28
    15ca:	f6 cf       	rjmp	.-20     	; 0x15b8 <strtod+0xa8>
    15cc:	88 24       	eor	r8, r8
    15ce:	99 24       	eor	r9, r9
    15d0:	40 e0       	ldi	r20, 0x00	; 0
    15d2:	50 e0       	ldi	r21, 0x00	; 0
    15d4:	60 e0       	ldi	r22, 0x00	; 0
    15d6:	70 e0       	ldi	r23, 0x00	; 0
    15d8:	ef 2d       	mov	r30, r15
    15da:	e0 53       	subi	r30, 0x30	; 48
    15dc:	ea 30       	cpi	r30, 0x0A	; 10
    15de:	a0 f5       	brcc	.+104    	; 0x1648 <strtod+0x138>
    15e0:	f2 e0       	ldi	r31, 0x02	; 2
    15e2:	ef 2a       	or	r14, r31
    15e4:	8e 2d       	mov	r24, r14
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	9c 01       	movw	r18, r24
    15ea:	28 70       	andi	r18, 0x08	; 8
    15ec:	30 70       	andi	r19, 0x00	; 0
    15ee:	e2 fe       	sbrs	r14, 2
    15f0:	06 c0       	rjmp	.+12     	; 0x15fe <strtod+0xee>
    15f2:	23 2b       	or	r18, r19
    15f4:	79 f5       	brne	.+94     	; 0x1654 <strtod+0x144>
    15f6:	08 94       	sec
    15f8:	81 1c       	adc	r8, r1
    15fa:	91 1c       	adc	r9, r1
    15fc:	2b c0       	rjmp	.+86     	; 0x1654 <strtod+0x144>
    15fe:	23 2b       	or	r18, r19
    1600:	19 f0       	breq	.+6      	; 0x1608 <strtod+0xf8>
    1602:	08 94       	sec
    1604:	81 08       	sbc	r8, r1
    1606:	91 08       	sbc	r9, r1
    1608:	db 01       	movw	r26, r22
    160a:	ca 01       	movw	r24, r20
    160c:	12 e0       	ldi	r17, 0x02	; 2
    160e:	88 0f       	add	r24, r24
    1610:	99 1f       	adc	r25, r25
    1612:	aa 1f       	adc	r26, r26
    1614:	bb 1f       	adc	r27, r27
    1616:	1a 95       	dec	r17
    1618:	d1 f7       	brne	.-12     	; 0x160e <strtod+0xfe>
    161a:	48 0f       	add	r20, r24
    161c:	59 1f       	adc	r21, r25
    161e:	6a 1f       	adc	r22, r26
    1620:	7b 1f       	adc	r23, r27
    1622:	44 0f       	add	r20, r20
    1624:	55 1f       	adc	r21, r21
    1626:	66 1f       	adc	r22, r22
    1628:	77 1f       	adc	r23, r23
    162a:	4e 0f       	add	r20, r30
    162c:	51 1d       	adc	r21, r1
    162e:	61 1d       	adc	r22, r1
    1630:	71 1d       	adc	r23, r1
    1632:	48 39       	cpi	r20, 0x98	; 152
    1634:	29 e9       	ldi	r18, 0x99	; 153
    1636:	52 07       	cpc	r21, r18
    1638:	29 e9       	ldi	r18, 0x99	; 153
    163a:	62 07       	cpc	r22, r18
    163c:	29 e1       	ldi	r18, 0x19	; 25
    163e:	72 07       	cpc	r23, r18
    1640:	48 f0       	brcs	.+18     	; 0x1654 <strtod+0x144>
    1642:	84 e0       	ldi	r24, 0x04	; 4
    1644:	e8 2a       	or	r14, r24
    1646:	06 c0       	rjmp	.+12     	; 0x1654 <strtod+0x144>
    1648:	ee 3f       	cpi	r30, 0xFE	; 254
    164a:	31 f4       	brne	.+12     	; 0x1658 <strtod+0x148>
    164c:	e3 fc       	sbrc	r14, 3
    164e:	39 c0       	rjmp	.+114    	; 0x16c2 <strtod+0x1b2>
    1650:	98 e0       	ldi	r25, 0x08	; 8
    1652:	e9 2a       	or	r14, r25
    1654:	f9 90       	ld	r15, Y+
    1656:	c0 cf       	rjmp	.-128    	; 0x15d8 <strtod+0xc8>
    1658:	e5 33       	cpi	r30, 0x35	; 53
    165a:	11 f0       	breq	.+4      	; 0x1660 <strtod+0x150>
    165c:	e5 31       	cpi	r30, 0x15	; 21
    165e:	89 f5       	brne	.+98     	; 0x16c2 <strtod+0x1b2>
    1660:	29 91       	ld	r18, Y+
    1662:	2d 32       	cpi	r18, 0x2D	; 45
    1664:	19 f4       	brne	.+6      	; 0x166c <strtod+0x15c>
    1666:	e0 e1       	ldi	r30, 0x10	; 16
    1668:	ee 2a       	or	r14, r30
    166a:	05 c0       	rjmp	.+10     	; 0x1676 <strtod+0x166>
    166c:	2b 32       	cpi	r18, 0x2B	; 43
    166e:	19 f0       	breq	.+6      	; 0x1676 <strtod+0x166>
    1670:	81 e0       	ldi	r24, 0x01	; 1
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	03 c0       	rjmp	.+6      	; 0x167c <strtod+0x16c>
    1676:	29 91       	ld	r18, Y+
    1678:	82 e0       	ldi	r24, 0x02	; 2
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	e2 2f       	mov	r30, r18
    167e:	e0 53       	subi	r30, 0x30	; 48
    1680:	ea 30       	cpi	r30, 0x0A	; 10
    1682:	18 f0       	brcs	.+6      	; 0x168a <strtod+0x17a>
    1684:	c8 1b       	sub	r28, r24
    1686:	d9 0b       	sbc	r29, r25
    1688:	1c c0       	rjmp	.+56     	; 0x16c2 <strtod+0x1b2>
    168a:	20 e0       	ldi	r18, 0x00	; 0
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	fc e0       	ldi	r31, 0x0C	; 12
    1690:	20 38       	cpi	r18, 0x80	; 128
    1692:	3f 07       	cpc	r19, r31
    1694:	5c f4       	brge	.+22     	; 0x16ac <strtod+0x19c>
    1696:	c9 01       	movw	r24, r18
    1698:	88 0f       	add	r24, r24
    169a:	99 1f       	adc	r25, r25
    169c:	88 0f       	add	r24, r24
    169e:	99 1f       	adc	r25, r25
    16a0:	28 0f       	add	r18, r24
    16a2:	39 1f       	adc	r19, r25
    16a4:	22 0f       	add	r18, r18
    16a6:	33 1f       	adc	r19, r19
    16a8:	2e 0f       	add	r18, r30
    16aa:	31 1d       	adc	r19, r1
    16ac:	e9 91       	ld	r30, Y+
    16ae:	e0 53       	subi	r30, 0x30	; 48
    16b0:	ea 30       	cpi	r30, 0x0A	; 10
    16b2:	68 f3       	brcs	.-38     	; 0x168e <strtod+0x17e>
    16b4:	e4 fe       	sbrs	r14, 4
    16b6:	03 c0       	rjmp	.+6      	; 0x16be <strtod+0x1ae>
    16b8:	30 95       	com	r19
    16ba:	21 95       	neg	r18
    16bc:	3f 4f       	sbci	r19, 0xFF	; 255
    16be:	82 0e       	add	r8, r18
    16c0:	93 1e       	adc	r9, r19
    16c2:	ce 2c       	mov	r12, r14
    16c4:	dd 24       	eor	r13, r13
    16c6:	e1 fe       	sbrs	r14, 1
    16c8:	07 c0       	rjmp	.+14     	; 0x16d8 <strtod+0x1c8>
    16ca:	a1 14       	cp	r10, r1
    16cc:	b1 04       	cpc	r11, r1
    16ce:	21 f0       	breq	.+8      	; 0x16d8 <strtod+0x1c8>
    16d0:	21 97       	sbiw	r28, 0x01	; 1
    16d2:	f5 01       	movw	r30, r10
    16d4:	d1 83       	std	Z+1, r29	; 0x01
    16d6:	c0 83       	st	Z, r28
    16d8:	cb 01       	movw	r24, r22
    16da:	ba 01       	movw	r22, r20
    16dc:	33 d1       	rcall	.+614    	; 0x1944 <__floatunsisf>
    16de:	7b 01       	movw	r14, r22
    16e0:	8c 01       	movw	r16, r24
    16e2:	f3 e0       	ldi	r31, 0x03	; 3
    16e4:	cf 22       	and	r12, r31
    16e6:	dd 24       	eor	r13, r13
    16e8:	23 e0       	ldi	r18, 0x03	; 3
    16ea:	c2 16       	cp	r12, r18
    16ec:	d1 04       	cpc	r13, r1
    16ee:	21 f4       	brne	.+8      	; 0x16f8 <strtod+0x1e8>
    16f0:	17 fb       	bst	r17, 7
    16f2:	10 95       	com	r17
    16f4:	17 f9       	bld	r17, 7
    16f6:	10 95       	com	r17
    16f8:	57 01       	movw	r10, r14
    16fa:	68 01       	movw	r12, r16
    16fc:	c8 01       	movw	r24, r16
    16fe:	b7 01       	movw	r22, r14
    1700:	20 e0       	ldi	r18, 0x00	; 0
    1702:	30 e0       	ldi	r19, 0x00	; 0
    1704:	40 e0       	ldi	r20, 0x00	; 0
    1706:	50 e0       	ldi	r21, 0x00	; 0
    1708:	19 d1       	rcall	.+562    	; 0x193c <__cmpsf2>
    170a:	88 23       	and	r24, r24
    170c:	09 f4       	brne	.+2      	; 0x1710 <strtod+0x200>
    170e:	48 c0       	rjmp	.+144    	; 0x17a0 <strtod+0x290>
    1710:	97 fe       	sbrs	r9, 7
    1712:	0d c0       	rjmp	.+26     	; 0x172e <strtod+0x21e>
    1714:	29 e4       	ldi	r18, 0x49	; 73
    1716:	e2 2e       	mov	r14, r18
    1718:	20 e0       	ldi	r18, 0x00	; 0
    171a:	f2 2e       	mov	r15, r18
    171c:	90 94       	com	r9
    171e:	81 94       	neg	r8
    1720:	91 08       	sbc	r9, r1
    1722:	93 94       	inc	r9
    1724:	c0 e2       	ldi	r28, 0x20	; 32
    1726:	d0 e0       	ldi	r29, 0x00	; 0
    1728:	00 e0       	ldi	r16, 0x00	; 0
    172a:	10 e0       	ldi	r17, 0x00	; 0
    172c:	11 c0       	rjmp	.+34     	; 0x1750 <strtod+0x240>
    172e:	91 e6       	ldi	r25, 0x61	; 97
    1730:	e9 2e       	mov	r14, r25
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	f9 2e       	mov	r15, r25
    1736:	f6 cf       	rjmp	.-20     	; 0x1724 <strtod+0x214>
    1738:	f7 01       	movw	r30, r14
    173a:	25 91       	lpm	r18, Z+
    173c:	35 91       	lpm	r19, Z+
    173e:	45 91       	lpm	r20, Z+
    1740:	54 91       	lpm	r21, Z+
    1742:	c6 01       	movw	r24, r12
    1744:	b5 01       	movw	r22, r10
    1746:	d2 d9       	rcall	.-3164   	; 0xaec <__mulsf3>
    1748:	5b 01       	movw	r10, r22
    174a:	6c 01       	movw	r12, r24
    174c:	8c 1a       	sub	r8, r28
    174e:	9d 0a       	sbc	r9, r29
    1750:	8c 16       	cp	r8, r28
    1752:	9d 06       	cpc	r9, r29
    1754:	8c f7       	brge	.-30     	; 0x1738 <strtod+0x228>
    1756:	d5 95       	asr	r29
    1758:	c7 95       	ror	r28
    175a:	0f 5f       	subi	r16, 0xFF	; 255
    175c:	1f 4f       	sbci	r17, 0xFF	; 255
    175e:	06 30       	cpi	r16, 0x06	; 6
    1760:	11 05       	cpc	r17, r1
    1762:	29 f0       	breq	.+10     	; 0x176e <strtod+0x25e>
    1764:	8c ef       	ldi	r24, 0xFC	; 252
    1766:	9f ef       	ldi	r25, 0xFF	; 255
    1768:	e8 0e       	add	r14, r24
    176a:	f9 1e       	adc	r15, r25
    176c:	f1 cf       	rjmp	.-30     	; 0x1750 <strtod+0x240>
    176e:	c5 01       	movw	r24, r10
    1770:	d6 01       	movw	r26, r12
    1772:	7c 01       	movw	r14, r24
    1774:	8d 01       	movw	r16, r26
    1776:	8c 2d       	mov	r24, r12
    1778:	88 0f       	add	r24, r24
    177a:	8d 2d       	mov	r24, r13
    177c:	88 1f       	adc	r24, r24
    177e:	8f 3f       	cpi	r24, 0xFF	; 255
    1780:	49 f0       	breq	.+18     	; 0x1794 <strtod+0x284>
    1782:	c6 01       	movw	r24, r12
    1784:	b5 01       	movw	r22, r10
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	50 e0       	ldi	r21, 0x00	; 0
    178e:	d6 d0       	rcall	.+428    	; 0x193c <__cmpsf2>
    1790:	88 23       	and	r24, r24
    1792:	31 f4       	brne	.+12     	; 0x17a0 <strtod+0x290>
    1794:	82 e2       	ldi	r24, 0x22	; 34
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	90 93 71 00 	sts	0x0071, r25
    179c:	80 93 70 00 	sts	0x0070, r24
    17a0:	7e 2d       	mov	r23, r14
    17a2:	9f 2d       	mov	r25, r15
    17a4:	80 2f       	mov	r24, r16
    17a6:	61 2f       	mov	r22, r17
    17a8:	27 2f       	mov	r18, r23
    17aa:	39 2f       	mov	r19, r25
    17ac:	48 2f       	mov	r20, r24
    17ae:	56 2f       	mov	r21, r22
    17b0:	b9 01       	movw	r22, r18
    17b2:	ca 01       	movw	r24, r20
    17b4:	cd b7       	in	r28, 0x3d	; 61
    17b6:	de b7       	in	r29, 0x3e	; 62
    17b8:	ec e0       	ldi	r30, 0x0C	; 12
    17ba:	a3 cc       	rjmp	.-1722   	; 0x1102 <__epilogue_restores__+0xc>

000017bc <isspace>:
    17bc:	91 11       	cpse	r25, r1
    17be:	23 c1       	rjmp	.+582    	; 0x1a06 <__ctype_isfalse>
    17c0:	80 32       	cpi	r24, 0x20	; 32
    17c2:	19 f0       	breq	.+6      	; 0x17ca <isspace+0xe>
    17c4:	89 50       	subi	r24, 0x09	; 9
    17c6:	85 50       	subi	r24, 0x05	; 5
    17c8:	d0 f7       	brcc	.-12     	; 0x17be <isspace+0x2>
    17ca:	08 95       	ret

000017cc <strncasecmp_P>:
    17cc:	fb 01       	movw	r30, r22
    17ce:	dc 01       	movw	r26, r24
    17d0:	41 50       	subi	r20, 0x01	; 1
    17d2:	50 40       	sbci	r21, 0x00	; 0
    17d4:	88 f0       	brcs	.+34     	; 0x17f8 <strncasecmp_P+0x2c>
    17d6:	8d 91       	ld	r24, X+
    17d8:	81 34       	cpi	r24, 0x41	; 65
    17da:	1c f0       	brlt	.+6      	; 0x17e2 <strncasecmp_P+0x16>
    17dc:	8b 35       	cpi	r24, 0x5B	; 91
    17de:	0c f4       	brge	.+2      	; 0x17e2 <strncasecmp_P+0x16>
    17e0:	80 5e       	subi	r24, 0xE0	; 224
    17e2:	65 91       	lpm	r22, Z+
    17e4:	61 34       	cpi	r22, 0x41	; 65
    17e6:	1c f0       	brlt	.+6      	; 0x17ee <strncasecmp_P+0x22>
    17e8:	6b 35       	cpi	r22, 0x5B	; 91
    17ea:	0c f4       	brge	.+2      	; 0x17ee <strncasecmp_P+0x22>
    17ec:	60 5e       	subi	r22, 0xE0	; 224
    17ee:	86 1b       	sub	r24, r22
    17f0:	61 11       	cpse	r22, r1
    17f2:	71 f3       	breq	.-36     	; 0x17d0 <strncasecmp_P+0x4>
    17f4:	99 0b       	sbc	r25, r25
    17f6:	08 95       	ret
    17f8:	88 1b       	sub	r24, r24
    17fa:	fc cf       	rjmp	.-8      	; 0x17f4 <strncasecmp_P+0x28>

000017fc <strnlen_P>:
    17fc:	fc 01       	movw	r30, r24
    17fe:	05 90       	lpm	r0, Z+
    1800:	61 50       	subi	r22, 0x01	; 1
    1802:	70 40       	sbci	r23, 0x00	; 0
    1804:	01 10       	cpse	r0, r1
    1806:	d8 f7       	brcc	.-10     	; 0x17fe <strnlen_P+0x2>
    1808:	80 95       	com	r24
    180a:	90 95       	com	r25
    180c:	8e 0f       	add	r24, r30
    180e:	9f 1f       	adc	r25, r31
    1810:	08 95       	ret

00001812 <strnlen>:
    1812:	fc 01       	movw	r30, r24
    1814:	61 50       	subi	r22, 0x01	; 1
    1816:	70 40       	sbci	r23, 0x00	; 0
    1818:	01 90       	ld	r0, Z+
    181a:	01 10       	cpse	r0, r1
    181c:	d8 f7       	brcc	.-10     	; 0x1814 <strnlen+0x2>
    181e:	80 95       	com	r24
    1820:	90 95       	com	r25
    1822:	8e 0f       	add	r24, r30
    1824:	9f 1f       	adc	r25, r31
    1826:	08 95       	ret

00001828 <fputc>:
    1828:	0f 93       	push	r16
    182a:	1f 93       	push	r17
    182c:	cf 93       	push	r28
    182e:	df 93       	push	r29
    1830:	8c 01       	movw	r16, r24
    1832:	eb 01       	movw	r28, r22
    1834:	8b 81       	ldd	r24, Y+3	; 0x03
    1836:	81 ff       	sbrs	r24, 1
    1838:	1b c0       	rjmp	.+54     	; 0x1870 <fputc+0x48>
    183a:	82 ff       	sbrs	r24, 2
    183c:	0d c0       	rjmp	.+26     	; 0x1858 <fputc+0x30>
    183e:	2e 81       	ldd	r18, Y+6	; 0x06
    1840:	3f 81       	ldd	r19, Y+7	; 0x07
    1842:	8c 81       	ldd	r24, Y+4	; 0x04
    1844:	9d 81       	ldd	r25, Y+5	; 0x05
    1846:	28 17       	cp	r18, r24
    1848:	39 07       	cpc	r19, r25
    184a:	64 f4       	brge	.+24     	; 0x1864 <fputc+0x3c>
    184c:	e8 81       	ld	r30, Y
    184e:	f9 81       	ldd	r31, Y+1	; 0x01
    1850:	01 93       	st	Z+, r16
    1852:	f9 83       	std	Y+1, r31	; 0x01
    1854:	e8 83       	st	Y, r30
    1856:	06 c0       	rjmp	.+12     	; 0x1864 <fputc+0x3c>
    1858:	e8 85       	ldd	r30, Y+8	; 0x08
    185a:	f9 85       	ldd	r31, Y+9	; 0x09
    185c:	80 2f       	mov	r24, r16
    185e:	09 95       	icall
    1860:	89 2b       	or	r24, r25
    1862:	31 f4       	brne	.+12     	; 0x1870 <fputc+0x48>
    1864:	8e 81       	ldd	r24, Y+6	; 0x06
    1866:	9f 81       	ldd	r25, Y+7	; 0x07
    1868:	01 96       	adiw	r24, 0x01	; 1
    186a:	9f 83       	std	Y+7, r25	; 0x07
    186c:	8e 83       	std	Y+6, r24	; 0x06
    186e:	02 c0       	rjmp	.+4      	; 0x1874 <fputc+0x4c>
    1870:	0f ef       	ldi	r16, 0xFF	; 255
    1872:	1f ef       	ldi	r17, 0xFF	; 255
    1874:	c8 01       	movw	r24, r16
    1876:	df 91       	pop	r29
    1878:	cf 91       	pop	r28
    187a:	1f 91       	pop	r17
    187c:	0f 91       	pop	r16
    187e:	08 95       	ret

00001880 <__ultoa_invert>:
    1880:	fa 01       	movw	r30, r20
    1882:	aa 27       	eor	r26, r26
    1884:	28 30       	cpi	r18, 0x08	; 8
    1886:	51 f1       	breq	.+84     	; 0x18dc <__ultoa_invert+0x5c>
    1888:	20 31       	cpi	r18, 0x10	; 16
    188a:	81 f1       	breq	.+96     	; 0x18ec <__ultoa_invert+0x6c>
    188c:	e8 94       	clt
    188e:	6f 93       	push	r22
    1890:	6e 7f       	andi	r22, 0xFE	; 254
    1892:	6e 5f       	subi	r22, 0xFE	; 254
    1894:	7f 4f       	sbci	r23, 0xFF	; 255
    1896:	8f 4f       	sbci	r24, 0xFF	; 255
    1898:	9f 4f       	sbci	r25, 0xFF	; 255
    189a:	af 4f       	sbci	r26, 0xFF	; 255
    189c:	b1 e0       	ldi	r27, 0x01	; 1
    189e:	3e d0       	rcall	.+124    	; 0x191c <__ultoa_invert+0x9c>
    18a0:	b4 e0       	ldi	r27, 0x04	; 4
    18a2:	3c d0       	rcall	.+120    	; 0x191c <__ultoa_invert+0x9c>
    18a4:	67 0f       	add	r22, r23
    18a6:	78 1f       	adc	r23, r24
    18a8:	89 1f       	adc	r24, r25
    18aa:	9a 1f       	adc	r25, r26
    18ac:	a1 1d       	adc	r26, r1
    18ae:	68 0f       	add	r22, r24
    18b0:	79 1f       	adc	r23, r25
    18b2:	8a 1f       	adc	r24, r26
    18b4:	91 1d       	adc	r25, r1
    18b6:	a1 1d       	adc	r26, r1
    18b8:	6a 0f       	add	r22, r26
    18ba:	71 1d       	adc	r23, r1
    18bc:	81 1d       	adc	r24, r1
    18be:	91 1d       	adc	r25, r1
    18c0:	a1 1d       	adc	r26, r1
    18c2:	20 d0       	rcall	.+64     	; 0x1904 <__ultoa_invert+0x84>
    18c4:	09 f4       	brne	.+2      	; 0x18c8 <__ultoa_invert+0x48>
    18c6:	68 94       	set
    18c8:	3f 91       	pop	r19
    18ca:	2a e0       	ldi	r18, 0x0A	; 10
    18cc:	26 9f       	mul	r18, r22
    18ce:	11 24       	eor	r1, r1
    18d0:	30 19       	sub	r19, r0
    18d2:	30 5d       	subi	r19, 0xD0	; 208
    18d4:	31 93       	st	Z+, r19
    18d6:	de f6       	brtc	.-74     	; 0x188e <__ultoa_invert+0xe>
    18d8:	cf 01       	movw	r24, r30
    18da:	08 95       	ret
    18dc:	46 2f       	mov	r20, r22
    18de:	47 70       	andi	r20, 0x07	; 7
    18e0:	40 5d       	subi	r20, 0xD0	; 208
    18e2:	41 93       	st	Z+, r20
    18e4:	b3 e0       	ldi	r27, 0x03	; 3
    18e6:	0f d0       	rcall	.+30     	; 0x1906 <__ultoa_invert+0x86>
    18e8:	c9 f7       	brne	.-14     	; 0x18dc <__ultoa_invert+0x5c>
    18ea:	f6 cf       	rjmp	.-20     	; 0x18d8 <__ultoa_invert+0x58>
    18ec:	46 2f       	mov	r20, r22
    18ee:	4f 70       	andi	r20, 0x0F	; 15
    18f0:	40 5d       	subi	r20, 0xD0	; 208
    18f2:	4a 33       	cpi	r20, 0x3A	; 58
    18f4:	18 f0       	brcs	.+6      	; 0x18fc <__ultoa_invert+0x7c>
    18f6:	49 5d       	subi	r20, 0xD9	; 217
    18f8:	31 fd       	sbrc	r19, 1
    18fa:	40 52       	subi	r20, 0x20	; 32
    18fc:	41 93       	st	Z+, r20
    18fe:	02 d0       	rcall	.+4      	; 0x1904 <__ultoa_invert+0x84>
    1900:	a9 f7       	brne	.-22     	; 0x18ec <__ultoa_invert+0x6c>
    1902:	ea cf       	rjmp	.-44     	; 0x18d8 <__ultoa_invert+0x58>
    1904:	b4 e0       	ldi	r27, 0x04	; 4
    1906:	a6 95       	lsr	r26
    1908:	97 95       	ror	r25
    190a:	87 95       	ror	r24
    190c:	77 95       	ror	r23
    190e:	67 95       	ror	r22
    1910:	ba 95       	dec	r27
    1912:	c9 f7       	brne	.-14     	; 0x1906 <__ultoa_invert+0x86>
    1914:	00 97       	sbiw	r24, 0x00	; 0
    1916:	61 05       	cpc	r22, r1
    1918:	71 05       	cpc	r23, r1
    191a:	08 95       	ret
    191c:	9b 01       	movw	r18, r22
    191e:	ac 01       	movw	r20, r24
    1920:	0a 2e       	mov	r0, r26
    1922:	06 94       	lsr	r0
    1924:	57 95       	ror	r21
    1926:	47 95       	ror	r20
    1928:	37 95       	ror	r19
    192a:	27 95       	ror	r18
    192c:	ba 95       	dec	r27
    192e:	c9 f7       	brne	.-14     	; 0x1922 <__ultoa_invert+0xa2>
    1930:	62 0f       	add	r22, r18
    1932:	73 1f       	adc	r23, r19
    1934:	84 1f       	adc	r24, r20
    1936:	95 1f       	adc	r25, r21
    1938:	a0 1d       	adc	r26, r0
    193a:	08 95       	ret

0000193c <__cmpsf2>:
    193c:	40 d0       	rcall	.+128    	; 0x19be <__fp_cmp>
    193e:	08 f4       	brcc	.+2      	; 0x1942 <__cmpsf2+0x6>
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	08 95       	ret

00001944 <__floatunsisf>:
    1944:	e8 94       	clt
    1946:	09 c0       	rjmp	.+18     	; 0x195a <__floatsisf+0x12>

00001948 <__floatsisf>:
    1948:	97 fb       	bst	r25, 7
    194a:	3e f4       	brtc	.+14     	; 0x195a <__floatsisf+0x12>
    194c:	90 95       	com	r25
    194e:	80 95       	com	r24
    1950:	70 95       	com	r23
    1952:	61 95       	neg	r22
    1954:	7f 4f       	sbci	r23, 0xFF	; 255
    1956:	8f 4f       	sbci	r24, 0xFF	; 255
    1958:	9f 4f       	sbci	r25, 0xFF	; 255
    195a:	99 23       	and	r25, r25
    195c:	a9 f0       	breq	.+42     	; 0x1988 <__floatsisf+0x40>
    195e:	f9 2f       	mov	r31, r25
    1960:	96 e9       	ldi	r25, 0x96	; 150
    1962:	bb 27       	eor	r27, r27
    1964:	93 95       	inc	r25
    1966:	f6 95       	lsr	r31
    1968:	87 95       	ror	r24
    196a:	77 95       	ror	r23
    196c:	67 95       	ror	r22
    196e:	b7 95       	ror	r27
    1970:	f1 11       	cpse	r31, r1
    1972:	f8 cf       	rjmp	.-16     	; 0x1964 <__floatsisf+0x1c>
    1974:	fa f4       	brpl	.+62     	; 0x19b4 <__floatsisf+0x6c>
    1976:	bb 0f       	add	r27, r27
    1978:	11 f4       	brne	.+4      	; 0x197e <__floatsisf+0x36>
    197a:	60 ff       	sbrs	r22, 0
    197c:	1b c0       	rjmp	.+54     	; 0x19b4 <__floatsisf+0x6c>
    197e:	6f 5f       	subi	r22, 0xFF	; 255
    1980:	7f 4f       	sbci	r23, 0xFF	; 255
    1982:	8f 4f       	sbci	r24, 0xFF	; 255
    1984:	9f 4f       	sbci	r25, 0xFF	; 255
    1986:	16 c0       	rjmp	.+44     	; 0x19b4 <__floatsisf+0x6c>
    1988:	88 23       	and	r24, r24
    198a:	11 f0       	breq	.+4      	; 0x1990 <__floatsisf+0x48>
    198c:	96 e9       	ldi	r25, 0x96	; 150
    198e:	11 c0       	rjmp	.+34     	; 0x19b2 <__floatsisf+0x6a>
    1990:	77 23       	and	r23, r23
    1992:	21 f0       	breq	.+8      	; 0x199c <__floatsisf+0x54>
    1994:	9e e8       	ldi	r25, 0x8E	; 142
    1996:	87 2f       	mov	r24, r23
    1998:	76 2f       	mov	r23, r22
    199a:	05 c0       	rjmp	.+10     	; 0x19a6 <__floatsisf+0x5e>
    199c:	66 23       	and	r22, r22
    199e:	71 f0       	breq	.+28     	; 0x19bc <__floatsisf+0x74>
    19a0:	96 e8       	ldi	r25, 0x86	; 134
    19a2:	86 2f       	mov	r24, r22
    19a4:	70 e0       	ldi	r23, 0x00	; 0
    19a6:	60 e0       	ldi	r22, 0x00	; 0
    19a8:	2a f0       	brmi	.+10     	; 0x19b4 <__floatsisf+0x6c>
    19aa:	9a 95       	dec	r25
    19ac:	66 0f       	add	r22, r22
    19ae:	77 1f       	adc	r23, r23
    19b0:	88 1f       	adc	r24, r24
    19b2:	da f7       	brpl	.-10     	; 0x19aa <__floatsisf+0x62>
    19b4:	88 0f       	add	r24, r24
    19b6:	96 95       	lsr	r25
    19b8:	87 95       	ror	r24
    19ba:	97 f9       	bld	r25, 7
    19bc:	08 95       	ret

000019be <__fp_cmp>:
    19be:	99 0f       	add	r25, r25
    19c0:	00 08       	sbc	r0, r0
    19c2:	55 0f       	add	r21, r21
    19c4:	aa 0b       	sbc	r26, r26
    19c6:	e0 e8       	ldi	r30, 0x80	; 128
    19c8:	fe ef       	ldi	r31, 0xFE	; 254
    19ca:	16 16       	cp	r1, r22
    19cc:	17 06       	cpc	r1, r23
    19ce:	e8 07       	cpc	r30, r24
    19d0:	f9 07       	cpc	r31, r25
    19d2:	c0 f0       	brcs	.+48     	; 0x1a04 <__fp_cmp+0x46>
    19d4:	12 16       	cp	r1, r18
    19d6:	13 06       	cpc	r1, r19
    19d8:	e4 07       	cpc	r30, r20
    19da:	f5 07       	cpc	r31, r21
    19dc:	98 f0       	brcs	.+38     	; 0x1a04 <__fp_cmp+0x46>
    19de:	62 1b       	sub	r22, r18
    19e0:	73 0b       	sbc	r23, r19
    19e2:	84 0b       	sbc	r24, r20
    19e4:	95 0b       	sbc	r25, r21
    19e6:	39 f4       	brne	.+14     	; 0x19f6 <__fp_cmp+0x38>
    19e8:	0a 26       	eor	r0, r26
    19ea:	61 f0       	breq	.+24     	; 0x1a04 <__fp_cmp+0x46>
    19ec:	23 2b       	or	r18, r19
    19ee:	24 2b       	or	r18, r20
    19f0:	25 2b       	or	r18, r21
    19f2:	21 f4       	brne	.+8      	; 0x19fc <__fp_cmp+0x3e>
    19f4:	08 95       	ret
    19f6:	0a 26       	eor	r0, r26
    19f8:	09 f4       	brne	.+2      	; 0x19fc <__fp_cmp+0x3e>
    19fa:	a1 40       	sbci	r26, 0x01	; 1
    19fc:	a6 95       	lsr	r26
    19fe:	8f ef       	ldi	r24, 0xFF	; 255
    1a00:	81 1d       	adc	r24, r1
    1a02:	81 1d       	adc	r24, r1
    1a04:	08 95       	ret

00001a06 <__ctype_isfalse>:
    1a06:	99 27       	eor	r25, r25
    1a08:	88 27       	eor	r24, r24

00001a0a <__ctype_istrue>:
    1a0a:	08 95       	ret

00001a0c <_exit>:
    1a0c:	f8 94       	cli

00001a0e <__stop_program>:
    1a0e:	ff cf       	rjmp	.-2      	; 0x1a0e <__stop_program>
